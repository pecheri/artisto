{"version":3,"sources":["services/firebase.js","hooks/useUser.js","images/logo.png","components/Header.js","components/post/Header.js","components/post/Image.js","components/post/AddComment.js","components/post/Comments.js","components/post/Action.js"],"names":["cloudName","process","presets","doesUsernameExist","username","a","firebase","firestore","collection","where","get","result","console","log","docs","length","getUserByUserId","userId","user","map","item","data","docId","id","getUserByUsername","IsUserFollowingProfileUser","profileUserId","response","getFollowingPhotosByUserId","following","userFollowedPhotos","photo","Promise","all","userLikedPhoto","likes","includes","userInfo","userFollowedPhotosWithDetails","getPhotosbyUserId","photos","getLatestPhotoInfo","photoId","profileUsername","photoWithDetails","updateUserFollowing","userDocId","isUserFollowing","doc","update","FieldValue","arrayRemove","arrayUnion","updateProfileUserFollowers","profileUserDocId","followers","toggleFollow","getFollowingOrFollowersList","userIds","userList","getSearchResults","category","users","updateProfile","fullName","title","bio","imageFile","url","formData","FormData","append","Axios","post","then","secure_url","uploadNewPost","caption","add","comments","dateCreated","Date","now","imageSrc","userLatitude","userLongitude","useUser","useContext","UserContext","useState","activeUser","setActiveUser","useEffect","uid","getUserInfoByUserId","Header","FirebaseContext","history","useHistory","className","to","ROUTES","src","logo","alt","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","auth","signOut","push","date","userPhotoSrc","setUserPhotoSrc","getUserPhotoSrc","formatDistance","Image","AddComment","allComments","setAllComments","comment","setComment","displayName","onSubmit","event","preventDefault","type","placeholder","autoComplete","value","onChange","target","Comments","viewAll","setViewAll","slice","index","Action","likeCount","setLikeCount","isUserLiked","setIsUserLiked","handleLike"],"mappings":"ikBAEMA,EAAS,UAAMC,aACfC,EAAO,UAAMD,YAEZ,SAAeE,EAAtB,kC,4CAAO,WAAiCC,GAAjC,eAAAC,EAAA,sEACkBC,IAASC,YAAYC,WAAW,SAASC,MAAM,WAAY,KAAML,GAAUM,MAD7F,cACGC,EADH,OAEHC,QAAQC,IAAIF,EAAOG,KAAKC,OAAS,GAF9B,kBAGIJ,EAAOG,KAAKC,OAAS,GAHzB,4C,sBAMA,SAAeC,EAAtB,kC,4CAAO,WAA+BC,GAA/B,iBAAAZ,EAAA,sEACkBC,IAASC,YAAYC,WAAW,SAASC,MAAM,SAAU,KAAMQ,GAAQP,MADzF,cACGC,EADH,OAEGO,EAAOP,EAAOG,KAAKK,KAAI,SAACC,GAAD,mBAAC,eACvBA,EAAKC,QADiB,IAEzBC,MAAOF,EAAKG,QAJb,kBAMIL,GANJ,4C,sBASA,SAAeM,EAAtB,kC,4CAAO,WAAiCpB,GAAjC,iBAAAC,EAAA,sEACkBC,IAASC,YAAYC,WAAW,SAASC,MAAM,WAAY,KAAML,GAAUM,MAD7F,cACGC,EADH,OAEGO,EAAOP,EAAOG,KAAKK,KAAI,SAACC,GAAD,mBAAC,eACvBA,EAAKC,QADiB,IAEzBC,MAAOF,EAAKG,QAJb,kBAMIL,GANJ,4C,sBASA,SAAeO,EAAtB,oC,4CAAO,WAA0CrB,EAAUsB,GAApD,uBAAArB,EAAA,sEACkBC,IAChBC,YACAC,WAAW,SACXC,MAAM,WAAY,KAAML,GACxBK,MAAM,YAAa,iBAAkBiB,GACrChB,MANF,cACGC,EADH,SAOqBA,EAAOG,KAAKK,KAAI,SAACC,GAAD,mBAAC,eAClCA,EAAKC,QAD4B,IAEpCC,MAAOF,EAAKG,QATb,0BAOII,OAPJ,MAOe,GAPf,oBAWIA,EAASV,QAXb,4C,sBAmBA,SAAeW,EAAtB,oC,4CAAO,WAA0CC,EAAWZ,GAArD,mBAAAZ,EAAA,sEACkBC,IAASC,YAAYC,WAAW,UAAUC,MAAM,SAAU,KAAMoB,GAAWnB,MAD7F,cACGC,EADH,OAEGmB,EAAqBnB,EAAOG,KAAKK,KAAI,SAACY,GAAD,mBAAC,eACrCA,EAAMV,QAD8B,IAEvCC,MAAOS,EAAMR,QAJd,SAMyCS,QAAQC,IAChDH,EAAmBX,IAAnB,uCAAuB,WAAOY,GAAP,uBAAA1B,EAAA,6DACf6B,GAAiB,EACjBH,EAAMI,MAAMC,SAASnB,KACrBiB,GAAiB,GAHF,SAKMlB,EAAgBe,EAAMd,QAL5B,0CAKZoB,EALY,KAMXjC,EAAaiC,EAAbjC,SANW,2CAQfA,YACG2B,GATY,IAUfG,oBAVe,2CAAvB,wDAPD,cAMGI,EANH,yBAqBIA,GArBJ,4C,sBAwBA,SAAeC,EAAtB,kC,4CAAO,WAAiCtB,GAAjC,iBAAAZ,EAAA,sEACkBC,IAASC,YAAYC,WAAW,UAAUC,MAAM,SAAU,KAAMQ,GAAQP,MAD1F,cACGC,EADH,OAEG6B,EAAS7B,EAAOG,KAAKK,KAAI,SAACY,GAAD,mBAAC,eACzBA,EAAMV,QADkB,IAE3BC,MAAOS,EAAMR,QAJd,kBAMIiB,GANJ,4C,sBASA,SAAeC,EAAtB,sC,4CAAO,WAAkCC,EAASzB,EAAQ0B,GAAnD,uBAAAtC,EAAA,sEACkBC,IAASC,YAAYC,WAAW,UAAUC,MAAM,UAAW,KAAMiC,GAAShC,MAD5F,cACGC,EADH,gBAE8BA,EAAOG,KAAKK,KAAI,SAACY,GAAD,mBAAC,eAC3CA,EAAMV,QADoC,IAE7CC,MAAOS,EAAMR,QAJd,0CAEIqB,EAFJ,KAMHhC,QAAQC,IAAI+B,GACRV,GAAiB,EACjBU,EAAiBT,MAAMC,SAASnB,KAChCiB,GAAiB,GATlB,6CAWSU,GAXT,IAW2BV,iBAAgB9B,SAAUuC,KAXrD,6C,sBAcA,SAAeE,EAAtB,sC,4CAAO,WAAmCC,EAAWpB,EAAeqB,GAA7D,SAAA1C,EAAA,sDACHC,IACKC,YACAC,WAAW,SACXwC,IAAIF,GACJG,OAAO,CACJpB,UAAWkB,EAAkBG,IAAWC,YAAYzB,GAAiBwB,IAAWE,WAAW1B,KANhG,4C,sBAUA,SAAe2B,EAAtB,sC,4CAAO,WAA0CC,EAAkBrC,EAAQ8B,GAApE,SAAA1C,EAAA,sDACHC,IACKC,YACAC,WAAW,SACXwC,IAAIM,GACJL,OAAO,CACJM,UAAWR,EAAkBG,IAAWC,YAAYlC,GAAUiC,IAAWE,WAAWnC,KANzF,4C,sBAUA,SAAeuC,EAAtB,0C,4CAAO,WAA4BV,EAAW7B,EAAQqC,EAAkB5B,EAAeqB,GAAhF,SAAA1C,EAAA,sEACGwC,EAAoBC,EAAWpB,EAAeqB,GADjD,uBAEGM,EAA2BC,EAAkBrC,EAAQ8B,GAFxD,4C,sBAcA,SAAeU,EAAtB,kC,4CAAO,WAA2CC,GAA3C,eAAArD,EAAA,sEACkB2B,QAAQC,IACzByB,EAAQvC,IAAR,uCAAY,WAAOF,GAAP,mBAAAZ,EAAA,sEACiBW,EAAgBC,GADjC,0CACD0C,EADC,KAER/C,QAAQC,IAAI,WAAY8C,GAFhB,kBAGDA,GAHC,2CAAZ,wDAFD,cACGhD,EADH,OAQHC,QAAQC,IAAI,SAAUF,GARnB,kBASIA,GATJ,4C,sBAYA,SAAeiD,EAAtB,kC,4CAAO,WAAgCC,GAAhC,iBAAAxD,EAAA,sEACkBC,IAASC,YAAYC,WAAW,SAASC,MAAM,WAAY,KAAMoD,GAAUnD,MAD7F,cACGC,EADH,OAEGmD,EAAQnD,EAAOG,KAAKK,KAAI,SAACC,GAAD,mBAAC,eACxBA,EAAKC,QADkB,IAE1BC,MAAOF,EAAKG,QAEhBX,QAAQC,IAAIiD,GANT,kBAOIA,GAPJ,4C,sBA2BA,SAAeC,EAAtB,4C,4CAAO,WAA6BzC,EAAO0C,EAAUH,EAAUI,EAAOC,EAAKC,GAApE,iBAAA9D,EAAA,0DACC8D,EADD,wBAEKC,EAAM,IACJC,EAAW,IAAIC,UACZC,OAAO,OAAQJ,EAAU,IAClCE,EAASE,OAAO,gBAAiBrE,GALlC,SAOOsE,IAAMC,KAAN,0CAA8CzE,EAA9C,iBAAwEqE,GAAUK,MAAK,YAAe,IAAZrD,EAAW,EAAXA,KAC5F+C,EAAM/C,EAAKsD,WACX/D,QAAQC,IAAI,MAAOuD,MATxB,OAYC9D,IAASC,YAAYC,WAAW,SAASwC,IAAI1B,GAAO2B,OAAO,CACvDe,WACAH,WACAI,QACAC,MACAnC,MAAOqC,IAjBZ,wBAoBC9D,IAASC,YAAYC,WAAW,SAASwC,IAAI1B,GAAO2B,OAAO,CACvDe,WACAH,WACAI,QACAC,QAxBL,6C,sBA6BA,SAAeU,EAAtB,sC,4CAAO,WAA6BC,EAASV,EAAWlD,GAAjD,iBAAAZ,EAAA,6DACC+D,EAAM,IACJC,EAAW,IAAIC,UACZC,OAAO,OAAQJ,EAAU,IAClCE,EAASE,OAAO,gBAAiBrE,GAJ9B,SAMGsE,IAAMC,KAAN,0CAA8CzE,EAA9C,iBAAwEqE,GAAUK,MAAK,YAAe,IAAZrD,EAAW,EAAXA,KAC5F+C,EAAM/C,EAAKsD,WACX/D,QAAQC,IAAI,MAAOuD,MARpB,uBAWG9D,IACDC,YACAC,WAAW,UACXsE,IAAI,CACDD,UACAE,SAAU,GACVC,YAAaC,KAAKC,MAClBC,SAAUf,EACVjC,MAAO,GACPO,QAASzB,EAASgE,KAAKC,MACvBjE,SACAmE,aAAc,QACdC,eAAgB,WAvBrB,4C,sJCjMQ,SAASC,IAAW,IACvBpE,EAASqE,qBAAWC,KAApBtE,KADsB,EAEMuE,mBAAS,IAFf,mBAEvBC,EAFuB,KAEXC,EAFW,KAa9B,OATAC,qBAAU,WAAM,4CACZ,gCAAAvF,EAAA,sEAC2BW,YAAgBE,EAAK2E,KADhD,mCACWlF,EADX,KAEIgF,EAAchF,GAFlB,4CADY,uBAKZ,OAAIO,QAAJ,IAAIA,OAAJ,EAAIA,EAAM2E,MALG,WAAD,wBAMRC,KAEL,CAAC5E,IACG,CAAEmB,SAAUqD,K,gCCjBR,QAA0B,kC,gCCAzC,mHAUe,SAASK,IAEHR,qBAAWC,KAApBtE,KAFqB,IAGrBZ,EAAaiF,qBAAWS,KAAxB1F,SACF2F,EAAUC,cAMR7D,EAAaiD,cAAbjD,SAYR,OACI,qBAAK8D,UAAU,yEAAf,SACI,sBAAKA,UAAU,kEAAf,UACI,cAAC,IAAD,CAAMC,GAAIC,IAAV,SACI,oBAAIF,UAAU,YAAd,SACI,qBAAKG,IAAKC,IAAMC,IAAI,gBAG5B,sBAAKL,UAAU,6BAAf,UACI,qBAAKA,UAAU,OAAf,SACI,cAAC,IAAD,CAAMC,GAAIC,IAAV,SACI,qBACII,MAAM,6BACNN,UAAU,0BACVO,KAAK,OACLC,QAAQ,YACRC,OAAO,eALX,SAOI,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,EAAE,yBAIjF,qBAAKb,UAAU,OAAf,SACI,cAAC,IAAD,CAAMC,GAAIC,IAAV,SACI,qBACII,MAAM,6BACNN,UAAU,0BACVO,KAAK,OACLC,QAAQ,YACRC,OAAO,eALX,SAOI,sBACIC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,sDAKlB,qBAAKb,UAAU,OAAf,SACI,cAAC,IAAD,CAAMC,GAAIC,IAAV,SACI,qBACII,MAAM,6BACNN,UAAU,0BACVO,KAAK,OACLC,QAAQ,YACRC,OAAO,eALX,SAOI,sBACIC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,wKAKlB,qBAAKb,UAAU,8BAAf,SACI,cAAC,IAAD,CAAMC,GAAE,aAAQ/D,EAASjC,UAAzB,SACI,qBAAKkG,IAAKjE,EAASN,MAAOoE,UAAU,4CAG5C,qBAAKA,UAAU,sBAAsBc,QAhF/B,WAClB3G,EAAS4G,OAAOC,UAChBlB,EAAQmB,KAAKf,MA8ED,SACI,qBACII,MAAM,6BACNN,UAAU,0BACVO,KAAK,OACLC,QAAQ,YACRC,OAAO,eALX,SAOI,sBACIC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,4G,8ICrGnB,SAASjB,EAAT,GAAsD,IAApC3F,EAAmC,EAAnCA,SAAUa,EAAyB,EAAzBA,OAAQ4D,EAAiB,EAAjBA,QAASwC,EAAQ,EAARA,KAAQ,EACxB5B,mBAAS,MADe,mBACzD6B,EADyD,KAC3CC,EAD2C,KAahE,OAXA3B,qBAAU,WAMF3E,GALiB,uCAAG,kCAAAZ,EAAA,sEACGW,YAAgBC,GADnB,mCACbN,EADa,KAEZoB,EAAUpB,EAAVoB,MACRwF,EAAgBxF,GAHI,2CAAH,oDAMjByF,KAEL,CAACvG,IAGA,sBAAKkF,UAAU,GAAf,UACI,sBAAKA,UAAU,OAAf,UACI,cAAC,IAAD,CAAMC,GAAE,aAAQhG,GAAhB,SACI,qBACIkG,IAAKgB,EACLd,IAAG,UAAKpG,EAAL,kBACH+F,UAAU,+CAGlB,gCACI,cAAC,IAAD,CAAMC,GAAE,aAAQhG,GAAhB,SACI,mBAAG+F,UAAU,2BAAb,SAAyC/F,MAE7C,mBAAG+F,UAAU,6BAAb,SAA2CtB,UAGnD,oBAAGsB,UAAU,4CAAb,UAA0DsB,YAAeJ,EAAM,IAAIpC,MAAnF,e,gCCpCZ,kDAGe,SAASyC,EAAT,GAA8B,IAAbvC,EAAY,EAAZA,SAC5B,OACI,qBAAKgB,UAAU,uCAAf,SACI,qBAAKG,IAAKnB,EAAUgB,UAAU,e,sJCD3B,SAASwB,EAAT,GAA6D,IAAvCC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,eAAgBvG,EAAS,EAATA,MAAS,EACzCmE,mBAAS,IADgC,mBAChEqC,EADgE,KACvDC,EADuD,OAInExC,qBAAWC,KADXtE,KAAQ8G,EAH2D,EAG3DA,YAAkB/G,EAHyC,EAG9C4E,IAH8C,EAKtCN,qBAAWS,KAApC1F,EAL+D,EAK/DA,SAAU4C,EALqD,EAKrDA,WAclB,OACI,qBAAKiD,UAAU,OAAf,SACI,uBAAMA,UAAU,OAAO8B,SAdV,SAACC,GAIlB,OAHAA,EAAMC,eAAeD,GACrBL,EAAe,CAAC,CAAEC,UAAS7G,SAAQ+G,gBAArB,mBAAuCJ,KACrDG,EAAW,IACJzH,EACFC,YACAC,WAAW,UACXwC,IAAI1B,GACJ2B,OAAO,CACJ8B,SAAU7B,EAAWE,WAAW,CAAE0E,UAAS7G,SAAQ+G,mBAKvD,UACI,uBACII,KAAK,OACLC,YAAY,mBACZC,aAAa,MACbnC,UAAU,+BACVoC,MAAOT,EACPU,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBV,EAAWU,EAAOF,UAEhD,wBACIH,KAAK,SACLjC,UAAS,wDAAmD2B,EAAQ/G,OAAS,GAAK,cAFtF,uBC7BD,SAAS2H,EAAT,GAA2D,IAAvCd,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,eAAgBvG,EAAS,EAATA,MAAS,EACvCmE,oBAAS,GAD8B,mBAC9DkD,EAD8D,KACrDC,EADqD,KAE7D1H,EAASqE,qBAAWC,KAApBtE,KAER,OACI,sBAAKiF,UAAU,OAAf,UACI,8BACKyB,EAAYiB,MAAM,EAAG,GAAG1H,KAAI,SAAC2G,EAASgB,GAAV,OACzB,oBAAG3C,UAAU,qCAAb,UACI,cAAC,IAAD,CAAMC,GAAE,aAAQlF,EAAK8G,aAArB,SACI,uBAAM7B,UAAU,YAAhB,UAA6B2B,EAAQE,YAArC,SAEH,MACAF,EAAQA,UAL0CgB,QAS9DlB,EAAY7G,OAAS,IAAM4H,EACxB,mBACIxC,UAAU,2DACVc,QAAS,kBAAM2B,GAAW,IAF9B,+BAMAD,EACAf,EAAYiB,MAAM,GAAG1H,KAAI,SAAC2G,EAASgB,GAAV,OACrB,oBAAG3C,UAAU,qCAAb,UACI,cAAC,IAAD,CAAMC,GAAE,aAAQlF,EAAK8G,aAArB,SACI,uBAAM7B,UAAU,YAAhB,UAA6B2B,EAAQE,YAArC,SAEH,MACAF,EAAQA,UAL0CgB,MAQ3D,KACJ,cAACnB,EAAD,CAAYC,YAAaA,EAAaC,eAAgBA,EAAgBvG,MAAOA,OCnC1E,SAASyH,EAAT,GAA6D,IAA3C5G,EAA0C,EAA1CA,MAAOD,EAAmC,EAAnCA,eAAgB6C,EAAmB,EAAnBA,SAAUzD,EAAS,EAATA,MAAS,EACrCmE,mBAAStD,EAAMpB,QADsB,mBAChEiI,EADgE,KACrDC,EADqD,OAEjCxD,mBAASV,GAFwB,mBAEhE6C,EAFgE,KAEnDC,EAFmD,OAGjCpC,mBAASvD,GAHwB,mBAGhEgH,EAHgE,KAGnDC,EAHmD,OAOnE5D,qBAAWC,KADXtE,KAAQ2E,IAAK5E,OANsD,MAM7C,GAN6C,IAQtCsE,qBAAWS,KAApC1F,EAR+D,EAQ/DA,SAAU4C,EARqD,EAQrDA,WAEZkG,EAAU,uCAAG,sBAAA/I,EAAA,6DACf8I,GAAgBD,GADD,SAET5I,EACDC,YACAC,WAAW,UACXwC,IAAI1B,GACJ2B,OAAO,CACJd,MAAO+G,EAAchG,EAAWC,YAAYlC,GAAUiC,EAAWE,WAAWnC,KAPrE,OASfgI,GAAa,SAACD,GAAD,OAAgBE,EAAcF,EAAY,EAAIA,EAAY,KATxD,2CAAH,qDAYhB,OACI,sBAAK7C,UAAU,GAAf,UACI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,qBACIM,MAAM,6BACNN,UAAS,gDAA2C+C,GAAe,WAA1D,KACTxC,KAAK,OACLC,QAAQ,YACRC,OAAO,eACPK,QAASmC,EANb,SAQI,sBACIvC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,kIAGV,mBAAGb,UAAU,yBAAb,SAAuC6C,OAE3C,sBAAK7C,UAAU,sBAAf,UACI,qBACIM,MAAM,6BACNN,UAAU,wCACVO,KAAK,OACLC,QAAQ,YACRC,OAAO,eALX,SAOI,sBACIC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,oKAGV,mBAAGb,UAAU,yBAAb,SAAuCyB,EAAY7G,eAG3D,cAAC2H,EAAD,CAAUb,eAAgBA,EAAgBD,YAAaA,EAAatG,MAAOA","file":"static/js/2.efda430d.chunk.js","sourcesContent":["import { firebase, FieldValue } from '../lib/firebase';\nimport Axios from 'axios';\nconst cloudName = `${process.env.REACT_APP_CLOUD_NAME}`;\nconst presets = `${process.env.REACT_APP_PRESETS}`;\n\nexport async function doesUsernameExist(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    console.log(result.docs.length > 0);\n    return result.docs.length > 0;\n}\n\nexport async function getUserByUserId(userId) {\n    const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function getUserByUsername(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function IsUserFollowingProfileUser(username, profileUserId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .where('following', 'array-contains', profileUserId)\n        .get();\n    const [response = {}] = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return response.userId;\n    // if (user.following.includes(profileUserId)) {\n    //     return true;\n    // } else {\n    //     return false;\n    // }\n}\n\nexport async function getFollowingPhotosByUserId(following, userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', 'in', following).get();\n    const userFollowedPhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const userFollowedPhotosWithDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const [userInfo] = await getUserByUserId(photo.userId);\n            const { username } = userInfo;\n            return {\n                username,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return userFollowedPhotosWithDetails;\n}\n\nexport async function getPhotosbyUserId(userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get();\n    const photos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    return photos;\n}\n\nexport async function getLatestPhotoInfo(photoId, userId, profileUsername) {\n    const result = await firebase.firestore().collection('photos').where('photoId', '==', photoId).get();\n    const [photoWithDetails] = await result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    console.log(photoWithDetails);\n    let userLikedPhoto = false;\n    if (photoWithDetails.likes.includes(userId)) {\n        userLikedPhoto = true;\n    }\n    return { ...photoWithDetails, userLikedPhoto, username: profileUsername };\n}\n\nexport async function updateUserFollowing(userDocId, profileUserId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(userDocId)\n        .update({\n            following: isUserFollowing ? FieldValue.arrayRemove(profileUserId) : FieldValue.arrayUnion(profileUserId),\n        });\n}\n\nexport async function updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(profileUserDocId)\n        .update({\n            followers: isUserFollowing ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n        });\n}\n\nexport async function toggleFollow(userDocId, userId, profileUserDocId, profileUserId, isUserFollowing) {\n    await updateUserFollowing(userDocId, profileUserId, isUserFollowing);\n    await updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing);\n}\n\n// export async function updateProfile(docId, fullName, category, title, bio) {\n//     firebase.firestore().collection('users').doc(docId).update({\n//         fullName,\n//         category,\n//         title,\n//         bio,\n//     });\n// }\n\nexport async function getFollowingOrFollowersList(userIds) {\n    const result = await Promise.all(\n        userIds.map(async (userId) => {\n            const [userList] = await getUserByUserId(userId);\n            console.log('userList', userList);\n            return userList;\n        })\n    );\n    console.log('result', result);\n    return result;\n}\n\nexport async function getSearchResults(category) {\n    const result = await firebase.firestore().collection('users').where('category', '==', category).get();\n    const users = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    console.log(users);\n    return users;\n}\n\nexport async function updateProfilePhoto(imageFile) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', presets);\n    formData.append('cloud_name', 'test');\n\n    Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData)\n        // .then((response) => console.log('response', response))\n        .then(({ data }) => {\n            console.log(JSON.stringify(data.secure_url));\n            url = JSON.stringify(data.secure_url);\n            console.log('url', url);\n        });\n    return url;\n}\n\nexport async function updateProfile(docId, fullName, category, title, bio, imageFile) {\n    if (imageFile) {\n        let url = '';\n        const formData = new FormData();\n        formData.append('file', imageFile[0]);\n        formData.append('upload_preset', presets);\n\n        await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n            url = data.secure_url;\n            console.log('url', url);\n        });\n\n        firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n            photo: url,\n        });\n    } else {\n        firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n        });\n    }\n}\n\nexport async function uploadNewPost(caption, imageFile, userId) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', presets);\n\n    await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n        url = data.secure_url;\n        console.log('url', url);\n    });\n\n    await firebase\n        .firestore()\n        .collection('photos')\n        .add({\n            caption,\n            comments: [],\n            dateCreated: Date.now(),\n            imageSrc: url,\n            likes: [],\n            photoId: userId + Date.now(),\n            userId,\n            userLatitude: 34.0522,\n            userLongitude: -188.2437,\n        });\n}\n","import { useContext, useState, useEffect } from 'react';\nimport UserContext from '../context/user';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function useUser() {\n    const { user } = useContext(UserContext);\n    const [activeUser, setActiveUser] = useState({});\n\n    useEffect(() => {\n        async function getUserInfoByUserId() {\n            const [result] = await getUserByUserId(user.uid);\n            setActiveUser(result);\n        }\n        if (user?.uid) {\n            getUserInfoByUserId();\n        }\n    }, [user]);\n    return { userInfo: activeUser };\n}\n","export default __webpack_public_path__ + \"static/media/logo.6dc95425.png\";","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logo from '../images/logo.png';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport UserContext from '../context/user';\nimport FirebaseContext from '../context/firebase';\nimport { getUserByUserId } from '../services/firebase';\nimport useUser from '../hooks/useUser';\n\nexport default function Header() {\n    // const [userInfo, setUserInfo] = useState('');\n    const { user } = useContext(UserContext);\n    const { firebase } = useContext(FirebaseContext);\n    const history = useHistory();\n    const handleSignOut = () => {\n        firebase.auth().signOut();\n        history.push(ROUTES.LOGIN);\n    };\n\n    const { userInfo } = useUser();\n\n    // useEffect(() => {\n    //     const getUserInfo = async () => {\n    //         const [result] = await getUserByUserId(user.uid);\n    //         setUserInfo(result);\n    //     };\n    //     if (user?.uid) {\n    //         getUserInfo();\n    //     }\n    // }, [user]);\n\n    return (\n        <div className=\"bg-gray-dark w-screen h-14 flex justify-center items-center fixed z-50\">\n            <div className=\"max-w-screen-xl w-screen h-14 flex justify-between items-center\">\n                <Link to={ROUTES.DASHBOARD}>\n                    <h1 className=\"h-14 flex\">\n                        <img src={logo} alt=\"artisto\" />\n                    </h1>\n                </Link>\n                <div className=\"flex flex-row items-center\">\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.UPLOAD_IMAGE}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 4v16m8-8H4\" />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.SEARCH}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.MESSAGES}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"flex h-14 items-center pr-4\">\n                        <Link to={`/p/${userInfo.username}`}>\n                            <img src={userInfo.photo} className=\"h-10 w-10 rounded-full object-cover\" />\n                        </Link>\n                    </div>\n                    <div className=\"pr-4 cursor-pointer\" onClick={handleSignOut}>\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-8 w-8 text-gray-light\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                            />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    userInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n    }),\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { formatDistance } from 'date-fns';\nimport { getUserByUserId } from '../../services/firebase';\n\nexport default function Header({ username, userId, caption, date }) {\n    const [userPhotoSrc, setUserPhotoSrc] = useState(null);\n    useEffect(() => {\n        const getUserPhotoSrc = async () => {\n            const [result] = await getUserByUserId(userId);\n            const { photo } = result;\n            setUserPhotoSrc(photo);\n        };\n        if (userId) {\n            getUserPhotoSrc();\n        }\n    }, [userId]);\n\n    return (\n        <div className=\"\">\n            <div className=\"flex\">\n                <Link to={`/p/${username}`}>\n                    <img\n                        src={userPhotoSrc}\n                        alt={`${username} profile photo`}\n                        className=\"w-12 h-12 rounded-full mr-4 object-cover\"\n                    />\n                </Link>\n                <div>\n                    <Link to={`/p/${username}`}>\n                        <p className=\"font-bold text-gray-dark\">{username}</p>\n                    </Link>\n                    <p className=\"text-gray-dark break-words\">{caption}</p>\n                </div>\n            </div>\n            <p className=\"text-gray-primary text-xs pt-2 text-right\">{formatDistance(date, new Date())} ago</p>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    username: PropTypes.string.isRequired,\n    userId: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n    date: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Image({ imageSrc }) {\n    return (\n        <div className=\"flex w-full justify-center pt-2 pb-2\">\n            <img src={imageSrc} className=\"w-full\" />\n        </div>\n    );\n}\n\nImage.propTypes = {\n    imageSrc: PropTypes.string.isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport UserContext from '../../context/user';\nimport FirebaseContext from '../../context/firebase';\n\nexport default function AddComment({ allComments, setAllComments, docId }) {\n    const [comment, setComment] = useState('');\n    const {\n        user: { displayName, uid: userId },\n    } = useContext(UserContext);\n    const { firebase, FieldValue } = useContext(FirebaseContext);\n\n    const handleSubmit = (event) => {\n        event.preventDefault(event);\n        setAllComments([{ comment, userId, displayName }, ...allComments]);\n        setComment('');\n        return firebase\n            .firestore()\n            .collection('photos')\n            .doc(docId)\n            .update({\n                comments: FieldValue.arrayUnion({ comment, userId, displayName }),\n            });\n    };\n    return (\n        <div className=\"mt-2\">\n            <form className=\"flex\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"add a comment...\"\n                    autoComplete=\"off\"\n                    className=\"text-sm w-full p-2 rounded-l\"\n                    value={comment}\n                    onChange={({ target }) => setComment(target.value)}\n                />\n                <button\n                    type=\"submit\"\n                    className={`p-2 bg-blue-primary text-gray-light rounded-r ${comment.length < 1 && 'opacity-50'}`}\n                >\n                    SEND\n                </button>\n            </form>\n        </div>\n    );\n}\n\nAddComment.propTypes = {\n    allComments: PropTypes.array,\n    setAllComments: PropTypes.func.isRequired,\n    docId: PropTypes.string.isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddComment from './AddComment';\nimport UserContext from '../../context/user';\n\nexport default function Comments({ allComments, setAllComments, docId }) {\n    const [viewAll, setViewAll] = useState(false);\n    const { user } = useContext(UserContext);\n\n    return (\n        <div className=\"pt-2\">\n            <div>\n                {allComments.slice(0, 3).map((comment, index) => (\n                    <p className=\"text-sm text-gray-dark break-words\" key={index}>\n                        <Link to={`/p/${user.displayName}`}>\n                            <span className=\"font-bold\">{comment.displayName} </span>\n                        </Link>\n                        {'   '}\n                        {comment.comment}\n                    </p>\n                ))}\n            </div>\n            {allComments.length > 3 && !viewAll ? (\n                <p\n                    className=\"text-xs text-gray-primary opacity-70 pt-2 cursor-pointer\"\n                    onClick={() => setViewAll(true)}\n                >\n                    View All Comments\n                </p>\n            ) : viewAll ? (\n                allComments.slice(3).map((comment, index) => (\n                    <p className=\"text-sm text-gray-dark break-words\" key={index}>\n                        <Link to={`/p/${user.displayName}`}>\n                            <span className=\"font-bold\">{comment.displayName} </span>\n                        </Link>\n                        {'   '}\n                        {comment.comment}\n                    </p>\n                ))\n            ) : null}\n            <AddComment allComments={allComments} setAllComments={setAllComments} docId={docId} />\n        </div>\n    );\n}\n\nComments.propTypes = {\n    allComments: PropTypes.array.isRequired,\n    setAllComments: PropTypes.func.isRequired,\n    docId: PropTypes.string.isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Comments from './Comments';\nimport UserContext from '../../context/user';\nimport FirebaseContext from '../../context/firebase';\n\nexport default function Action({ likes, userLikedPhoto, comments, docId }) {\n    const [likeCount, setLikeCount] = useState(likes.length);\n    const [allComments, setAllComments] = useState(comments);\n    const [isUserLiked, setIsUserLiked] = useState(userLikedPhoto);\n\n    const {\n        user: { uid: userId = '' },\n    } = useContext(UserContext);\n    const { firebase, FieldValue } = useContext(FirebaseContext);\n\n    const handleLike = async () => {\n        setIsUserLiked(!isUserLiked);\n        await firebase\n            .firestore()\n            .collection('photos')\n            .doc(docId)\n            .update({\n                likes: isUserLiked ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n            });\n        setLikeCount((likeCount) => (isUserLiked ? likeCount - 1 : likeCount + 1));\n    };\n\n    return (\n        <div className=\"\">\n            <div className=\"flex\">\n                <div className=\"flex items-end\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className={`h-8 w-8 text-gray-dark cursor-pointer ${isUserLiked && 'fill-red'} `}\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                        onClick={handleLike}\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                        />\n                    </svg>\n                    <p className=\"text-sm text-gray-dark\">{likeCount}</p>\n                </div>\n                <div className=\"flex items-end pl-4\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-8 w-8 text-gray-dark cursor-pointer\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                        />\n                    </svg>\n                    <p className=\"text-sm text-gray-dark\">{allComments.length}</p>\n                </div>\n            </div>\n            <Comments setAllComments={setAllComments} allComments={allComments} docId={docId} />\n        </div>\n    );\n}\n\nAction.propTypes = {\n    likes: PropTypes.array.isRequired,\n    comments: PropTypes.array.isRequired,\n    userLikedPhoto: PropTypes.bool.isRequired,\n    docId: PropTypes.string.isRequired,\n};\n"],"sourceRoot":""}