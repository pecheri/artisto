{"version":3,"sources":["pages/SignUp.js","services/firebase.js","images/logo.png","lib/categories.js"],"names":["SignUp","firebase","useContext","FirebaseContext","useState","username","setUsername","email","setEmail","password","setPassword","fullName","setFullName","category","setCategory","error","setError","isInvalid","history","useHistory","useEffect","document","title","handleSignUp","event","a","preventDefault","doesUsernameExist","auth","createUserWithEmailAndPassword","createdUserResult","user","updateProfile","displayName","toLowerCase","firestore","collection","add","userId","uid","bio","followers","following","photo","dateCreated","Date","now","setTimeout","push","ROUTES","message","className","src","logo","alt","onSubmit","placeholder","type","onChange","target","value","hidden","categories","sort","map","index","disabled","to","cloudName","process","presets","where","get","result","docs","length","getUserByUserId","item","data","docId","id","getUserByUsername","IsUserFollowingProfileUser","profileUserId","response","getFollowingPhotosByUserId","userFollowedPhotos","Promise","all","userLikedPhoto","likes","includes","userInfo","userFollowedPhotosWithDetails","getLatestPhotoInfo","photoId","profileUsername","photoWithDetails","getProfilePhotosbyUserId","profileId","profilePhotos","profilePhotosWithDetails","updateUserFollowing","userDocId","isUserFollowing","doc","update","FieldValue","arrayRemove","arrayUnion","updateProfileUserFollowers","profileUserDocId","toggleFollow","getFollowingOrFollowersList","userIds","userList","getSearchResults","searchKeyword","users","limit","imageFile","setUpload","url","formData","FormData","append","Axios","post","then","secure_url","alert","uploadNewPost","caption","comments","imageSrc","userLatitude","userLongitude"],"mappings":"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","file":"static/js/13.a37d2524.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport FirebaseContext from '../context/firebase';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport logo from '../images/logo.png';\nimport { categories } from '../lib/categories';\nimport { doesUsernameExist } from '../services/firebase';\n\nexport default function SignUp() {\n    const { firebase } = useContext(FirebaseContext);\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [fullName, setFullName] = useState('');\n    const [category, setCategory] = useState('');\n    const [error, setError] = useState('');\n    const isInvalid = password === '' || email === '' || username === '' || fullName === '' || category === '';\n    const history = useHistory();\n\n    useEffect(() => {\n        document.title = 'Sign Up - Artisto';\n    }, []);\n\n    const handleSignUp = async (event) => {\n        event.preventDefault();\n        const usernameExist = await doesUsernameExist(username);\n        if (!usernameExist) {\n            try {\n                const createdUserResult = await firebase.auth().createUserWithEmailAndPassword(email, password);\n                await createdUserResult.user.updateProfile({\n                    displayName: username.toLowerCase(),\n                });\n\n                await firebase.firestore().collection('users').add({\n                    userId: createdUserResult.user.uid,\n                    username: username.toLowerCase(),\n                    fullName,\n                    email: email.toLowerCase(),\n                    category: category,\n                    title: '',\n                    bio: '',\n                    followers: [],\n                    following: [],\n                    photo: 'https://res.cloudinary.com/dvhwserkv/image/upload/v1629400603/360_F_346839683_6nAPzbhpSkIpb8pmAwufkC7c5eD7wYws_g5xlcp.jpg',\n                    dateCreated: Date.now(),\n                });\n                const timer = setTimeout(() => {\n                    history.push(ROUTES.DASHBOARD);\n                }, 1000);\n                // history.push(ROUTES.DASHBOARD);\n            } catch (error) {\n                setError(error.message);\n            }\n        } else {\n            setUsername('');\n            setError('That username is already taken, please try another.');\n        }\n    };\n\n    return (\n        <div className=\"sm:flex justify-center container max-w-screen-md items-center h-screen mx-auto px-2 my-2\">\n            <div className=\"sm:w-1/2 sm:mx-0 w-60 mx-auto\">\n                <h1 className=\"w-full flex items-center justify-end \">\n                    <img src={logo} alt=\"artisto\" className=\"\" />\n                </h1>\n                <p className=\"w-full text-sm sm:text-base text-gray-light text-center sm:px-4 animate-fadeIn\">\n                    Place for artists to connect with other artists around the world\n                </p>\n            </div>\n            <div className=\"sm:w-1/2 sm:max-h-full\">\n                <div className=\"sm:bg-gray-dark rounded\">\n                    <div className=\"p-8\">\n                        {error && <p className=\"text-xs text-red-primary\">{error}</p>}\n                        <form className=\"flex flex-col\" onSubmit={handleSignUp}>\n                            <input\n                                placeholder=\"Username\"\n                                type=\"text\"\n                                onChange={({ target }) => setUsername(target.value)}\n                                value={username}\n                                className=\"bg-gray-light w-full p-1 h-10 text-base mb-5\"\n                            />\n                            <input\n                                placeholder=\"Full Name\"\n                                type=\"text\"\n                                onChange={({ target }) => setFullName(target.value)}\n                                value={fullName}\n                                className=\"bg-gray-light w-full p-1 h-10 text-base mb-5\"\n                            />\n                            <select\n                                className=\"bg-gray-light w-full py-1 h-10 text-sm text-gray-dark mb-5\"\n                                onChange={({ target }) => setCategory(target.value)}\n                                value={category}\n                            >\n                                <option hidden value=\"\">\n                                    Choose Your Art Category\n                                </option>\n                                {categories.sort().map((category, index) => (\n                                    <option key={index} value={category}>\n                                        {category}\n                                    </option>\n                                ))}\n                                <option value=\"others\">Others</option>\n                            </select>\n                            <input\n                                placeholder=\"Email Address\"\n                                type=\"email\"\n                                onChange={({ target }) => setEmail(target.value)}\n                                value={email}\n                                className=\"bg-gray-light w-full p-1 h-10 text-base mb-5\"\n                            />\n\n                            <input\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                onChange={({ target }) => setPassword(target.value)}\n                                value={password}\n                                className=\"bg-gray-light w-full p-1 h-10 text-base\"\n                            />\n                            <button\n                                className={`bg-yellow-primary text-gray-dark mt-12 w-full p-1 h-10 rounded ${\n                                    isInvalid && 'opacity-50'\n                                }`}\n                                type=\"submit\"\n                                disabled={isInvalid}\n                            >\n                                Sign Up\n                            </button>\n                        </form>\n                    </div>\n                    <div className=\"flex flex-col justify-center items-end pr-8\">\n                        <p className=\"text-gray-light text-xs mb-12 mt-8\">\n                            You already have an account?{' '}\n                            <Link to={ROUTES.LOGIN} className=\"text-yellow-primary\">\n                                Login\n                            </Link>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { firebase, FieldValue } from '../lib/firebase';\nimport Axios from 'axios';\nconst cloudName = `${process.env.REACT_APP_CLOUD_NAME}`;\nconst presets = `${process.env.REACT_APP_PRESETS}`;\n\nexport async function doesUsernameExist(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    return result.docs.length > 0;\n}\n\nexport async function getUserByUserId(userId) {\n    const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function getUserByUsername(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function IsUserFollowingProfileUser(username, profileUserId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .where('following', 'array-contains', profileUserId)\n        .get();\n    const [response = {}] = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return response.userId;\n    // if (user.following.includes(profileUserId)) {\n    //     return true;\n    // } else {\n    //     return false;\n    // }\n}\n\nexport async function getFollowingPhotosByUserId(following, userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', 'in', following).get();\n    const userFollowedPhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const userFollowedPhotosWithDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const [userInfo] = await getUserByUserId(photo.userId);\n            const { username } = userInfo;\n            return {\n                username,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return userFollowedPhotosWithDetails;\n}\n\nexport async function getPhotosbyUserId(userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get();\n    const photos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    return photos;\n}\n\nexport async function getLatestPhotoInfo(photoId, userId, profileUsername) {\n    const result = await firebase.firestore().collection('photos').where('photoId', '==', photoId).get();\n    const [photoWithDetails] = await result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    let userLikedPhoto = false;\n    if (photoWithDetails.likes.includes(userId)) {\n        userLikedPhoto = true;\n    }\n    return { ...photoWithDetails, userLikedPhoto, username: profileUsername };\n}\n\nexport async function getProfilePhotosbyUserId(userId, profileId, profileUsername) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', profileId).get();\n    const profilePhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const profilePhotosWithDetails = await Promise.all(\n        profilePhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            return {\n                username: profileUsername,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return profilePhotosWithDetails;\n}\n\nexport async function updateUserFollowing(userDocId, profileUserId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(userDocId)\n        .update({\n            following: isUserFollowing ? FieldValue.arrayRemove(profileUserId) : FieldValue.arrayUnion(profileUserId),\n        });\n}\n\nexport async function updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(profileUserDocId)\n        .update({\n            followers: isUserFollowing ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n        });\n}\n\nexport async function toggleFollow(userDocId, userId, profileUserDocId, profileUserId, isUserFollowing) {\n    await updateUserFollowing(userDocId, profileUserId, isUserFollowing);\n    await updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing);\n}\n\nexport async function getFollowingOrFollowersList(userIds) {\n    const result = await Promise.all(\n        userIds.map(async (userId) => {\n            const [userList] = await getUserByUserId(userId);\n            return userList;\n        })\n    );\n    return result;\n}\n\nexport async function getSearchResults(category, searchKeyword) {\n    if (searchKeyword) {\n        const result = await firebase.firestore().collection('users').where('category', '==', category).get();\n        const users = result.docs.map((item) => ({\n            ...item.data(),\n            docId: item.id,\n        }));\n        return users;\n    } else {\n        const result = await firebase.firestore().collection('users').limit(10).where('category', '==', category).get();\n        const users = result.docs.map((item) => ({\n            ...item.data(),\n            docId: item.id,\n        }));\n        return users;\n    }\n}\n\n// export async function getSearchResults(category) {\n//     const result = await firebase.firestore().collection('users').where('category', '==', category).get();\n//     const users = result.docs.map((item) => ({\n//         ...item.data(),\n//         docId: item.id,\n//     }));\n//     return users;\n// }\n\nexport async function updateProfilePhoto(imageFile) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', presets);\n    formData.append('cloud_name', 'test');\n\n    Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n        url = JSON.stringify(data.secure_url);\n    });\n    return url;\n}\n\nexport async function updateProfile(docId, fullName, category, title, bio, imageFile, setUpload) {\n    setUpload(true);\n\n    if (imageFile) {\n        let url = '';\n        const formData = new FormData();\n        formData.append('file', imageFile[0]);\n        formData.append('upload_preset', presets);\n\n        try {\n            await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n                url = data.secure_url;\n            });\n\n            await firebase.firestore().collection('users').doc(docId).update({\n                fullName,\n                category,\n                title,\n                bio,\n                photo: url,\n            });\n\n            setUpload(false);\n        } catch (error) {\n            setUpload(false);\n            alert(error.message);\n        }\n    } else {\n        await firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n        });\n        setUpload(false);\n    }\n}\n\nexport async function uploadNewPost(caption, imageFile, userId, setUpload) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', presets);\n\n    setUpload(true);\n\n    try {\n        await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n            url = data.secure_url;\n        });\n\n        await firebase\n            .firestore()\n            .collection('photos')\n            .add({\n                caption,\n                comments: [],\n                dateCreated: Date.now(),\n                imageSrc: url,\n                likes: [],\n                photoId: userId + Date.now(),\n                userId,\n                userLatitude: 34.0522,\n                userLongitude: -188.2437,\n            });\n\n        setUpload(false);\n    } catch (error) {\n        setUpload(false);\n        alert(error.message);\n    }\n}\n","export default __webpack_public_path__ + \"static/media/logo.6dc95425.png\";","export const categories = ['web design', 'video game', 'animation', 'graphic design', 'painting', 'illustration'];\n"],"sourceRoot":""}