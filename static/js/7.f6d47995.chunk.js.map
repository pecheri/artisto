{"version":3,"sources":["components/profile/FollowingFollowersUser.js","components/profile/FollowingFollwersList.js","components/profile/ProfileHeader.js","components/profile/ImageDetails.js","components/profile/Image.js","components/profile/Images.js","components/profile/index.js","pages/Profile.js","services/firebase.js","hooks/useUser.js","images/logo.png","components/Header.js","components/post/Header.js","components/post/Image.js","components/post/AddComment.js","components/post/Comments.js","components/post/Action.js"],"names":["FollowingFollowersUser","username","fullName","photo","setFollowingOrFollowers","className","to","onClick","src","FollowingFollwersList","following","followers","followingOrFollowers","useState","list","setList","useEffect","getFollowingList","a","getFollowingOrFollowersList","result","getFollowersList","console","log","map","item","index","count","ProfileHeader","profileUserInfo","photoCounts","photos","useUser","userInfo","docId","userId","isUserFollowing","setIsUserFollowing","length","followersCount","setFollowersCount","history","useHistory","IsUserFollowingProfileUser","checkIfUsersFollowing","toggleUserFollow","prevState","toggleFollow","e","target","currentTarget","closeFollowingFollowersList","alt","push","category","title","bio","ImageDetails","caption","date","dateCreated","Image","imageSrc","Action","likes","userLikedPhoto","comments","isImageClicked","setIsImageClicked","screenToggle","style","width","aspectRatio","closeImage","Images","UserProfile","setPhotos","setPhotoCounts","getProfileUserPhotos","getPhotosbyUserId","Profile","useParams","setProfileUserInfo","getUserByUsername","ROUTES","getProfileUserInfo","Header","color","highlightColor","height","doesUsernameExist","firebase","firestore","collection","where","get","docs","getUserByUserId","user","data","id","profileUserId","response","getFollowingPhotosByUserId","userFollowedPhotos","Promise","all","includes","userFollowedPhotosWithDetails","updateUserFollowing","userDocId","doc","update","FieldValue","arrayRemove","arrayUnion","updateProfileUserFollowers","profileUserDocId","userIds","userList","getSearchResults","users","updateProfile","imageFile","url","formData","FormData","append","Axios","post","then","secure_url","useContext","UserContext","activeUser","setActiveUser","uid","getUserInfoByUserId","FirebaseContext","logo","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","auth","signOut","userPhotoSrc","setUserPhotoSrc","getUserPhotoSrc","formatDistance","Date","AddComment","allComments","setAllComments","comment","setComment","displayName","onSubmit","event","preventDefault","type","placeholder","autoComplete","value","onChange","Comments","viewAll","setViewAll","slice","likeCount","setLikeCount","isUserLiked","setIsUserLiked","handleLike"],"mappings":"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","file":"static/js/7.f6d47995.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function FollowingFollowersUser({ username, fullName, photo, setFollowingOrFollowers }) {\n    return (\n        <div className=\"p-2 flex mx-auto items-center\">\n            <Link to={`/p/${username}`} onClick={() => setFollowingOrFollowers()}>\n                <div>\n                    <img src={photo} className=\"h-10 w-10 rounded-full\" />\n                </div>\n            </Link>\n            <div className=\"pl-4\">\n                <Link to={`/p/${username}`} onClick={() => setFollowingOrFollowers()}>\n                    <p className=\"font-bold\">{fullName}</p>\n                </Link>\n                <p className=\"text-sm\">\n                    <span className=\"text-xs\">ID: </span>\n                    {username}\n                </p>\n            </div>\n        </div>\n    );\n}\n\nFollowingFollowersUser.propTypes = {\n    username: PropTypes.string.isRequired,\n    fullName: PropTypes.string.isRequired,\n    photo: PropTypes.string.isRequired,\n    setFollowingOrFollowers: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFollowingOrFollowersList } from '../../services/firebase';\nimport FollowingFollowersUser from './FollowingFollowersUser';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nexport default function FollowingFollwersList({ following, followers, followingOrFollowers, setFollowingOrFollowers }) {\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n        const getFollowingList = async () => {\n            const result = await getFollowingOrFollowersList(following);\n            setList(result);\n        };\n        const getFollowersList = async () => {\n            const result = await getFollowingOrFollowersList(followers);\n            setList(result);\n        };\n        if (followingOrFollowers === 'following') {\n            getFollowingList();\n        }\n        if (followingOrFollowers === 'followers') {\n            getFollowersList();\n        }\n    }, [followingOrFollowers]);\n    console.log('list', list);\n    return (\n        <div className=\"bg-gray-light h-3/4 max-w-sm w-96 rounded text-gray-dark p-8\">\n            {list ? (\n                list.map((item, index) => (\n                    <FollowingFollowersUser\n                        key={index}\n                        username={item.username}\n                        fullName={item.fullName}\n                        photo={item.photo}\n                        setFollowingOrFollowers={setFollowingOrFollowers}\n                    />\n                ))\n            ) : (\n                <Skeleton count={4} className=\"w-full pb-4 h-1/4\" />\n            )}\n        </div>\n    );\n}\n\nFollowingFollwersList.propTypes = {\n    // profileUserInfo: PropTypes.shape({\n    //     dateCreated: PropTypes.number,\n    //     email: PropTypes.string,\n    //     followers: PropTypes.array,\n    //     following: PropTypes.array,\n    //     fullName: PropTypes.string,\n    //     userId: PropTypes.string,\n    //     username: PropTypes.string,\n    //     category: PropTypes.string,\n    //     photo: PropTypes.string,\n    //     title: PropTypes.string,\n    //     bio: PropTypes.string,\n    //     docId: PropTypes.string,\n    // }),\n    followingOrFollowers: PropTypes.string,\n    following: PropTypes.array,\n    followers: PropTypes.array,\n    setFollowingOrFollowers: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useUser from '../../hooks/useUser';\nimport { IsUserFollowingProfileUser } from '../../services/firebase';\nimport { toggleFollow } from '../../services/firebase';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport FollowingFollwersList from './FollowingFollwersList';\n\nexport default function ProfileHeader({ profileUserInfo, photos, photoCounts }) {\n    const {\n        userInfo: { username, docId, userId },\n    } = useUser();\n\n    const [isUserFollowing, setIsUserFollowing] = useState(null);\n    const [followersCount, setFollowersCount] = useState(profileUserInfo.followers.length);\n    const [followingOrFollowers, setFollowingOrFollowers] = useState(null);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        const checkIfUsersFollowing = async () => {\n            const result = await IsUserFollowingProfileUser(username, profileUserInfo.userId);\n            setIsUserFollowing(!!result);\n        };\n        if (profileUserInfo && username) {\n            checkIfUsersFollowing();\n        }\n    }, [profileUserInfo, username]);\n\n    const toggleUserFollow = async () => {\n        setIsUserFollowing((prevState) => !prevState);\n        isUserFollowing\n            ? setFollowersCount((prevState) => prevState - 1)\n            : setFollowersCount((prevState) => prevState + 1);\n\n        await toggleFollow(docId, userId, profileUserInfo.docId, profileUserInfo.userId, isUserFollowing);\n    };\n\n    const closeFollowingFollowersList = (e) => {\n        if (e.target === e.currentTarget) {\n            setFollowingOrFollowers(null);\n        }\n    };\n\n    return (\n        <div className=\"pt-24 text-gray-light\">\n            {followingOrFollowers && (\n                <div\n                    onClick={(e) => {\n                        closeFollowingFollowersList(e);\n                    }}\n                    className=\"flex justify-center w-screen h-screen pt-20 bg-gray-primary bg-opacity-50 absolute top-0 left-0 z-90\"\n                >\n                    <div className=\"\">\n                        <FollowingFollwersList\n                            following={profileUserInfo.following}\n                            followers={profileUserInfo.followers}\n                            followingOrFollowers={followingOrFollowers}\n                            setFollowingOrFollowers={setFollowingOrFollowers}\n                        />\n                    </div>\n                </div>\n            )}\n            <div className=\"flex items-center \">\n                <div className=\"pr-4\">\n                    <img\n                        src={profileUserInfo.photo}\n                        alt={`${profileUserInfo.username} profile photo`}\n                        className=\"w-36 h-36 rounded-full\"\n                    />\n                </div>\n\n                <div className=\"w-1/2\">\n                    <div className=\"flex items-center\">\n                        <div>\n                            <p className=\"text-lg font-bold\">{profileUserInfo.fullName}</p>\n                            <p>\n                                <span className=\"text-sm\">ID: </span>\n                                {profileUserInfo.username}\n                            </p>\n                        </div>\n                        <div className=\"ml-10\">\n                            {profileUserInfo.username === username ? (\n                                <button\n                                    className=\"text-xs bg-gray-dark text-gray-light p-2 rounded\"\n                                    onClick={() => history.push(`/edit/${username}`)}\n                                >\n                                    Edit Profile\n                                </button>\n                            ) : null}\n                        </div>\n                    </div>\n\n                    <p className=\"\">\n                        <span className=\"text-sm\">Category: </span>\n                        {profileUserInfo.category}\n                    </p>\n                    <div className=\"flex mt-4\">\n                        <p>\n                            {photoCounts} <span className=\"text-sm\">{photoCounts === 1 ? 'post' : 'posts'}</span>\n                        </p>\n                        <p\n                            className=\"px-4 cursor-pointer\"\n                            onClick={() => setFollowingOrFollowers(profileUserInfo.followers.length > 0 && 'followers')}\n                        >\n                            {followersCount}{' '}\n                            <span className=\"text-sm\">\n                                {profileUserInfo.followers.length === 1 ? 'follower' : 'followers'}\n                            </span>\n                        </p>\n                        <p\n                            className=\"cursor-pointer\"\n                            onClick={() => setFollowingOrFollowers(profileUserInfo.following.length > 0 && 'following')}\n                        >\n                            {profileUserInfo.following.length} <span className=\"text-sm\">following</span>\n                        </p>\n                    </div>\n                </div>\n                <div>\n                    {profileUserInfo.username === username || isUserFollowing === null ? null : (\n                        <button\n                            onClick={toggleUserFollow}\n                            className={`rounded text-gray-light bg-red-primary text-sm py-2 px-6 ${\n                                isUserFollowing ? 'bg-red-primary' : 'bg-blue-primary'\n                            }`}\n                        >\n                            {isUserFollowing ? 'Unfollow' : 'Follow'}\n                        </button>\n                    )}\n                </div>\n            </div>\n            <div className=\"pt-2 max-w-2xl\">\n                <p className=\"\">{profileUserInfo.title}</p>\n                <p className=\"text-sm\">Bio:</p>\n                <p className=\"break-words text-sm\">{profileUserInfo.bio}</p>\n            </div>\n        </div>\n    );\n}\n\nProfileHeader.propTypes = {\n    profileUserInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n        bio: PropTypes.string,\n        docId: PropTypes.string,\n    }),\n    photos: PropTypes.array,\n    photoCounts: PropTypes.number,\n};\n\n{\n    /* <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n            <Skeleton count={1} width={480} height={200} className=\"mt-20\" />\n        </SkeletonTheme> */\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../post/Header';\nimport Image from '../post/Image';\nimport Action from '../post/Action';\n\nexport default function ImageDetails({ photo }) {\n    return (\n        <div className=\"bg-gray-light py-8 px-16 mb-8\">\n            <Header userId={photo.userId} username={photo.username} caption={photo.caption} date={photo.dateCreated} />\n            <Image imageSrc={photo.imageSrc} />\n            <Action\n                likes={photo.likes}\n                userLikedPhoto={photo.userLikedPhoto}\n                comments={photo.comments}\n                docId={photo.docId}\n            />\n        </div>\n    );\n}\n\nImageDetails.propTypes = {\n    photo: PropTypes.shape({\n        caption: PropTypes.string.isRequired,\n        comments: PropTypes.array.isRequired,\n        dateCreated: PropTypes.number.isRequired,\n        docId: PropTypes.string.isRequired,\n        imageSrc: PropTypes.string.isRequired,\n        likes: PropTypes.array.isRequired,\n        photoId: PropTypes.string.isRequired,\n        userId: PropTypes.string.isRequired,\n        username: PropTypes.string.isRequired,\n        userLikedPhoto: PropTypes.bool.isRequired,\n    }),\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageDetails from './ImageDetails';\n\nexport default function Image({ photo }) {\n    const [isImageClicked, setIsImageClicked] = useState(false);\n    const screenToggle = () => {\n        setIsImageClicked((prevState) => !prevState);\n    };\n\n    const closeImage = (e) => {\n        if (e.target === e.currentTarget) {\n            screenToggle();\n        }\n    };\n\n    return (\n        <>\n            <img\n                src={photo.imageSrc}\n                alt={photo.caption}\n                className=\"object-cover cursor-pointer\"\n                style={{ width: '100%', aspectRatio: '1' }}\n                onClick={screenToggle}\n            />\n            {isImageClicked && (\n                <div\n                    onClick={(e) => {\n                        closeImage(e);\n                    }}\n                    className=\"flex justify-center w-screen pt-20 bg-gray-primary bg-opacity-50 absolute top-0 left-0 z-90\"\n                >\n                    <div className=\"w-full max-w-screen-sm pb-8\">\n                        <ImageDetails photo={photo} />\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nImage.propTypes = {\n    photo: PropTypes.shape({ imageSrc: PropTypes.string, caption: PropTypes.string }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from './Image';\n\nexport default function Images({ profileUserInfo, photos }) {\n    return (\n        <div className=\"border-t-2 border-gray-dark my-8 pt-8\">\n            <div className=\"grid grid-cols-3 gap-8 items-center\">\n                {photos.map((photo, index) => (\n                    <Image key={index} photo={photo} />\n                ))}\n\n                {/* <img src={photos[0].imageSrc} />\n                <img src={photos[0].imageSrc} />\n                <img src={photos[0].imageSrc} />\n                <img src={photos[0].imageSrc} />\n                <img src={photos[0].imageSrc} />\n                <img src={photos[0].imageSrc} />\n                <img src={photos[0].imageSrc} />\n                <img src={photos[0].imageSrc} />\n                <img src={photos[0].imageSrc} /> */}\n            </div>\n        </div>\n    );\n}\nImages.propTypes = {\n    profileUserInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n        bio: PropTypes.string,\n    }),\n    photos: PropTypes.array,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ProfileHeader from './ProfileHeader';\nimport Images from './Images';\nimport { getPhotosbyUserId } from '../../services/firebase';\n\nexport default function UserProfile({ profileUserInfo }) {\n    const [photos, setPhotos] = useState(null);\n    const [photoCounts, setPhotoCounts] = useState(0);\n\n    useEffect(() => {\n        const getProfileUserPhotos = async () => {\n            const result = await getPhotosbyUserId(profileUserInfo.userId);\n            setPhotos(result);\n            setPhotoCounts(result.length);\n        };\n        if (profileUserInfo?.userId) {\n            getProfileUserPhotos();\n        }\n    }, [profileUserInfo?.userId]);\n\n    return (\n        <div className=\"max-w-screen-lg container mx-auto px-4\">\n            <ProfileHeader profileUserInfo={profileUserInfo} photos={photos} photoCounts={photoCounts} />\n            {photos ? (\n                <Images profileUserInfo={profileUserInfo} photos={photos} />\n            ) : (\n                <div className=\"mt-8 border-t-2 border-gray-dark\">\n                    <p className=\"text-gray-light text-center pt-8\">No Photos</p>\n                </div>\n            )}\n        </div>\n    );\n}\n\nUserProfile.propTypes = {\n    profileUserInfo: PropTypes.object,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { getUserByUsername } from '../services/firebase';\nimport UserProfile from '../components/profile/';\nimport { useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nexport default function Profile() {\n    const { username } = useParams();\n    const [profileUserInfo, setProfileUserInfo] = useState(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        const getProfileUserInfo = async () => {\n            const [result] = await getUserByUsername(username);\n            setProfileUserInfo(result);\n            if (!result) {\n                history.push(ROUTES.NOT_FOUND);\n            }\n        };\n        if (username) {\n            getProfileUserInfo();\n        }\n    }, [username]);\n\n    return profileUserInfo?.username ? (\n        <div>\n            <Header />\n            <UserProfile profileUserInfo={profileUserInfo} />\n        </div>\n    ) : (\n        <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n            <div className=\"max-w-screen-lg h-screen mx-auto\">\n                <Skeleton count={1} height={200} className=\"mt-20 mx-4\" />\n            </div>\n        </SkeletonTheme>\n    );\n}\n","import { firebase, FieldValue } from '../lib/firebase';\nimport Axios from 'axios';\n\nexport async function doesUsernameExist(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    console.log(result.docs.length > 0);\n    return result.docs.length > 0;\n}\n\nexport async function getUserByUserId(userId) {\n    const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function getUserByUsername(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function IsUserFollowingProfileUser(username, profileUserId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .where('following', 'array-contains', profileUserId)\n        .get();\n    const [response = {}] = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return response.userId;\n    // if (user.following.includes(profileUserId)) {\n    //     return true;\n    // } else {\n    //     return false;\n    // }\n}\n\nexport async function getFollowingPhotosByUserId(following, userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', 'in', following).get();\n    const userFollowedPhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const userFollowedPhotosWithDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const [userInfo] = await getUserByUserId(photo.userId);\n            const { username } = userInfo;\n            return {\n                username,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return userFollowedPhotosWithDetails;\n}\n\nexport async function getPhotosbyUserId(userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get();\n    const photos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    return photos;\n}\n\nexport async function updateUserFollowing(userDocId, profileUserId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(userDocId)\n        .update({\n            following: isUserFollowing ? FieldValue.arrayRemove(profileUserId) : FieldValue.arrayUnion(profileUserId),\n        });\n}\n\nexport async function updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(profileUserDocId)\n        .update({\n            followers: isUserFollowing ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n        });\n}\n\nexport async function toggleFollow(userDocId, userId, profileUserDocId, profileUserId, isUserFollowing) {\n    await updateUserFollowing(userDocId, profileUserId, isUserFollowing);\n    await updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing);\n}\n\n// export async function updateProfile(docId, fullName, category, title, bio) {\n//     firebase.firestore().collection('users').doc(docId).update({\n//         fullName,\n//         category,\n//         title,\n//         bio,\n//     });\n// }\n\nexport async function getFollowingOrFollowersList(userIds) {\n    const result = await Promise.all(\n        userIds.map(async (userId) => {\n            const [userList] = await getUserByUserId(userId);\n            console.log('userList', userList);\n            return userList;\n        })\n    );\n    console.log('result', result);\n    return result;\n}\n\nexport async function getSearchResults(category) {\n    const result = await firebase.firestore().collection('users').where('category', '==', category).get();\n    const users = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    console.log(users);\n    return users;\n}\n\nexport async function updateProfilePhoto(imageFile) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', 's4onxndn');\n    formData.append('cloud_name', 'test');\n\n    Axios.post('https://api.cloudinary.com/v1_1/dvhwserkv/image/upload', formData)\n        // .then((response) => console.log('response', response))\n        .then(({ data }) => {\n            console.log(JSON.stringify(data.secure_url));\n            url = JSON.stringify(data.secure_url);\n            console.log('url', url);\n        });\n    return url;\n}\n\nexport async function updateProfile(docId, fullName, category, title, bio, imageFile) {\n    if (imageFile) {\n        let url = '';\n        const formData = new FormData();\n        formData.append('file', imageFile[0]);\n        formData.append('upload_preset', 's4onxndn');\n        formData.append('cloud_name', 'test');\n\n        await Axios.post('https://api.cloudinary.com/v1_1/dvhwserkv/image/upload', formData)\n            // .then((response) => console.log('response', response))\n            .then(({ data }) => {\n                // console.log(JSON.stringify(data.secure_url));\n                url = data.secure_url;\n                console.log('url', url);\n            });\n\n        firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n            photo: url,\n        });\n    } else {\n        firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n        });\n    }\n}\n// s4onxndn\n","import { useContext, useState, useEffect } from 'react';\nimport UserContext from '../context/user';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function useUser() {\n    const { user } = useContext(UserContext);\n    const [activeUser, setActiveUser] = useState({});\n\n    useEffect(() => {\n        async function getUserInfoByUserId() {\n            const [result] = await getUserByUserId(user.uid);\n            setActiveUser(result);\n        }\n        if (user?.uid) {\n            getUserInfoByUserId();\n        }\n    }, [user]);\n    return { userInfo: activeUser };\n}\n","export default __webpack_public_path__ + \"static/media/logo.6dc95425.png\";","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logo from '../images/logo.png';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport UserContext from '../context/user';\nimport FirebaseContext from '../context/firebase';\nimport { getUserByUserId } from '../services/firebase';\nimport useUser from '../hooks/useUser';\n\nexport default function Header() {\n    // const [userInfo, setUserInfo] = useState('');\n    const { user } = useContext(UserContext);\n    const { firebase } = useContext(FirebaseContext);\n    const history = useHistory();\n    const handleSignOut = () => {\n        firebase.auth().signOut();\n        history.push(ROUTES.LOGIN);\n    };\n\n    const { userInfo } = useUser();\n\n    // useEffect(() => {\n    //     const getUserInfo = async () => {\n    //         const [result] = await getUserByUserId(user.uid);\n    //         setUserInfo(result);\n    //     };\n    //     if (user?.uid) {\n    //         getUserInfo();\n    //     }\n    // }, [user]);\n\n    return (\n        <div className=\"bg-gray-dark w-screen h-14 flex justify-center items-center fixed z-50\">\n            <div className=\"max-w-screen-xl w-screen h-14 flex justify-between items-center\">\n                <Link to={ROUTES.DASHBOARD}>\n                    <h1 className=\"h-14 flex\">\n                        <img src={logo} alt=\"artisto\" />\n                    </h1>\n                </Link>\n                <div className=\"flex flex-row items-center\">\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.SEARCH}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.MESSAGES}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"flex h-14 items-center pr-4\">\n                        <Link to={`/p/${userInfo.username}`}>\n                            <img src={userInfo.photo} className=\"h-10 w-10 rounded-full\" />\n                        </Link>\n                    </div>\n                    <div className=\"pr-4 cursor-pointer\" onClick={handleSignOut}>\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-8 w-8 text-gray-light\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                            />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    userInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n    }),\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { formatDistance } from 'date-fns';\nimport { getUserByUserId } from '../../services/firebase';\n\nexport default function Header({ username, userId, caption, date }) {\n    const [userPhotoSrc, setUserPhotoSrc] = useState(null);\n    useEffect(() => {\n        const getUserPhotoSrc = async () => {\n            const [result] = await getUserByUserId(userId);\n            const { photo } = result;\n            setUserPhotoSrc(photo);\n        };\n        if (userId) {\n            getUserPhotoSrc();\n        }\n    }, [userId]);\n\n    return (\n        <div className=\"\">\n            <div className=\"flex\">\n                <Link to={`/p/${username}`}>\n                    <img src={userPhotoSrc} alt={`${username} profile photo`} className=\"w-12 h-12 rounded-full mr-4\" />\n                </Link>\n                <div>\n                    <Link to={`/p/${username}`}>\n                        <p className=\"font-bold text-gray-dark\">{username}</p>\n                    </Link>\n                    <p className=\"text-gray-dark break-words\">{caption}</p>\n                </div>\n            </div>\n            <p className=\"text-gray-primary text-xs pt-2 text-right\">{formatDistance(date, new Date())} ago</p>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    username: PropTypes.string.isRequired,\n    userId: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n    date: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Image({ imageSrc }) {\n    return (\n        <div className=\"flex w-full justify-center pt-2 pb-2\">\n            <img src={imageSrc} className=\"w-full\" />\n        </div>\n    );\n}\n\nImage.propTypes = {\n    imageSrc: PropTypes.string.isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport UserContext from '../../context/user';\nimport FirebaseContext from '../../context/firebase';\n\nexport default function AddComment({ allComments, setAllComments, docId }) {\n    const [comment, setComment] = useState('');\n    const {\n        user: { displayName, uid: userId },\n    } = useContext(UserContext);\n    const { firebase, FieldValue } = useContext(FirebaseContext);\n\n    const handleSubmit = (event) => {\n        event.preventDefault(event);\n        setAllComments([{ comment, userId, displayName }, ...allComments]);\n        setComment('');\n        return firebase\n            .firestore()\n            .collection('photos')\n            .doc(docId)\n            .update({\n                comments: FieldValue.arrayUnion({ comment, userId, displayName }),\n            });\n    };\n    return (\n        <div className=\"mt-2\">\n            <form className=\"flex\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"add a comment...\"\n                    autoComplete=\"off\"\n                    className=\"text-sm w-full p-2 rounded-l\"\n                    value={comment}\n                    onChange={({ target }) => setComment(target.value)}\n                />\n                <button\n                    type=\"submit\"\n                    className={`p-2 bg-blue-primary text-gray-light rounded-r ${comment.length < 1 && 'opacity-50'}`}\n                >\n                    SEND\n                </button>\n            </form>\n        </div>\n    );\n}\n\nAddComment.propTypes = {\n    allComments: PropTypes.array,\n    setAllComments: PropTypes.func.isRequired,\n    docId: PropTypes.string.isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddComment from './AddComment';\nimport UserContext from '../../context/user';\n\nexport default function Comments({ allComments, setAllComments, docId }) {\n    const [viewAll, setViewAll] = useState(false);\n    const { user } = useContext(UserContext);\n\n    // const handleViewAllComments = () => {\n    //     setViewAll(true);\n    // };\n    return (\n        <div className=\"pt-2\">\n            <div>\n                {allComments.slice(0, 3).map((comment, index) => (\n                    <p className=\"text-sm text-gray-dark break-words\" key={index}>\n                        <Link to={`/p/${user.displayName}`}>\n                            <span className=\"font-bold\">{comment.displayName} </span>\n                        </Link>\n                        {'   '}\n                        {comment.comment}\n                    </p>\n                ))}\n            </div>\n            {allComments.length > 3 && !viewAll ? (\n                <p\n                    className=\"text-xs text-gray-primary opacity-70 pt-2 cursor-pointer\"\n                    onClick={() => setViewAll(true)}\n                >\n                    View All Comments\n                </p>\n            ) : viewAll ? (\n                allComments.slice(3).map((comment, index) => (\n                    <p className=\"text-sm text-gray-dark break-words\" key={index}>\n                        <Link to={`/p/${user.displayName}`}>\n                            <span className=\"font-bold\">{comment.displayName} </span>\n                        </Link>\n                        {'   '}\n                        {comment.comment}\n                    </p>\n                ))\n            ) : null}\n            <AddComment allComments={allComments} setAllComments={setAllComments} docId={docId} />\n        </div>\n    );\n}\n\nComments.propTypes = {\n    allComments: PropTypes.array.isRequired,\n    setAllComments: PropTypes.func.isRequired,\n    docId: PropTypes.string.isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Comments from './Comments';\nimport UserContext from '../../context/user';\nimport FirebaseContext from '../../context/firebase';\n\nexport default function Action({ likes, userLikedPhoto, comments, docId }) {\n    const [likeCount, setLikeCount] = useState(likes.length);\n    const [allComments, setAllComments] = useState(comments);\n    const [isUserLiked, setIsUserLiked] = useState(userLikedPhoto);\n\n    const {\n        user: { uid: userId = '' },\n    } = useContext(UserContext);\n    const { firebase, FieldValue } = useContext(FirebaseContext);\n\n    const handleLike = async () => {\n        setIsUserLiked(!isUserLiked);\n        await firebase\n            .firestore()\n            .collection('photos')\n            .doc(docId)\n            .update({\n                likes: isUserLiked ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n            });\n        setLikeCount((likeCount) => (isUserLiked ? likeCount - 1 : likeCount + 1));\n    };\n\n    return (\n        <div className=\"\">\n            <div className=\"flex\">\n                <div className=\"flex items-end\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className={`h-8 w-8 text-gray-dark cursor-pointer ${isUserLiked && 'fill-red'} `}\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                        onClick={handleLike}\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                        />\n                    </svg>\n                    <p className=\"text-sm text-gray-dark\">{likeCount}</p>\n                </div>\n                <div className=\"flex items-end pl-4\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-8 w-8 text-gray-dark cursor-pointer\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                        />\n                    </svg>\n                    <p className=\"text-sm text-gray-dark\">{allComments.length}</p>\n                </div>\n            </div>\n            <Comments setAllComments={setAllComments} allComments={allComments} docId={docId} />\n        </div>\n    );\n}\n\nAction.propTypes = {\n    likes: PropTypes.array.isRequired,\n    comments: PropTypes.array.isRequired,\n    userLikedPhoto: PropTypes.bool.isRequired,\n    docId: PropTypes.string.isRequired,\n};\n"],"sourceRoot":""}