{"version":3,"sources":["pages/UploadImage.js","services/firebase.js","hooks/useUser.js","images/logo.png","components/Header.js"],"names":["UploadImage","useState","image","setImage","imageForUpload","setImageForUpload","caption","setCaption","history","useHistory","console","log","useUser","userInfo","userId","username","postSubmit","event","a","preventDefault","uploadNewPost","alert","setTimeout","push","isInvalid","className","onSubmit","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","src","htmlFor","type","accept","onChange","target","files","URL","createObjectURL","id","placeholder","value","disabled","cloudName","process","presets","doesUsernameExist","firebase","firestore","collection","where","get","result","docs","length","getUserByUserId","user","map","item","data","docId","getUserByUsername","IsUserFollowingProfileUser","profileUserId","response","getFollowingPhotosByUserId","following","userFollowedPhotos","photo","Promise","all","userLikedPhoto","likes","includes","userFollowedPhotosWithDetails","getPhotosbyUserId","photos","getLatestPhotoInfo","photoId","profileUsername","photoWithDetails","updateUserFollowing","userDocId","isUserFollowing","doc","update","FieldValue","arrayRemove","arrayUnion","updateProfileUserFollowers","profileUserDocId","followers","toggleFollow","getFollowingOrFollowersList","userIds","userList","getSearchResults","category","users","updateProfile","fullName","title","bio","imageFile","url","formData","FormData","append","Axios","post","then","secure_url","add","comments","dateCreated","Date","now","imageSrc","userLatitude","userLongitude","useContext","UserContext","activeUser","setActiveUser","useEffect","uid","getUserInfoByUserId","Header","FirebaseContext","to","ROUTES","logo","alt","auth","signOut"],"mappings":"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","file":"static/js/12.0963c903.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Header from '../components/Header';\nimport { useHistory } from 'react-router-dom';\nimport { uploadNewPost } from '../services/firebase';\nimport useUser from '../hooks/useUser';\n\nexport default function UploadImage() {\n    const [image, setImage] = useState(null);\n    const [imageForUpload, setImageForUpload] = useState(null);\n    const [caption, setCaption] = useState('');\n    const history = useHistory();\n\n    console.log('image', image);\n    console.log('imageForUpload', imageForUpload);\n\n    const {\n        userInfo: { userId, username },\n    } = useUser();\n\n    const onImageChange = (event) => {\n        setImageForUpload(event.target.files);\n        if (event.target.files && event.target.files[0]) {\n            setImage(URL.createObjectURL(event.target.files[0]));\n        }\n    };\n\n    const postSubmit = async (event) => {\n        event.preventDefault();\n        await uploadNewPost(caption, imageForUpload, userId);\n        alert('Your post was successfully uploaded!');\n        const timer = setTimeout(() => {\n            history.push(`/p/${username}`);\n        }, 500);\n    };\n\n    const isInvalid = !image || !caption;\n\n    const removeImageSelected = (event) => {\n        event.preventDefault();\n        setImage(null);\n    };\n\n    return (\n        <div>\n            <Header />\n            <div className=\"container max-w-screen-lg mx-auto\">\n                <div className=\"pt-32 flex\">\n                    <form onSubmit={postSubmit} className=\"flex w-full max-w-screen-lg mx-auto\">\n                        <div className=\"w-1/2\">\n                            <div className=\"border-gray-light border-dotted border-4 flex relative h-96 items-center justify-center rounded-xl\">\n                                {image && (\n                                    <button onClick={removeImageSelected} className=\"absolute top-0 left-0\">\n                                        <svg\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            className=\"h-8 w-8 text-red-primary\"\n                                            fill=\"none\"\n                                            viewBox=\"0 0 24 24\"\n                                            stroke=\"currentColor\"\n                                        >\n                                            <path\n                                                strokeLinecap=\"round\"\n                                                strokeLinejoin=\"round\"\n                                                strokeWidth={2}\n                                                d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                                            />\n                                        </svg>\n                                    </button>\n                                )}\n\n                                {image ? (\n                                    <div className=\"flex w-full h-full\">\n                                        <img src={image} className=\"p-4 m-4 mx-auto\" />\n                                    </div>\n                                ) : (\n                                    <div>\n                                        <label\n                                            htmlFor=\"imageUploader\"\n                                            className=\"cursor-pointer text-gray-light bg-blue-primary p-2 rounded\"\n                                        >\n                                            Choose Image\n                                        </label>\n                                        <input\n                                            type=\"file\"\n                                            accept=\"image/*\"\n                                            onChange={onImageChange}\n                                            className=\"text-gray-light text-center hidden\"\n                                            id=\"imageUploader\"\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"w-1/2 h-96 flex justify-center items-end pl-8\">\n                            <div className=\"w-full\">\n                                <textarea\n                                    placeholder=\"Write a caption...\"\n                                    onChange={({ target }) => setCaption(target.value)}\n                                    value={caption}\n                                    className=\"h-32 p-4 w-full rounded\"\n                                />\n                                <button\n                                    type=\"submit\"\n                                    disabled={isInvalid}\n                                    className={`mt-4 bg-yellow-primary text-gray-dark py-2 px-6 rounded ${\n                                        isInvalid && 'opacity-50'\n                                    }`}\n                                >\n                                    Post\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { firebase, FieldValue } from '../lib/firebase';\nimport Axios from 'axios';\nconst cloudName = `${process.env.REACT_APP_CLOUD_NAME}`;\nconst presets = `${process.env.REACT_APP_PRESETS}`;\n\nexport async function doesUsernameExist(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    console.log(result.docs.length > 0);\n    return result.docs.length > 0;\n}\n\nexport async function getUserByUserId(userId) {\n    const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function getUserByUsername(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function IsUserFollowingProfileUser(username, profileUserId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .where('following', 'array-contains', profileUserId)\n        .get();\n    const [response = {}] = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return response.userId;\n    // if (user.following.includes(profileUserId)) {\n    //     return true;\n    // } else {\n    //     return false;\n    // }\n}\n\nexport async function getFollowingPhotosByUserId(following, userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', 'in', following).get();\n    const userFollowedPhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const userFollowedPhotosWithDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const [userInfo] = await getUserByUserId(photo.userId);\n            const { username } = userInfo;\n            return {\n                username,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return userFollowedPhotosWithDetails;\n}\n\nexport async function getPhotosbyUserId(userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get();\n    const photos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    return photos;\n}\n\nexport async function getLatestPhotoInfo(photoId, userId, profileUsername) {\n    const result = await firebase.firestore().collection('photos').where('photoId', '==', photoId).get();\n    const [photoWithDetails] = await result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    console.log(photoWithDetails);\n    let userLikedPhoto = false;\n    if (photoWithDetails.likes.includes(userId)) {\n        userLikedPhoto = true;\n    }\n    return { ...photoWithDetails, userLikedPhoto, username: profileUsername };\n}\n\nexport async function updateUserFollowing(userDocId, profileUserId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(userDocId)\n        .update({\n            following: isUserFollowing ? FieldValue.arrayRemove(profileUserId) : FieldValue.arrayUnion(profileUserId),\n        });\n}\n\nexport async function updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(profileUserDocId)\n        .update({\n            followers: isUserFollowing ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n        });\n}\n\nexport async function toggleFollow(userDocId, userId, profileUserDocId, profileUserId, isUserFollowing) {\n    await updateUserFollowing(userDocId, profileUserId, isUserFollowing);\n    await updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing);\n}\n\n// export async function updateProfile(docId, fullName, category, title, bio) {\n//     firebase.firestore().collection('users').doc(docId).update({\n//         fullName,\n//         category,\n//         title,\n//         bio,\n//     });\n// }\n\nexport async function getFollowingOrFollowersList(userIds) {\n    const result = await Promise.all(\n        userIds.map(async (userId) => {\n            const [userList] = await getUserByUserId(userId);\n            console.log('userList', userList);\n            return userList;\n        })\n    );\n    console.log('result', result);\n    return result;\n}\n\nexport async function getSearchResults(category) {\n    const result = await firebase.firestore().collection('users').where('category', '==', category).get();\n    const users = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    console.log(users);\n    return users;\n}\n\nexport async function updateProfilePhoto(imageFile) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', presets);\n    formData.append('cloud_name', 'test');\n\n    Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData)\n        // .then((response) => console.log('response', response))\n        .then(({ data }) => {\n            console.log(JSON.stringify(data.secure_url));\n            url = JSON.stringify(data.secure_url);\n            console.log('url', url);\n        });\n    return url;\n}\n\nexport async function updateProfile(docId, fullName, category, title, bio, imageFile) {\n    if (imageFile) {\n        let url = '';\n        const formData = new FormData();\n        formData.append('file', imageFile[0]);\n        formData.append('upload_preset', presets);\n\n        await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n            url = data.secure_url;\n            console.log('url', url);\n        });\n\n        firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n            photo: url,\n        });\n    } else {\n        firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n        });\n    }\n}\n\nexport async function uploadNewPost(caption, imageFile, userId) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', presets);\n\n    await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n        url = data.secure_url;\n        console.log('url', url);\n    });\n\n    await firebase\n        .firestore()\n        .collection('photos')\n        .add({\n            caption,\n            comments: [],\n            dateCreated: Date.now(),\n            imageSrc: url,\n            likes: [],\n            photoId: userId + Date.now(),\n            userId,\n            userLatitude: 34.0522,\n            userLongitude: -188.2437,\n        });\n}\n","import { useContext, useState, useEffect } from 'react';\nimport UserContext from '../context/user';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function useUser() {\n    const { user } = useContext(UserContext);\n    const [activeUser, setActiveUser] = useState({});\n\n    useEffect(() => {\n        async function getUserInfoByUserId() {\n            const [result] = await getUserByUserId(user.uid);\n            setActiveUser(result);\n        }\n        if (user?.uid) {\n            getUserInfoByUserId();\n        }\n    }, [user]);\n    return { userInfo: activeUser };\n}\n","export default __webpack_public_path__ + \"static/media/logo.6dc95425.png\";","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logo from '../images/logo.png';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport UserContext from '../context/user';\nimport FirebaseContext from '../context/firebase';\nimport { getUserByUserId } from '../services/firebase';\nimport useUser from '../hooks/useUser';\n\nexport default function Header() {\n    // const [userInfo, setUserInfo] = useState('');\n    const { user } = useContext(UserContext);\n    const { firebase } = useContext(FirebaseContext);\n    const history = useHistory();\n    const handleSignOut = () => {\n        firebase.auth().signOut();\n        history.push(ROUTES.LOGIN);\n    };\n\n    const { userInfo } = useUser();\n\n    // useEffect(() => {\n    //     const getUserInfo = async () => {\n    //         const [result] = await getUserByUserId(user.uid);\n    //         setUserInfo(result);\n    //     };\n    //     if (user?.uid) {\n    //         getUserInfo();\n    //     }\n    // }, [user]);\n\n    return (\n        <div className=\"bg-gray-dark w-screen h-14 flex justify-center items-center fixed z-50\">\n            <div className=\"max-w-screen-xl w-screen h-14 flex justify-between items-center\">\n                <Link to={ROUTES.DASHBOARD}>\n                    <h1 className=\"h-14 flex\">\n                        <img src={logo} alt=\"artisto\" />\n                    </h1>\n                </Link>\n                <div className=\"flex flex-row items-center\">\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.UPLOAD_IMAGE}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 4v16m8-8H4\" />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.SEARCH}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.MESSAGES}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"flex h-14 items-center pr-4\">\n                        <Link to={`/p/${userInfo.username}`}>\n                            <img src={userInfo.photo} className=\"h-10 w-10 rounded-full object-cover\" />\n                        </Link>\n                    </div>\n                    <div className=\"pr-4 cursor-pointer\" onClick={handleSignOut}>\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-8 w-8 text-gray-light\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                            />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    userInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n    }),\n};\n"],"sourceRoot":""}