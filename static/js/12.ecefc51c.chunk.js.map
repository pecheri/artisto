{"version":3,"sources":["pages/NotFound.js","services/firebase.js","images/logo.png","components/Header.js"],"names":["NotFound","className","cloudName","process","presets","doesUsernameExist","username","a","firebase","firestore","collection","where","get","result","docs","length","getUserByUserId","userId","user","map","item","data","docId","id","getUserByUsername","IsUserFollowingProfileUser","profileUserId","response","getFollowingPhotosByUserId","following","userFollowedPhotos","photo","Promise","all","userLikedPhoto","likes","includes","userInfo","userFollowedPhotosWithDetails","getPhotosbyUserId","photos","getLatestPhotoInfo","photoId","profileUsername","photoWithDetails","updateUserFollowing","userDocId","isUserFollowing","doc","update","FieldValue","arrayRemove","arrayUnion","updateProfileUserFollowers","profileUserDocId","followers","toggleFollow","getFollowingOrFollowersList","userIds","userList","getSearchResults","category","users","updateProfile","fullName","title","bio","imageFile","setUpload","url","formData","FormData","append","Axios","post","then","secure_url","alert","message","uploadNewPost","caption","add","comments","dateCreated","Date","now","imageSrc","userLatitude","userLongitude","Header","useState","setUserInfo","useContext","UserContext","uid","FirebaseContext","history","useHistory","useEffect","getUserInfo","to","ROUTES","src","logo","alt","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","auth","signOut","push"],"mappings":"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","file":"static/js/12.ecefc51c.chunk.js","sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\n\nexport default function NotFound() {\n    return (\n        <div>\n            <Header />\n            <p className=\"text-gray-light text-xl pt-48 text-center\">Page Not Found!</p>\n        </div>\n    );\n}\n","import { firebase, FieldValue } from '../lib/firebase';\nimport Axios from 'axios';\nconst cloudName = `${process.env.REACT_APP_CLOUD_NAME}`;\nconst presets = `${process.env.REACT_APP_PRESETS}`;\n\nexport async function doesUsernameExist(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    return result.docs.length > 0;\n}\n\nexport async function getUserByUserId(userId) {\n    const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function getUserByUsername(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function IsUserFollowingProfileUser(username, profileUserId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .where('following', 'array-contains', profileUserId)\n        .get();\n    const [response = {}] = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return response.userId;\n    // if (user.following.includes(profileUserId)) {\n    //     return true;\n    // } else {\n    //     return false;\n    // }\n}\n\nexport async function getFollowingPhotosByUserId(following, userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', 'in', following).get();\n    const userFollowedPhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const userFollowedPhotosWithDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const [userInfo] = await getUserByUserId(photo.userId);\n            const { username } = userInfo;\n            return {\n                username,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return userFollowedPhotosWithDetails;\n}\n\nexport async function getPhotosbyUserId(userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get();\n    const photos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    return photos;\n}\n\nexport async function getLatestPhotoInfo(photoId, userId, profileUsername) {\n    const result = await firebase.firestore().collection('photos').where('photoId', '==', photoId).get();\n    const [photoWithDetails] = await result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    let userLikedPhoto = false;\n    if (photoWithDetails.likes.includes(userId)) {\n        userLikedPhoto = true;\n    }\n    return { ...photoWithDetails, userLikedPhoto, username: profileUsername };\n}\n\nexport async function updateUserFollowing(userDocId, profileUserId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(userDocId)\n        .update({\n            following: isUserFollowing ? FieldValue.arrayRemove(profileUserId) : FieldValue.arrayUnion(profileUserId),\n        });\n}\n\nexport async function updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(profileUserDocId)\n        .update({\n            followers: isUserFollowing ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n        });\n}\n\nexport async function toggleFollow(userDocId, userId, profileUserDocId, profileUserId, isUserFollowing) {\n    await updateUserFollowing(userDocId, profileUserId, isUserFollowing);\n    await updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing);\n}\n\nexport async function getFollowingOrFollowersList(userIds) {\n    const result = await Promise.all(\n        userIds.map(async (userId) => {\n            const [userList] = await getUserByUserId(userId);\n            return userList;\n        })\n    );\n    return result;\n}\n\nexport async function getSearchResults(category) {\n    const result = await firebase.firestore().collection('users').where('category', '==', category).get();\n    const users = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return users;\n}\n\nexport async function updateProfilePhoto(imageFile) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', presets);\n    formData.append('cloud_name', 'test');\n\n    Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n        url = JSON.stringify(data.secure_url);\n    });\n    return url;\n}\n\nexport async function updateProfile(docId, fullName, category, title, bio, imageFile, setUpload) {\n    setUpload(true);\n\n    if (imageFile) {\n        let url = '';\n        const formData = new FormData();\n        formData.append('file', imageFile[0]);\n        formData.append('upload_preset', presets);\n\n        try {\n            await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n                url = data.secure_url;\n            });\n\n            await firebase.firestore().collection('users').doc(docId).update({\n                fullName,\n                category,\n                title,\n                bio,\n                photo: url,\n            });\n\n            setUpload(false);\n        } catch (error) {\n            setUpload(false);\n            alert(error.message);\n        }\n    } else {\n        await firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n        });\n        setUpload(false);\n    }\n}\n\nexport async function uploadNewPost(caption, imageFile, userId, setUpload) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', presets);\n\n    setUpload(true);\n\n    try {\n        await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n            url = data.secure_url;\n        });\n\n        await firebase\n            .firestore()\n            .collection('photos')\n            .add({\n                caption,\n                comments: [],\n                dateCreated: Date.now(),\n                imageSrc: url,\n                likes: [],\n                photoId: userId + Date.now(),\n                userId,\n                userLatitude: 34.0522,\n                userLongitude: -188.2437,\n            });\n\n        setUpload(false);\n    } catch (error) {\n        setUpload(false);\n        alert(error.message);\n    }\n}\n","export default __webpack_public_path__ + \"static/media/logo.6dc95425.png\";","import React, { useContext, useEffect, useState } from 'react';\nimport logo from '../images/logo.png';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport UserContext from '../context/user';\nimport FirebaseContext from '../context/firebase';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function Header() {\n    const [userInfo, setUserInfo] = useState('');\n    const {\n        user: { uid: userId },\n    } = useContext(UserContext);\n\n    const { firebase } = useContext(FirebaseContext);\n    const history = useHistory();\n    const handleSignOut = () => {\n        firebase.auth().signOut();\n        history.push(ROUTES.LOGIN);\n    };\n\n    useEffect(() => {\n        let result = null;\n        const getUserInfo = async () => {\n            while (!result) {\n                [result] = await getUserByUserId(userId);\n                setUserInfo(result);\n            }\n        };\n        if (userId) {\n            getUserInfo();\n        }\n    }, [userId]);\n\n    return userInfo ? (\n        <div className=\"bg-gray-dark w-screen h-14 flex justify-center items-center fixed z-50 top-0 left-0\">\n            <div className=\"max-w-screen-xl w-full h-14 flex justify-between items-center\">\n                <Link to={ROUTES.DASHBOARD}>\n                    <h1 className=\"flex sm:h-14 sm:w-auto w-28\">\n                        {/* <h1 className=\"sm:h-14 sm:w-auto w-28 flex\"> */}\n                        <img src={logo} alt=\"artisto\" className=\"sm:h-full sm:w-auto w-full h-auto\" />\n                    </h1>\n                </Link>\n                <div className=\"flex flex-row items-center\">\n                    <div className=\"pr-2 sm:pr-4\">\n                        <Link to={ROUTES.UPLOAD_IMAGE}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 4v16m8-8H4\" />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-2 sm:pr-4\">\n                        <Link to={ROUTES.SEARCH}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-2 sm:pr-4\">\n                        <Link to={ROUTES.MESSAGES}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"flex h-14 items-center pr-2 sm:pr-4\">\n                        <Link to={`/p/${userInfo?.username}`}>\n                            <img src={userInfo?.photo} className=\"h-5 w-5 sm:h-10 sm:w-10 rounded-full object-cover\" />\n                        </Link>\n                    </div>\n                    <div className=\"pr-2 sm:pr-4 cursor-pointer\" onClick={handleSignOut}>\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                            />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    ) : null;\n}\n\n// Header.propTypes = {\n//     userInfo: PropTypes.shape({\n//         dateCreated: PropTypes.number,\n//         email: PropTypes.string,\n//         followers: PropTypes.array,\n//         following: PropTypes.array,\n//         fullName: PropTypes.string,\n//         userId: PropTypes.string,\n//         username: PropTypes.string,\n//         category: PropTypes.string,\n//         photo: PropTypes.string,\n//         title: PropTypes.string,\n//     }),\n// };\n"],"sourceRoot":""}