{"version":3,"sources":["components/post/AddComment.js","components/post/Comments.js","components/post/Action.js","components/post/index.js","components/Timeline.js","pages/DashBoard.js","services/firebase.js","images/logo.png","components/Header.js","components/post/Header.js","components/post/Image.js","components/SideProfile.js"],"names":["AddComment","allComments","setAllComments","docId","useState","comment","setComment","useContext","UserContext","user","displayName","userId","uid","FirebaseContext","firebase","FieldValue","className","onSubmit","event","preventDefault","firestore","collection","doc","update","comments","arrayUnion","type","placeholder","autoComplete","value","onChange","target","length","Comments","viewAll","setViewAll","slice","map","index","to","onClick","Action","likes","userLikedPhoto","likeCount","setLikeCount","isUserLiked","setIsUserLiked","handleLike","a","arrayRemove","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Post","photo","username","caption","date","dateCreated","Image","imageSrc","Timeline","photos","setPhotos","useEffect","result","getUserByUserId","followedUserPhotos","following","getFollowingPhotosByUserId","sort","b","getTimelinePhotos","color","highlightColor","count","width","height","DashBoard","Header","SideProfile","cloudName","process","presets","doesUsernameExist","where","get","docs","item","data","id","getUserByUsername","IsUserFollowingProfileUser","profileUserId","response","userFollowedPhotos","Promise","all","includes","userInfo","userFollowedPhotosWithDetails","getProfilePhotosbyUserId","profileId","profileUsername","profilePhotos","profilePhotosWithDetails","updateUserFollowing","userDocId","isUserFollowing","updateProfileUserFollowers","profileUserDocId","followers","toggleFollow","getFollowingOrFollowersList","userIds","userList","getSearchResults","category","searchKeyword","users","limit","updateProfile","fullName","title","bio","imageFile","setUpload","url","options","maxSizeMB","maxWidthOrHeight","imageCompression","compressedFile","formData","FormData","append","Axios","post","then","secure_url","alert","message","uploadNewPost","add","Date","now","photoId","userLatitude","userLongitude","setUserInfo","history","useHistory","getUserInfo","ROUTES","src","logo","alt","auth","signOut","push","userPhotoSrc","setUserPhotoSrc","getUserPhotoSrc","formatDistance","document","circle","substr"],"mappings":"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","file":"static/js/6.bc3734a3.chunk.js","sourcesContent":["import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport UserContext from '../../context/user';\nimport FirebaseContext from '../../context/firebase';\n\nexport default function AddComment({ allComments, setAllComments, docId }) {\n    const [comment, setComment] = useState('');\n    const {\n        user: { displayName, uid: userId },\n    } = useContext(UserContext);\n    const { firebase, FieldValue } = useContext(FirebaseContext);\n\n    const handleSubmit = (event) => {\n        event.preventDefault(event);\n        setAllComments([{ comment, userId, displayName }, ...allComments]);\n        setComment('');\n        return firebase\n            .firestore()\n            .collection('photos')\n            .doc(docId)\n            .update({\n                comments: FieldValue.arrayUnion({ comment, userId, displayName }),\n            });\n    };\n    return (\n        <div className=\"mt-2\">\n            <form className=\"flex\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"add a comment...\"\n                    autoComplete=\"off\"\n                    className=\"text-base w-full p-2 rounded-l\"\n                    value={comment}\n                    onChange={({ target }) => setComment(target.value)}\n                />\n                <button\n                    type=\"submit\"\n                    className={`p-2 bg-blue-primary text-gray-light rounded-r sm:text-base text-sm ${\n                        comment.length < 1 && 'opacity-50'\n                    }`}\n                >\n                    SEND\n                </button>\n            </form>\n        </div>\n    );\n}\n\nAddComment.propTypes = {\n    allComments: PropTypes.array,\n    setAllComments: PropTypes.func.isRequired,\n    docId: PropTypes.string.isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddComment from './AddComment';\nimport UserContext from '../../context/user';\n\nexport default function Comments({ allComments, setAllComments, docId }) {\n    const [viewAll, setViewAll] = useState(false);\n    const { user } = useContext(UserContext);\n\n    return (\n        <div className=\"pt-2\">\n            <div>\n                {allComments.slice(0, 3).map((comment, index) => (\n                    <p className=\"text-sm text-gray-dark break-words\" key={index}>\n                        <Link to={`/p/${user.displayName}`}>\n                            <span className=\"font-bold\">{comment.displayName} </span>\n                        </Link>\n                        {'   '}\n                        {comment.comment}\n                    </p>\n                ))}\n            </div>\n            {allComments.length > 3 && !viewAll ? (\n                <p\n                    className=\"text-xs text-gray-primary opacity-70 pt-2 cursor-pointer\"\n                    onClick={() => setViewAll(true)}\n                >\n                    View All Comments\n                </p>\n            ) : viewAll ? (\n                allComments.slice(3).map((comment, index) => (\n                    <p className=\"text-sm text-gray-dark break-words\" key={index}>\n                        <Link to={`/p/${user.displayName}`}>\n                            <span className=\"font-bold\">{comment.displayName} </span>\n                        </Link>\n                        {'   '}\n                        {comment.comment}\n                    </p>\n                ))\n            ) : null}\n            <AddComment allComments={allComments} setAllComments={setAllComments} docId={docId} />\n        </div>\n    );\n}\n\nComments.propTypes = {\n    allComments: PropTypes.array.isRequired,\n    setAllComments: PropTypes.func.isRequired,\n    docId: PropTypes.string.isRequired,\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Comments from './Comments';\nimport UserContext from '../../context/user';\nimport FirebaseContext from '../../context/firebase';\n\nexport default function Action({ likes, userLikedPhoto, comments, docId }) {\n    const [likeCount, setLikeCount] = useState(likes.length);\n    const [allComments, setAllComments] = useState(comments);\n    const [isUserLiked, setIsUserLiked] = useState(userLikedPhoto);\n\n    // useEffect(() => {\n    //     if (docId) {\n    //         setLikeCount(likes.length);\n    //         setAllComments(comments);\n    //         setIsUserLiked(userLikedPhoto);\n    //     }\n    // }, [docId]);\n\n    const {\n        user: { uid: userId = '' },\n    } = useContext(UserContext);\n    const { firebase, FieldValue } = useContext(FirebaseContext);\n\n    const handleLike = async () => {\n        setIsUserLiked(!isUserLiked);\n        await firebase\n            .firestore()\n            .collection('photos')\n            .doc(docId)\n            .update({\n                likes: isUserLiked ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n            });\n        setLikeCount((likeCount) => (isUserLiked ? likeCount - 1 : likeCount + 1));\n    };\n\n    return (\n        <div className=\"\">\n            <div className=\"flex\">\n                <div className=\"flex items-end\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className={`sm:h-8 sm:w-8 h-6 w-6 text-gray-dark cursor-pointer ${isUserLiked && 'fill-red'} `}\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                        onClick={handleLike}\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                        />\n                    </svg>\n                    <p className=\"text-sm text-gray-dark\">{likeCount}</p>\n                </div>\n                <div className=\"flex items-end pl-4\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-6 w-6 sm:h-8 sm:w-8 text-gray-dark cursor-pointer\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                        />\n                    </svg>\n                    <p className=\"text-sm text-gray-dark\">{allComments.length}</p>\n                </div>\n            </div>\n            <Comments setAllComments={setAllComments} allComments={allComments} docId={docId} />\n        </div>\n    );\n}\n\nAction.propTypes = {\n    likes: PropTypes.array.isRequired,\n    comments: PropTypes.array.isRequired,\n    userLikedPhoto: PropTypes.bool.isRequired,\n    docId: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Image from './Image';\nimport Action from './Action';\n\nexport default function Post({ photo }) {\n    return (\n        <div className=\"bg-gray-light py-2 sm:py-8 px-2 sm:px-8 mb-8 rounded-sm\">\n            <Header userId={photo.userId} username={photo.username} caption={photo.caption} date={photo.dateCreated} />\n            <Image imageSrc={photo.imageSrc} />\n            <Action\n                likes={photo.likes}\n                userLikedPhoto={photo.userLikedPhoto}\n                comments={photo.comments}\n                docId={photo.docId}\n            />\n        </div>\n    );\n}\n\nPost.propTypes = {\n    photo: PropTypes.shape({\n        caption: PropTypes.string.isRequired,\n        comments: PropTypes.array.isRequired,\n        dateCreated: PropTypes.number.isRequired,\n        docId: PropTypes.string.isRequired,\n        imageSrc: PropTypes.string.isRequired,\n        likes: PropTypes.array.isRequired,\n        photoId: PropTypes.string.isRequired,\n        userId: PropTypes.string.isRequired,\n        username: PropTypes.string.isRequired,\n        userLikedPhoto: PropTypes.bool.isRequired,\n    }),\n};\n","import { useState, useEffect, useContext } from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport Post from './post';\nimport UserContext from '../context/user';\nimport { getUserByUserId, getFollowingPhotosByUserId } from '../services/firebase';\n\nexport default function Timeline() {\n    const [photos, setPhotos] = useState(null);\n\n    const {\n        user: { uid: userId },\n    } = useContext(UserContext);\n\n    useEffect(() => {\n        async function getTimelinePhotos() {\n            let result = null;\n            while (!result) {\n                [result] = await getUserByUserId(userId);\n            }\n\n            let followedUserPhotos = [];\n\n            if (result.following.length > 0) {\n                followedUserPhotos = await getFollowingPhotosByUserId(result.following, userId);\n            } else {\n                null;\n            }\n            followedUserPhotos.sort((a, b) => b.dateCreated - a.dateCreated);\n            setPhotos(followedUserPhotos);\n        }\n        if (userId) {\n            getTimelinePhotos();\n        }\n    }, [userId]);\n\n    return (\n        <div className=\"col-span-3 w-full mx-auto md:col-span-2\">\n            {!photos ? (\n                <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n                    <Skeleton count={4} width={640} height={500} />\n                </SkeletonTheme>\n            ) : photos.length > 0 ? (\n                photos.map((photo) => <Post key={photo.docId} photo={photo} />)\n            ) : (\n                <p className=\"text-gray-light text-center pt-20\">Follow artists to see photos!</p>\n            )}\n        </div>\n    );\n}\n","import Header from '../components/Header';\nimport Timeline from '../components/Timeline';\nimport SideProfile from '../components/SideProfile';\n\nexport default function DashBoard() {\n    return (\n        <div className=\"font-body\">\n            <Header />\n            <div className=\"w-sceen flex justify-center mt-24 px-4\">\n                <div className=\"grid grid-cols-3 w-full max-w-screen-lg\">\n                    <Timeline />\n                    <SideProfile />\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { firebase, FieldValue } from '../lib/firebase';\nimport Axios from 'axios';\nimport imageCompression from 'browser-image-compression';\nconst cloudName = `${process.env.REACT_APP_CLOUD_NAME}`;\nconst presets = `${process.env.REACT_APP_PRESETS}`;\n\nexport async function doesUsernameExist(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    return result.docs.length > 0;\n}\n\nexport async function getUserByUserId(userId) {\n    const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function getUserByUsername(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function IsUserFollowingProfileUser(username, profileUserId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .where('following', 'array-contains', profileUserId)\n        .get();\n    const [response = {}] = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return response.userId;\n}\n\nexport async function getFollowingPhotosByUserId(following, userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', 'in', following).get();\n    const userFollowedPhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const userFollowedPhotosWithDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const [userInfo] = await getUserByUserId(photo.userId);\n            const { username } = userInfo;\n            return {\n                username,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return userFollowedPhotosWithDetails;\n}\n\nexport async function getPhotosbyUserId(userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get();\n    const photos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    return photos;\n}\n\nexport async function getProfilePhotosbyUserId(userId, profileId, profileUsername) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', profileId).get();\n    const profilePhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const profilePhotosWithDetails = await Promise.all(\n        profilePhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            return {\n                username: profileUsername,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return profilePhotosWithDetails;\n}\n\nexport async function updateUserFollowing(userDocId, profileUserId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(userDocId)\n        .update({\n            following: isUserFollowing ? FieldValue.arrayRemove(profileUserId) : FieldValue.arrayUnion(profileUserId),\n        });\n}\n\nexport async function updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(profileUserDocId)\n        .update({\n            followers: isUserFollowing ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n        });\n}\n\nexport async function toggleFollow(userDocId, userId, profileUserDocId, profileUserId, isUserFollowing) {\n    await updateUserFollowing(userDocId, profileUserId, isUserFollowing);\n    await updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing);\n}\n\nexport async function getFollowingOrFollowersList(userIds) {\n    const result = await Promise.all(\n        userIds.map(async (userId) => {\n            const [userList] = await getUserByUserId(userId);\n            return userList;\n        })\n    );\n    return result;\n}\n\nexport async function getSearchResults(category, searchKeyword) {\n    if (searchKeyword) {\n        const result = await firebase.firestore().collection('users').where('category', '==', category).get();\n        const users = result.docs.map((item) => ({\n            ...item.data(),\n            docId: item.id,\n        }));\n        return users;\n    } else {\n        const result = await firebase.firestore().collection('users').limit(10).where('category', '==', category).get();\n        const users = result.docs.map((item) => ({\n            ...item.data(),\n            docId: item.id,\n        }));\n        return users;\n    }\n}\n\nexport async function updateProfile(docId, fullName, category, title, bio, imageFile, setUpload) {\n    setUpload(true);\n\n    if (imageFile) {\n        let url = '';\n        const options = {\n            maxSizeMB: 1,\n            maxWidthOrHeight: 400,\n        };\n\n        try {\n            const compressedFile = await imageCompression(imageFile[0], options);\n            const formData = new FormData();\n            formData.append('file', compressedFile);\n            formData.append('upload_preset', presets);\n\n            await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n                url = data.secure_url;\n            });\n\n            await firebase.firestore().collection('users').doc(docId).update({\n                fullName,\n                category,\n                title,\n                bio,\n                photo: url,\n            });\n\n            setUpload(false);\n        } catch (error) {\n            setUpload(false);\n            alert(error.message);\n        }\n    } else {\n        await firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n        });\n        setUpload(false);\n    }\n}\n\nexport async function uploadNewPost(caption, imageFile, userId, setUpload) {\n    let url = '';\n    const options = {\n        maxWidthOrHeight: 2000,\n    };\n\n    setUpload(true);\n\n    try {\n        const compressedFile = await imageCompression(imageFile[0], options);\n        const formData = new FormData();\n        formData.append('file', compressedFile);\n        formData.append('upload_preset', presets);\n\n        await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n            url = data.secure_url;\n        });\n\n        await firebase\n            .firestore()\n            .collection('photos')\n            .add({\n                caption,\n                comments: [],\n                dateCreated: Date.now(),\n                imageSrc: url,\n                likes: [],\n                photoId: userId + Date.now(),\n                userId,\n                userLatitude: 34.0522,\n                userLongitude: -188.2437,\n            });\n\n        setUpload(false);\n    } catch (error) {\n        setUpload(false);\n        alert(error.message);\n    }\n}\n","export default __webpack_public_path__ + \"static/media/logo.6dc95425.png\";","import React, { useContext, useEffect, useState } from 'react';\nimport logo from '../images/logo.png';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport UserContext from '../context/user';\nimport FirebaseContext from '../context/firebase';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function Header() {\n    const [userInfo, setUserInfo] = useState('');\n    const {\n        user: { uid: userId },\n    } = useContext(UserContext);\n\n    const { firebase } = useContext(FirebaseContext);\n    const history = useHistory();\n    const handleSignOut = () => {\n        firebase.auth().signOut();\n        history.push(ROUTES.LOGIN);\n    };\n\n    useEffect(() => {\n        let result = null;\n        const getUserInfo = async () => {\n            while (!result) {\n                [result] = await getUserByUserId(userId);\n                setUserInfo(result);\n            }\n        };\n        if (userId) {\n            getUserInfo();\n        }\n    }, [userId]);\n\n    return userInfo ? (\n        <div className=\"bg-gray-dark w-screen h-14 flex justify-center items-center fixed z-50 top-0 left-0\">\n            <div className=\"max-w-screen-xl w-full h-14 flex justify-between items-center\">\n                <Link to={ROUTES.DASHBOARD}>\n                    <h1 className=\"flex sm:h-14 sm:w-auto w-28\">\n                        <img src={logo} alt=\"artisto\" className=\"sm:h-full sm:w-auto w-full h-auto\" />\n                    </h1>\n                </Link>\n                <div className=\"flex flex-row items-center\">\n                    <div className=\"pr-2 sm:pr-4\">\n                        <Link to={ROUTES.UPLOAD_IMAGE}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 4v16m8-8H4\" />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-2 sm:pr-4\">\n                        <Link to={ROUTES.SEARCH}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-2 sm:pr-4\">\n                        <Link to={ROUTES.MESSAGES}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"flex h-14 items-center pr-2 sm:pr-4\">\n                        <Link to={`/p/${userInfo?.username}`}>\n                            <img src={userInfo?.photo} className=\"h-5 w-5 sm:h-10 sm:w-10 rounded-full object-cover\" />\n                        </Link>\n                    </div>\n                    <div className=\"pr-2 sm:pr-4 cursor-pointer\" onClick={handleSignOut}>\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                            />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    ) : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { formatDistance } from 'date-fns';\nimport { getUserByUserId } from '../../services/firebase';\n\nexport default function Header({ username, userId, caption, date }) {\n    const [userPhotoSrc, setUserPhotoSrc] = useState(null);\n    useEffect(() => {\n        const getUserPhotoSrc = async () => {\n            const [result] = await getUserByUserId(userId);\n            const { photo } = result;\n            setUserPhotoSrc(photo);\n        };\n        if (userId) {\n            getUserPhotoSrc();\n        }\n    }, [userId]);\n\n    return (\n        <div className=\"\">\n            <div className=\"flex \">\n                <Link to={`/p/${username}`}>\n                    <div className=\"w-12 mr-2\">\n                        <img\n                            src={userPhotoSrc}\n                            alt={`${username} profile photo`}\n                            className=\"w-12 h-12 rounded-full mr-4 object-cover\"\n                        />\n                    </div>\n                </Link>\n                <div>\n                    <Link to={`/p/${username}`}>\n                        <p className=\"font-bold text-gray-dark\">{username}</p>\n                    </Link>\n                    <p className=\"text-gray-dark break-words text-xs sm:text-sm\">{caption}</p>\n                </div>\n            </div>\n            <p className=\"text-gray-primary text-xs pt-2 text-right\">{formatDistance(date, new Date())} ago</p>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    username: PropTypes.string.isRequired,\n    userId: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n    date: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Image({ imageSrc }) {\n    return (\n        <div className=\"flex w-full justify-center pt-2 pb-2\">\n            <img src={imageSrc} className=\"w-full\" />\n        </div>\n    );\n}\n\nImage.propTypes = {\n    imageSrc: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport UserContext from '../context/user';\nimport { getUserByUserId } from '../services/firebase';\nimport { Link } from 'react-router-dom';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nexport default function SideProfile() {\n    const [userInfo, setUserInfo] = useState({});\n    const {\n        user: { uid: userId },\n    } = useContext(UserContext);\n\n    useEffect(() => {\n        document.title = 'Artisto';\n    }, []);\n\n    useEffect(() => {\n        let result = null;\n        const getUserInfo = async () => {\n            while (!result) {\n                [result] = await getUserByUserId(userId);\n                setUserInfo(result);\n            }\n        };\n        if (userId) {\n            getUserInfo();\n        }\n    }, [userId]);\n\n    return (\n        <div className=\"md:flex pt-4 justify-center hidden\">\n            <div className=\"mx-auto justify-center flex-col w-full sticky top-0 max-h-screen pt-20 max-w-xs\">\n                <div className=\"flex justify-center\">\n                    {!userInfo?.photo && !userInfo?.username ? (\n                        <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n                            <Skeleton width={144} height={144} circle={true} />\n                        </SkeletonTheme>\n                    ) : (\n                        <Link to={`/p/${userInfo.username}`}>\n                            <img src={userInfo.photo} className=\"h-36 w-36 rounded-full object-cover\" />\n                        </Link>\n                    )}\n                </div>\n                {!userInfo?.username ? (\n                    <div className=\"flex justify-center flex-col items-center mt-4\">\n                        <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n                            <Skeleton width={180} height={200} />\n                        </SkeletonTheme>\n                    </div>\n                ) : (\n                    <>\n                        <div className=\"flex justify-center flex-col items-center\">\n                            <p className=\"font-bold mt-4 text-gray-light\">{userInfo.fullName}</p>\n                            <p className=\"text-sm text-gray-light\">\n                                <span className=\"text-xs\">ID: </span>\n                                {userInfo.username}\n                            </p>\n                            <p className=\"text-sm mt-4 text-gray-light\">{userInfo.title}</p>\n                            <p className=\"mt-2 text-sm text-gray-light\">\n                                <span className=\"text-xs \">Category: </span>\n                                {userInfo.category}\n                            </p>\n                        </div>\n                        <div className=\"mt-2 max-w-sm p-4 mx-auto w-48 md:w-60\">\n                            <p className=\"text-sm text-gray-light\">Bio:</p>\n                            <p className=\"text-xs w-full break-words text-gray-light\">\n                                {userInfo.bio.length > 100 ? `${userInfo.bio.substr(0, 100)}...` : userInfo.bio}\n                            </p>\n                        </div>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}\n\nSideProfile.propTypes = {\n    userInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n        bio: PropTypes.string,\n    }),\n};\n"],"sourceRoot":""}