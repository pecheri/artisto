{"version":3,"sources":["components/post/index.js","components/Timeline.js","pages/DashBoard.js","components/SideProfile.js"],"names":["Post","photo","className","userId","username","caption","date","dateCreated","Image","imageSrc","Action","likes","userLikedPhoto","comments","docId","Timeline","useState","photos","setPhotos","useContext","UserContext","user","uid","useEffect","a","result","getUserByUserId","followedUserPhotos","following","length","getFollowingPhotosByUserId","sort","b","getTimelinePhotos","map","color","highlightColor","count","width","height","DashBoard","Header","SideProfile","userInfo","setUserInfo","console","log","document","title","getUserInfo","to","src","circle","fullName","category","bio","substr"],"mappings":"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","file":"static/js/14.8c4fa399.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Image from './Image';\nimport Action from './Action';\n\nexport default function Post({ photo }) {\n    return (\n        <div className=\"bg-gray-light py-2 sm:py-8 px-2 sm:px-8 mb-8 rounded-sm\">\n            <Header userId={photo.userId} username={photo.username} caption={photo.caption} date={photo.dateCreated} />\n            <Image imageSrc={photo.imageSrc} />\n            <Action\n                likes={photo.likes}\n                userLikedPhoto={photo.userLikedPhoto}\n                comments={photo.comments}\n                docId={photo.docId}\n            />\n        </div>\n    );\n}\n\nPost.propTypes = {\n    photo: PropTypes.shape({\n        caption: PropTypes.string.isRequired,\n        comments: PropTypes.array.isRequired,\n        dateCreated: PropTypes.number.isRequired,\n        docId: PropTypes.string.isRequired,\n        imageSrc: PropTypes.string.isRequired,\n        likes: PropTypes.array.isRequired,\n        photoId: PropTypes.string.isRequired,\n        userId: PropTypes.string.isRequired,\n        username: PropTypes.string.isRequired,\n        userLikedPhoto: PropTypes.bool.isRequired,\n    }),\n};\n","import { useState, useEffect, useContext } from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport Post from './post';\nimport UserContext from '../context/user';\nimport { getUserByUserId, getFollowingPhotosByUserId } from '../services/firebase';\n\nexport default function Timeline() {\n    const [photos, setPhotos] = useState(null);\n\n    const {\n        user: { uid: userId },\n    } = useContext(UserContext);\n\n    useEffect(() => {\n        async function getTimelinePhotos() {\n            let result = null;\n            while (!result) {\n                [result] = await getUserByUserId(userId);\n            }\n\n            let followedUserPhotos = [];\n\n            // does the user actually follow people?\n            if (result.following.length > 0) {\n                followedUserPhotos = await getFollowingPhotosByUserId(result.following, userId);\n            } else {\n                null;\n            }\n            // re-arrange array to be newest photos first by dateCreated\n            followedUserPhotos.sort((a, b) => b.dateCreated - a.dateCreated);\n            setPhotos(followedUserPhotos);\n        }\n        if (userId) {\n            getTimelinePhotos();\n        }\n    }, [userId]);\n\n    return (\n        <div className=\"col-span-3 w-full mx-auto md:col-span-2\">\n            {!photos ? (\n                <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n                    <Skeleton count={4} width={640} height={500} />\n                </SkeletonTheme>\n            ) : photos.length > 0 ? (\n                photos.map((photo) => <Post key={photo.docId} photo={photo} />)\n            ) : (\n                <p className=\"text-gray-light text-center pt-20\">Follow artists to see photos!</p>\n            )}\n        </div>\n    );\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport UserContext from '../context/user';\nimport Header from '../components/Header';\nimport Timeline from '../components/Timeline';\nimport SideProfile from '../components/SideProfile';\nimport { getUserByUserId } from '../services/firebase';\nimport useUser from '../hooks/useUser';\n\nexport default function DashBoard() {\n    return (\n        <div className=\"font-body\">\n            <Header />\n            <div className=\"w-sceen flex justify-center mt-24 px-4\">\n                <div className=\"grid grid-cols-3 w-full max-w-screen-lg\">\n                    <Timeline />\n                    <SideProfile />\n                </div>\n            </div>\n        </div>\n    );\n}\n\n{\n    /* <img src=\"https://media.istockphoto.com/vectors/default-profile-picture-avatar-photo-placeholder-vector-illustration-vector-id1223671392?k=6&m=1223671392&s=612x612&w=0&h=NGxdexflb9EyQchqjQP0m6wYucJBYLfu46KCLNMHZYM=\" /> */\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport UserContext from '../context/user';\nimport { getUserByUserId } from '../services/firebase';\nimport { Link } from 'react-router-dom';\nimport useUser from '../hooks/useUser';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nexport default function SideProfile() {\n    const [userInfo, setUserInfo] = useState({});\n    const {\n        user: { uid: userId },\n    } = useContext(UserContext);\n\n    console.log('userIdSideProfile', userId);\n\n    useEffect(() => {\n        document.title = 'Artisto';\n    }, []);\n\n    useEffect(() => {\n        let result = null;\n        const getUserInfo = async () => {\n            while (!result) {\n                [result] = await getUserByUserId(userId);\n                setUserInfo(result);\n                console.log('resultSideProfile', result);\n            }\n        };\n        if (userId) {\n            getUserInfo();\n        }\n    }, [userId]);\n\n    // const { userInfo } = useUser();\n\n    return (\n        <div className=\"md:flex pt-4 justify-center hidden\">\n            <div className=\"mx-auto justify-center flex-col w-full sticky top-0 max-h-screen pt-20 max-w-xs\">\n                <div className=\"flex justify-center\">\n                    {!userInfo?.photo && !userInfo?.username ? (\n                        <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n                            <Skeleton width={144} height={144} circle={true} />\n                        </SkeletonTheme>\n                    ) : (\n                        <Link to={`/p/${userInfo.username}`}>\n                            <img src={userInfo.photo} className=\"h-36 w-36 rounded-full object-cover\" />\n                        </Link>\n                    )}\n                </div>\n                {!userInfo?.username ? (\n                    <div className=\"flex justify-center flex-col items-center mt-4\">\n                        <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n                            <Skeleton width={180} height={200} />\n                        </SkeletonTheme>\n                    </div>\n                ) : (\n                    <>\n                        <div className=\"flex justify-center flex-col items-center\">\n                            <p className=\"font-bold mt-4 text-gray-light\">{userInfo.fullName}</p>\n                            <p className=\"text-sm text-gray-light\">\n                                <span className=\"text-xs\">ID: </span>\n                                {userInfo.username}\n                            </p>\n                            <p className=\"text-sm mt-4 text-gray-light\">{userInfo.title}</p>\n                            <p className=\"mt-2 text-sm text-gray-light\">\n                                <span className=\"text-xs \">Category: </span>\n                                {userInfo.category}\n                            </p>\n                        </div>\n                        <div className=\"mt-2 max-w-sm p-4 mx-auto w-48 md:w-60\">\n                            <p className=\"text-sm text-gray-light\">Bio:</p>\n                            <p className=\"text-xs w-full break-words text-gray-light\">\n                                {userInfo.bio.length > 100 ? `${userInfo.bio.substr(0, 100)}...` : userInfo.bio}\n                            </p>\n                        </div>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}\n\nSideProfile.propTypes = {\n    userInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n        bio: PropTypes.string,\n    }),\n};\n"],"sourceRoot":""}