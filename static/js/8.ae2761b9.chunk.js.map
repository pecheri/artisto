{"version":3,"sources":["pages/ProfileEdit.js","services/firebase.js","images/logo.png","components/Header.js","hooks/useUser.js","lib/categories.js"],"names":["ProfileEdit","useUser","userInfo","bio","category","fullName","title","userId","docId","username","useState","userBio","setUserBio","userCategory","setUserCategory","userFullName","setUserFullName","userTitle","setUserTitle","imageFile","setImageFile","image","setImage","upload","setUpload","history","useHistory","useEffect","document","isInvalid","handleProfileUpdate","event","a","preventDefault","updateProfile","push","className","onSubmit","placeholder","type","onChange","target","value","categories","sort","map","index","htmlFor","id","accept","files","URL","createObjectURL","src","disabled","cloudName","process","presets","doesUsernameExist","firebase","firestore","collection","where","get","result","docs","length","getUserByUserId","user","item","data","getUserByUsername","IsUserFollowingProfileUser","profileUserId","response","getFollowingPhotosByUserId","following","userFollowedPhotos","photo","Promise","all","userLikedPhoto","likes","includes","userFollowedPhotosWithDetails","getProfilePhotosbyUserId","profileId","profileUsername","profilePhotos","profilePhotosWithDetails","updateUserFollowing","userDocId","isUserFollowing","doc","update","FieldValue","arrayRemove","arrayUnion","updateProfileUserFollowers","profileUserDocId","followers","toggleFollow","getFollowingOrFollowersList","userIds","userList","getSearchResults","searchKeyword","users","limit","url","options","maxSizeMB","maxWidthOrHeight","imageCompression","compressedFile","formData","FormData","append","Axios","post","then","secure_url","alert","message","uploadNewPost","caption","add","comments","dateCreated","Date","now","imageSrc","photoId","userLatitude","userLongitude","Header","setUserInfo","useContext","UserContext","uid","FirebaseContext","getUserInfo","to","ROUTES","logo","alt","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","auth","signOut","activeUser","setActiveUser","getUserInfoByUserId"],"mappings":"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","file":"static/js/8.ae2761b9.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport useUser from '../hooks/useUser';\nimport { categories } from '../lib/categories';\nimport { updateProfile } from '../services/firebase';\nimport { useHistory } from 'react-router-dom';\n\nexport default function ProfileEdit() {\n    const {\n        userInfo: { bio, category, fullName, title, userId, docId, username },\n    } = useUser();\n    const [userBio, setUserBio] = useState(bio);\n    const [userCategory, setUserCategory] = useState(category);\n    const [userFullName, setUserFullName] = useState(fullName);\n    const [userTitle, setUserTitle] = useState(title);\n    const [imageFile, setImageFile] = useState(null);\n    const [image, setImage] = useState(null);\n    const [upload, setUpload] = useState(false);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        if (userId) {\n            setUserBio(bio);\n            setUserCategory(category);\n            setUserFullName(fullName);\n            setUserTitle(title);\n        }\n    }, [userId]);\n\n    useEffect(() => {\n        document.title = `Profile Edit - Artisto`;\n    }, [username]);\n\n    const onImageChange = (event) => {\n        setImageFile(event.target.files);\n        if (event.target.files && event.target.files[0]) {\n            setImage(URL.createObjectURL(event.target.files[0]));\n        }\n    };\n\n    const isInvalid =\n        userBio === bio && userCategory === category && userFullName === fullName && userTitle === title && !imageFile;\n\n    const handleProfileUpdate = async (event) => {\n        event.preventDefault();\n        await updateProfile(docId, userFullName, userCategory, userTitle, userBio, imageFile, setUpload);\n        history.push(`/p/${username}`);\n    };\n\n    return (\n        <div>\n            <Header />\n            {upload && (\n                <div className=\"flex absolute top-0 left-0 w-screen h-screen bg-gray-dark opacity-70 z-90 items-center justify-center\">\n                    <p className=\"text-2xl text-gray-light bg-gradient-to-r from-blue-primary via-yellow-primary to-red-primary py-4 px-8 rounded animate-pulse\">\n                        Uploading...\n                    </p>\n                </div>\n            )}\n            <div className=\"cotainer max-w-screen-sm py-20 px-10 mx-auto\">\n                <p className=\"text-xl text-gray-light\">Edit Profile</p>\n                {userId ? (\n                    <form className=\"flex flex-col\" onSubmit={handleProfileUpdate}>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Full Name</p>\n                            <input\n                                placeholder=\"Full Name\"\n                                type=\"text\"\n                                onChange={({ target }) => setUserFullName(target.value)}\n                                value={userFullName}\n                                className=\"bg-gray-light w-full p-1 h-10 text-base col-span-3\"\n                            />\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Category</p>\n                            <select\n                                className=\"bg-gray-light w-full h-10 text-sm col-span-3 capitalize\"\n                                onChange={({ target }) => setUserCategory(target.value)}\n                                value={userCategory}\n                            >\n                                {categories.sort().map((category, index) => (\n                                    <option key={index} value={category}>\n                                        {category}\n                                    </option>\n                                ))}\n                                <option value=\"others\">Others</option>\n                            </select>\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Title</p>\n                            <input\n                                placeholder=\"Title\"\n                                type=\"text\"\n                                onChange={({ target }) => setUserTitle(target.value)}\n                                value={userTitle}\n                                className=\"bg-gray-light w-full p-1 h-10 text-base col-span-3\"\n                            />\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Bio</p>\n                            <textarea\n                                placeholder=\"Bio\"\n                                type=\"text\"\n                                onChange={({ target }) => setUserBio(target.value)}\n                                value={userBio}\n                                className=\"bg-gray-light w-full p-1 text-sm col-span-3 h-28\"\n                            />\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Profile Photo</p>\n                            <div className=\"col-span-3 flex items-center justify-evenly\">\n                                <div className=\"col-span-2\">\n                                    <label\n                                        htmlFor=\"imageUploader\"\n                                        className=\"cursor-pointer text-xs sm:text-sm text-gray-light bg-gray-dark p-2 rounded\"\n                                    >\n                                        Choose Image\n                                    </label>\n                                    <input\n                                        type=\"file\"\n                                        id=\"imageUploader\"\n                                        accept=\"image/*\"\n                                        className=\"text-gray-light w-full p-1 h-10 text-base hidden\"\n                                        onChange={onImageChange}\n                                    />\n                                </div>\n                                <div className=\"flex sm:w-24 sm:h-24 w-16 h-16\">\n                                    {image && <img src={image} className=\"rounded-full object-cover w-full h-full\" />}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-4 items-center\">\n                            <button\n                                className={`bg-yellow-primary text-gray-dark mt-12 w-full p-1 h-10 rounded  col-start-2 col-end-5 ${\n                                    isInvalid && 'opacity-50'\n                                }`}\n                                type=\"submit\"\n                                disabled={isInvalid}\n                            >\n                                Submit\n                            </button>\n                        </div>\n                    </form>\n                ) : null}\n            </div>\n        </div>\n    );\n}\n","import { firebase, FieldValue } from '../lib/firebase';\nimport Axios from 'axios';\nimport imageCompression from 'browser-image-compression';\nconst cloudName = `${process.env.REACT_APP_CLOUD_NAME}`;\nconst presets = `${process.env.REACT_APP_PRESETS}`;\n\nexport async function doesUsernameExist(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    return result.docs.length > 0;\n}\n\nexport async function getUserByUserId(userId) {\n    const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function getUserByUsername(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function IsUserFollowingProfileUser(username, profileUserId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .where('following', 'array-contains', profileUserId)\n        .get();\n    const [response = {}] = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return response.userId;\n}\n\nexport async function getFollowingPhotosByUserId(following, userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', 'in', following).get();\n    const userFollowedPhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const userFollowedPhotosWithDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const [userInfo] = await getUserByUserId(photo.userId);\n            const { username } = userInfo;\n            return {\n                username,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return userFollowedPhotosWithDetails;\n}\n\nexport async function getPhotosbyUserId(userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get();\n    const photos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    return photos;\n}\n\nexport async function getProfilePhotosbyUserId(userId, profileId, profileUsername) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', profileId).get();\n    const profilePhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const profilePhotosWithDetails = await Promise.all(\n        profilePhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            return {\n                username: profileUsername,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return profilePhotosWithDetails;\n}\n\nexport async function updateUserFollowing(userDocId, profileUserId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(userDocId)\n        .update({\n            following: isUserFollowing ? FieldValue.arrayRemove(profileUserId) : FieldValue.arrayUnion(profileUserId),\n        });\n}\n\nexport async function updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(profileUserDocId)\n        .update({\n            followers: isUserFollowing ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n        });\n}\n\nexport async function toggleFollow(userDocId, userId, profileUserDocId, profileUserId, isUserFollowing) {\n    await updateUserFollowing(userDocId, profileUserId, isUserFollowing);\n    await updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing);\n}\n\nexport async function getFollowingOrFollowersList(userIds) {\n    const result = await Promise.all(\n        userIds.map(async (userId) => {\n            const [userList] = await getUserByUserId(userId);\n            return userList;\n        })\n    );\n    return result;\n}\n\nexport async function getSearchResults(category, searchKeyword) {\n    if (searchKeyword) {\n        const result = await firebase.firestore().collection('users').where('category', '==', category).get();\n        const users = result.docs.map((item) => ({\n            ...item.data(),\n            docId: item.id,\n        }));\n        return users;\n    } else {\n        const result = await firebase.firestore().collection('users').limit(10).where('category', '==', category).get();\n        const users = result.docs.map((item) => ({\n            ...item.data(),\n            docId: item.id,\n        }));\n        return users;\n    }\n}\n\nexport async function updateProfile(docId, fullName, category, title, bio, imageFile, setUpload) {\n    setUpload(true);\n\n    if (imageFile) {\n        let url = '';\n        const options = {\n            maxSizeMB: 1,\n            maxWidthOrHeight: 400,\n        };\n\n        try {\n            const compressedFile = await imageCompression(imageFile[0], options);\n            const formData = new FormData();\n            formData.append('file', compressedFile);\n            formData.append('upload_preset', presets);\n\n            await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n                url = data.secure_url;\n            });\n\n            await firebase.firestore().collection('users').doc(docId).update({\n                fullName,\n                category,\n                title,\n                bio,\n                photo: url,\n            });\n\n            setUpload(false);\n        } catch (error) {\n            setUpload(false);\n            alert(error.message);\n        }\n    } else {\n        await firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n        });\n        setUpload(false);\n    }\n}\n\nexport async function uploadNewPost(caption, imageFile, userId, setUpload) {\n    let url = '';\n    const options = {\n        maxWidthOrHeight: 2000,\n    };\n\n    setUpload(true);\n\n    try {\n        const compressedFile = await imageCompression(imageFile[0], options);\n        const formData = new FormData();\n        formData.append('file', compressedFile);\n        formData.append('upload_preset', presets);\n\n        await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n            url = data.secure_url;\n        });\n\n        await firebase\n            .firestore()\n            .collection('photos')\n            .add({\n                caption,\n                comments: [],\n                dateCreated: Date.now(),\n                imageSrc: url,\n                likes: [],\n                photoId: userId + Date.now(),\n                userId,\n                userLatitude: 34.0522,\n                userLongitude: -188.2437,\n            });\n\n        setUpload(false);\n    } catch (error) {\n        setUpload(false);\n        alert(error.message);\n    }\n}\n","export default __webpack_public_path__ + \"static/media/logo.6dc95425.png\";","import React, { useContext, useEffect, useState } from 'react';\nimport logo from '../images/logo.png';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport UserContext from '../context/user';\nimport FirebaseContext from '../context/firebase';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function Header() {\n    const [userInfo, setUserInfo] = useState('');\n    const {\n        user: { uid: userId },\n    } = useContext(UserContext);\n\n    const { firebase } = useContext(FirebaseContext);\n    const history = useHistory();\n    const handleSignOut = () => {\n        firebase.auth().signOut();\n        history.push(ROUTES.LOGIN);\n    };\n\n    useEffect(() => {\n        let result = null;\n        const getUserInfo = async () => {\n            while (!result) {\n                [result] = await getUserByUserId(userId);\n                setUserInfo(result);\n            }\n        };\n        if (userId) {\n            getUserInfo();\n        }\n    }, [userId]);\n\n    return userInfo ? (\n        <div className=\"bg-gray-dark w-screen h-14 flex justify-center items-center fixed z-50 top-0 left-0\">\n            <div className=\"max-w-screen-xl w-full h-14 flex justify-between items-center\">\n                <Link to={ROUTES.DASHBOARD}>\n                    <h1 className=\"flex sm:h-14 sm:w-auto w-28\">\n                        <img src={logo} alt=\"artisto\" className=\"sm:h-full sm:w-auto w-full h-auto\" />\n                    </h1>\n                </Link>\n                <div className=\"flex flex-row items-center\">\n                    <div className=\"pr-2 sm:pr-4\">\n                        <Link to={ROUTES.UPLOAD_IMAGE}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 4v16m8-8H4\" />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-2 sm:pr-4\">\n                        <Link to={ROUTES.SEARCH}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-2 sm:pr-4\">\n                        <Link to={ROUTES.MESSAGES}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"flex h-14 items-center pr-2 sm:pr-4\">\n                        <Link to={`/p/${userInfo?.username}`}>\n                            <img src={userInfo?.photo} className=\"h-5 w-5 sm:h-10 sm:w-10 rounded-full object-cover\" />\n                        </Link>\n                    </div>\n                    <div className=\"pr-2 sm:pr-4 cursor-pointer\" onClick={handleSignOut}>\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                            />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    ) : null;\n}\n","import { useContext, useState, useEffect } from 'react';\nimport UserContext from '../context/user';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function useUser() {\n    const { user } = useContext(UserContext);\n    const [activeUser, setActiveUser] = useState({});\n\n    useEffect(() => {\n        async function getUserInfoByUserId() {\n            const [result] = await getUserByUserId(user.uid);\n            setActiveUser(result);\n        }\n        if (user?.uid) {\n            getUserInfoByUserId();\n        }\n    }, [user]);\n    return { userInfo: activeUser };\n}\n","export const categories = ['web design', 'video game', 'animation', 'graphic design', 'painting', 'illustration'];\n"],"sourceRoot":""}