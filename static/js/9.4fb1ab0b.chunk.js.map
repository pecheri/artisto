{"version":3,"sources":["hooks/useUser.js","components/Header.js","pages/ProfileEdit.js"],"names":["useUser","user","useContext","UserContext","useState","activeUser","setActiveUser","useEffect","a","getUserByUserId","uid","result","getUserInfoByUserId","userInfo","Header","firebase","FirebaseContext","history","useHistory","className","to","ROUTES","src","logo","alt","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","username","photo","onClick","auth","signOut","push","ProfileEdit","bio","category","fullName","title","userId","docId","userBio","setUserBio","userCategory","setUserCategory","userFullName","setUserFullName","setUserPhoto","userTitle","setUserTitle","isInvalid","console","log","handleProfileUpdate","event","preventDefault","updateProfile","alert","setTimeout","onSubmit","placeholder","type","onChange","target","value","categories","sort","map","index","disabled"],"mappings":"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","file":"static/js/9.4fb1ab0b.chunk.js","sourcesContent":["import { useContext, useState, useEffect } from 'react';\nimport UserContext from '../context/user';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function useUser() {\n    const { user } = useContext(UserContext);\n    const [activeUser, setActiveUser] = useState({});\n\n    useEffect(() => {\n        async function getUserInfoByUserId() {\n            const [result] = await getUserByUserId(user.uid);\n            setActiveUser(result);\n        }\n        if (user?.uid) {\n            getUserInfoByUserId();\n        }\n    }, [user]);\n    return { userInfo: activeUser };\n}\n","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logo from '../images/logo.png';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport UserContext from '../context/user';\nimport FirebaseContext from '../context/firebase';\nimport { getUserByUserId } from '../services/firebase';\nimport useUser from '../hooks/useUser';\n\nexport default function Header() {\n    // const [userInfo, setUserInfo] = useState('');\n    const { user } = useContext(UserContext);\n    const { firebase } = useContext(FirebaseContext);\n    const history = useHistory();\n    const handleSignOut = () => {\n        firebase.auth().signOut();\n        history.push(ROUTES.LOGIN);\n    };\n\n    const { userInfo } = useUser();\n\n    // useEffect(() => {\n    //     const getUserInfo = async () => {\n    //         const [result] = await getUserByUserId(user.uid);\n    //         setUserInfo(result);\n    //     };\n    //     if (user?.uid) {\n    //         getUserInfo();\n    //     }\n    // }, [user]);\n\n    return (\n        <div className=\"bg-gray-dark w-screen h-14 flex justify-center items-center fixed z-50\">\n            <div className=\"max-w-screen-xl w-screen h-14 flex justify-between items-center\">\n                <Link to={ROUTES.DASHBOARD}>\n                    <h1 className=\"h-14 flex\">\n                        <img src={logo} alt=\"artisto\" />\n                    </h1>\n                </Link>\n                <div className=\"flex flex-row items-center\">\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.SEARCH}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.MESSAGES}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"flex h-14 items-center pr-4\">\n                        <Link to={`/p/${userInfo.username}`}>\n                            <img src={userInfo.photo} className=\"h-10 w-10 rounded-full\" />\n                        </Link>\n                    </div>\n                    <div className=\"pr-4 cursor-pointer\" onClick={handleSignOut}>\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-8 w-8 text-gray-light\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                            />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    userInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n    }),\n};\n","import React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport useUser from '../hooks/useUser';\nimport { categories } from '../lib/categories';\nimport { updateProfile } from '../services/firebase';\nimport { useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\n\nexport default function ProfileEdit() {\n    const {\n        userInfo: { bio, category, fullName, photo, title, userId, docId, username },\n    } = useUser();\n    const [userBio, setUserBio] = useState(bio);\n    const [userCategory, setUserCategory] = useState(category);\n    const [userFullName, setUserFullName] = useState(fullName);\n    const [userPhoto, setUserPhoto] = useState(photo);\n    const [userTitle, setUserTitle] = useState(title);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        if (userId) {\n            setUserBio(bio);\n            setUserCategory(category);\n            setUserFullName(fullName);\n            setUserPhoto(photo);\n            setUserTitle(title);\n        }\n    }, [userId]);\n\n    const isInvalid = userBio === bio && userCategory === category && userFullName === fullName && userTitle === title;\n\n    console.log('isInvalid', isInvalid);\n\n    const handleProfileUpdate = async (event) => {\n        event.preventDefault();\n        await updateProfile(docId, userFullName, userCategory, userTitle, userBio);\n        alert('Your Profile was successfully update!');\n        const timer = setTimeout(() => {\n            history.push(`/p/${username}`);\n        }, 500);\n    };\n\n    return (\n        <div>\n            <Header />\n            <div className=\"cotainer max-w-screen-sm py-20 px-10 mx-auto\">\n                <p className=\"text-xl text-gray-light\">Edit Profile</p>\n                {userId ? (\n                    <form className=\"flex flex-col\" onSubmit={handleProfileUpdate}>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Full Name</p>\n                            <input\n                                placeholder=\"Full Name\"\n                                type=\"text\"\n                                onChange={({ target }) => setUserFullName(target.value)}\n                                value={userFullName}\n                                className=\"bg-gray-light w-full p-1 h-10 text-sm col-span-3\"\n                            />\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Category</p>\n                            <select\n                                className=\"bg-gray-light w-full h-10 text-sm col-span-3\"\n                                onChange={({ target }) => setUserCategory(target.value)}\n                                value={userCategory}\n                            >\n                                {categories.sort().map((category, index) => (\n                                    <option key={index} value={category}>\n                                        {category}\n                                    </option>\n                                ))}\n                                <option value=\"others\">Others</option>\n                            </select>\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Title</p>\n                            <input\n                                placeholder=\"Title\"\n                                type=\"text\"\n                                onChange={({ target }) => setUserTitle(target.value)}\n                                value={userTitle}\n                                className=\"bg-gray-light w-full p-1 h-10 text-sm col-span-3\"\n                            />\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Bio</p>\n                            <textarea\n                                placeholder=\"Bio\"\n                                type=\"text\"\n                                onChange={({ target }) => setUserBio(target.value)}\n                                value={userBio}\n                                className=\"bg-gray-light w-full p-1 text-sm col-span-3 h-28\"\n                            />\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <button\n                                className={`bg-yellow-primary text-gray-dark mt-12 w-full p-1 h-10 rounded  col-start-2 col-end-5 ${\n                                    isInvalid && 'opacity-50'\n                                }`}\n                                type=\"submit\"\n                                disabled={isInvalid}\n                            >\n                                Submit\n                            </button>\n                        </div>\n                    </form>\n                ) : null}\n            </div>\n        </div>\n    );\n}\n"],"sourceRoot":""}