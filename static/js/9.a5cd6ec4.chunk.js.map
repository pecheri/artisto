{"version":3,"sources":["components/profile/FollowingFollowersUser.js","components/profile/FollowingFollwersList.js","components/profile/ProfileHeader.js","components/profile/AddComment.js","components/profile/Comments.js","components/profile/Action.js","components/profile/ImageDetails.js","components/profile/Image.js","components/profile/Images.js","components/profile/index.js","pages/Profile.js","services/firebase.js","images/logo.png","components/Header.js","hooks/useUser.js","components/post/Header.js","components/post/Image.js"],"names":["FollowingFollowersUser","username","fullName","photo","setFollowingOrFollowers","className","to","onClick","src","FollowingFollwersList","following","followers","followingOrFollowers","useState","list","setList","useEffect","getFollowingList","a","getFollowingOrFollowersList","result","getFollowersList","map","item","index","count","ProfileHeader","profileUserInfo","photoCounts","useUser","userInfo","docId","userId","isUserFollowing","setIsUserFollowing","length","followersCount","setFollowersCount","history","useHistory","IsUserFollowingProfileUser","checkIfUsersFollowing","toggleUserFollow","prevState","toggleFollow","e","target","currentTarget","closeFollowingFollowersList","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","alt","push","category","title","bio","AddComment","allComments","setAllComments","addNewComment","comment","setComment","useContext","UserContext","user","displayName","uid","FirebaseContext","firebase","FieldValue","onSubmit","event","preventDefault","firestore","collection","doc","update","comments","arrayUnion","type","placeholder","autoComplete","value","onChange","Comments","viewAll","setViewAll","slice","Action","likes","userLikedPhoto","isUserLikedToggle","likeCount","setLikeCount","isUserLiked","setIsUserLiked","console","log","handleLike","arrayRemove","ImageDetails","caption","date","dateCreated","Image","imageSrc","color","highlightColor","width","height","photos","isImageClicked","setIsImageClicked","currentPhoto","setCurrentPhoto","screenToggle","style","paddingTop","closeImage","indexOf","profileUsername","Images","loading","UserProfile","setPhotos","setPhotoCounts","setLoading","getProfileUserPhotos","getProfilePhotosbyUserId","sort","b","updatedPhotos","splice","currentPhotosComments","Profile","useParams","setProfileUserInfo","getUserByUsername","ROUTES","getProfileUserInfo","document","Header","cloudName","process","presets","doesUsernameExist","where","get","docs","getUserByUserId","data","id","profileUserId","response","getFollowingPhotosByUserId","userFollowedPhotos","Promise","all","includes","userFollowedPhotosWithDetails","profileId","profilePhotos","profilePhotosWithDetails","updateUserFollowing","userDocId","updateProfileUserFollowers","profileUserDocId","userIds","userList","getSearchResults","searchKeyword","users","limit","updateProfile","imageFile","setUpload","url","options","maxSizeMB","maxWidthOrHeight","imageCompression","compressedFile","formData","FormData","append","Axios","post","then","secure_url","alert","message","uploadNewPost","add","Date","now","photoId","userLatitude","userLongitude","setUserInfo","getUserInfo","logo","auth","signOut","activeUser","setActiveUser","getUserInfoByUserId","userPhotoSrc","setUserPhotoSrc","getUserPhotoSrc","formatDistance"],"mappings":"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","file":"static/js/9.a5cd6ec4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function FollowingFollowersUser({ username, fullName, photo, setFollowingOrFollowers }) {\n    return (\n        <div className=\"p-2 flex mx-auto items-center\">\n            <Link to={`/p/${username}`} onClick={() => setFollowingOrFollowers()}>\n                <div>\n                    <img src={photo} className=\"h-10 w-10 rounded-full object-cover\" />\n                </div>\n            </Link>\n            <div className=\"pl-4\">\n                <Link to={`/p/${username}`} onClick={() => setFollowingOrFollowers()}>\n                    <p className=\"font-bold\">{fullName}</p>\n                </Link>\n                <p className=\"text-sm\">\n                    <span className=\"text-xs\">ID: </span>\n                    {username}\n                </p>\n            </div>\n        </div>\n    );\n}\n\nFollowingFollowersUser.propTypes = {\n    username: PropTypes.string.isRequired,\n    fullName: PropTypes.string.isRequired,\n    photo: PropTypes.string.isRequired,\n    setFollowingOrFollowers: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFollowingOrFollowersList } from '../../services/firebase';\nimport FollowingFollowersUser from './FollowingFollowersUser';\nimport Skeleton from 'react-loading-skeleton';\n\nexport default function FollowingFollwersList({ following, followers, followingOrFollowers, setFollowingOrFollowers }) {\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n        const getFollowingList = async () => {\n            const result = await getFollowingOrFollowersList(following);\n            setList(result);\n        };\n        const getFollowersList = async () => {\n            const result = await getFollowingOrFollowersList(followers);\n            setList(result);\n        };\n        if (followingOrFollowers === 'following') {\n            getFollowingList();\n        }\n        if (followingOrFollowers === 'followers') {\n            getFollowersList();\n        }\n    }, [followingOrFollowers]);\n    return (\n        <div className=\"bg-gray-light h-full sm:max-w-sm sm:w-96 w-screen rounded text-gray-dark p-8 overflow-scroll relative\">\n            {list ? (\n                list.map((item, index) => (\n                    <FollowingFollowersUser\n                        key={index}\n                        username={item.username}\n                        fullName={item.fullName}\n                        photo={item.photo}\n                        setFollowingOrFollowers={setFollowingOrFollowers}\n                    />\n                ))\n            ) : (\n                <Skeleton count={4} className=\"w-full pb-4 h-1/4\" />\n            )}\n        </div>\n    );\n}\n\nFollowingFollwersList.propTypes = {\n    followingOrFollowers: PropTypes.string,\n    following: PropTypes.array,\n    followers: PropTypes.array,\n    setFollowingOrFollowers: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useUser from '../../hooks/useUser';\nimport { IsUserFollowingProfileUser } from '../../services/firebase';\nimport { toggleFollow } from '../../services/firebase';\nimport { useHistory } from 'react-router-dom';\nimport FollowingFollwersList from './FollowingFollwersList';\n\nexport default function ProfileHeader({ profileUserInfo, photoCounts }) {\n    const {\n        userInfo: { username, docId, userId },\n    } = useUser();\n\n    const [isUserFollowing, setIsUserFollowing] = useState(null);\n    const [followersCount, setFollowersCount] = useState(profileUserInfo.followers.length);\n    const [followingOrFollowers, setFollowingOrFollowers] = useState(null);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        const checkIfUsersFollowing = async () => {\n            const result = await IsUserFollowingProfileUser(username, profileUserInfo.userId);\n            setIsUserFollowing(!!result);\n            setFollowersCount(profileUserInfo.followers.length);\n        };\n        if (profileUserInfo && username) {\n            checkIfUsersFollowing();\n        }\n    }, [profileUserInfo, username]);\n\n    const toggleUserFollow = async () => {\n        setIsUserFollowing((prevState) => !prevState);\n        isUserFollowing\n            ? setFollowersCount((prevState) => prevState - 1)\n            : setFollowersCount((prevState) => prevState + 1);\n\n        await toggleFollow(docId, userId, profileUserInfo.docId, profileUserInfo.userId, isUserFollowing);\n    };\n\n    const closeFollowingFollowersList = (e) => {\n        if (e.target === e.currentTarget) {\n            setFollowingOrFollowers(null);\n        }\n    };\n\n    return (\n        <div className=\"pt-24 text-gray-light\">\n            {followingOrFollowers && (\n                <div\n                    onClick={(e) => {\n                        closeFollowingFollowersList(e);\n                    }}\n                    className=\"flex justify-center w-screen h-screen pt-20 bg-gray-primary bg-opacity-50 fixed top-0 left-0 bottom-0 right-0 z-90\"\n                >\n                    <div className=\"relative h-3/4\">\n                        <button\n                            onClick={() => setFollowingOrFollowers(null)}\n                            className=\"absolute top-2 right-2 md:-right-10 md:text-gray-light text-gray-dark z-90\"\n                        >\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 md:h-10 md:w-10\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M6 18L18 6M6 6l12 12\"\n                                />\n                            </svg>\n                        </button>\n                        <FollowingFollwersList\n                            following={profileUserInfo.following}\n                            followers={profileUserInfo.followers}\n                            followingOrFollowers={followingOrFollowers}\n                            setFollowingOrFollowers={setFollowingOrFollowers}\n                        />\n                    </div>\n                </div>\n            )}\n            <div className=\"flex items-top sm:items-center \">\n                <div className=\"pr-2 sm:pr-4\">\n                    <img\n                        src={profileUserInfo.photo}\n                        alt={`${profileUserInfo.username} profile photo`}\n                        className=\"sm:w-36 sm:h-36 w-12 h-12 rounded-full object-cover\"\n                    />\n                </div>\n                <div className=\"\">\n                    <div className=\"flex items-center\">\n                        <div>\n                            <p className=\"text-sm font-bold sm:text-lg\">{profileUserInfo.fullName}</p>\n                            <p className=\"text-xs sm:text-base\">\n                                <span className=\"sm:text-sm\">ID: </span>\n                                {profileUserInfo.username}\n                            </p>\n                        </div>\n                        <div className=\"ml-4 sm:ml-10\">\n                            {profileUserInfo.username === username ? (\n                                <button\n                                    className=\"text-xs bg-gray-dark text-gray-light p-2 rounded\"\n                                    onClick={() => history.push(`/edit/${username}`)}\n                                >\n                                    Edit Profile\n                                </button>\n                            ) : null}\n                            {profileUserInfo.username === username || isUserFollowing === null ? null : (\n                                <button\n                                    onClick={toggleUserFollow}\n                                    className={`rounded text-gray-light bg-red-primary text-xs p-2 sm:hidden ${\n                                        isUserFollowing ? 'bg-red-primary' : 'bg-blue-primary'\n                                    }`}\n                                >\n                                    {isUserFollowing ? 'Unfollow' : 'Follow'}\n                                </button>\n                            )}\n                        </div>\n                    </div>\n\n                    <p className=\"text-sm sm:text-base\">\n                        <span className=\"text-xs sm:text-sm\">Category: </span>\n                        {profileUserInfo.category}\n                    </p>\n                    <div className=\"flex mt-2 sm:mt-4\">\n                        <p className=\"text-sm sm:text-base\">\n                            {photoCounts}{' '}\n                            <span className=\"text-xs sm:text-sm\">{photoCounts === 1 ? 'post' : 'posts'}</span>\n                        </p>\n                        <p\n                            className=\"px-4 cursor-pointer text-sm sm:text-base\"\n                            onClick={() => setFollowingOrFollowers(profileUserInfo.followers.length > 0 && 'followers')}\n                        >\n                            {followersCount}{' '}\n                            <span className=\"text-xs sm:text-sm\">\n                                {profileUserInfo.followers.length === 1 ? 'follower' : 'followers'}\n                            </span>\n                        </p>\n                        <p\n                            className=\"cursor-pointer text-sm sm:text-base\"\n                            onClick={() => setFollowingOrFollowers(profileUserInfo.following.length > 0 && 'following')}\n                        >\n                            {profileUserInfo.following.length} <span className=\"text-xs sm:text-sm\">following</span>\n                        </p>\n                    </div>\n                </div>\n                <div>\n                    {profileUserInfo.username === username || isUserFollowing === null ? null : (\n                        <button\n                            onClick={toggleUserFollow}\n                            className={`rounded text-gray-light bg-red-primary text-sm py-2 px-6 hidden sm:block ${\n                                isUserFollowing ? 'bg-red-primary' : 'bg-blue-primary'\n                            }`}\n                        >\n                            {isUserFollowing ? 'Unfollow' : 'Follow'}\n                        </button>\n                    )}\n                </div>\n            </div>\n            <div className=\"pt-2 max-w-2xl\">\n                <p className=\"text-sm sm:text-base\">{profileUserInfo.title}</p>\n                <p className=\"text-xs sm:text-sm\">Bio:</p>\n                <p className=\"break-words text-xs sm:text-sm\">{profileUserInfo.bio}</p>\n            </div>\n        </div>\n    );\n}\n\nProfileHeader.propTypes = {\n    profileUserInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n        bio: PropTypes.string,\n        docId: PropTypes.string,\n    }),\n    photos: PropTypes.array,\n    photoCounts: PropTypes.number,\n};\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport UserContext from '../../context/user';\nimport FirebaseContext from '../../context/firebase';\n\nexport default function AddComment({ allComments, setAllComments, docId, addNewComment, photo }) {\n    const [comment, setComment] = useState('');\n    const {\n        user: { displayName, uid: userId },\n    } = useContext(UserContext);\n    const { firebase, FieldValue } = useContext(FirebaseContext);\n\n    const handleSubmit = (event) => {\n        event.preventDefault(event);\n        setAllComments([{ comment, userId, displayName }, ...allComments]);\n        addNewComment(photo, comment, userId, displayName);\n        setComment('');\n        return firebase\n            .firestore()\n            .collection('photos')\n            .doc(docId)\n            .update({\n                comments: FieldValue.arrayUnion({ comment, userId, displayName }),\n            });\n    };\n    return (\n        <div className=\"mt-2\">\n            <form className=\"flex\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"add a comment...\"\n                    autoComplete=\"off\"\n                    className=\"text-base w-full p-2 rounded-l\"\n                    value={comment}\n                    onChange={({ target }) => setComment(target.value)}\n                />\n                <button\n                    type=\"submit\"\n                    className={`p-2 bg-blue-primary text-gray-light rounded-r sm:text-base text-sm ${\n                        comment.length < 1 && 'opacity-50'\n                    }`}\n                >\n                    SEND\n                </button>\n            </form>\n        </div>\n    );\n}\n\nAddComment.propTypes = {\n    allComments: PropTypes.array,\n    setAllComments: PropTypes.func.isRequired,\n    docId: PropTypes.string.isRequired,\n    addNewComment: PropTypes.func.isRequired,\n    photo: PropTypes.object,\n};\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddComment from './AddComment';\nimport UserContext from '../../context/user';\n\nexport default function Comments({ allComments, setAllComments, docId, addNewComment, photo }) {\n    const [viewAll, setViewAll] = useState(false);\n    const { user } = useContext(UserContext);\n\n    return (\n        <div className=\"pt-2\">\n            <div>\n                {allComments.slice(0, 3).map((comment, index) => (\n                    <p className=\"text-sm text-gray-dark break-words\" key={index}>\n                        <Link to={`/p/${user.displayName}`}>\n                            <span className=\"font-bold\">{comment.displayName} </span>\n                        </Link>\n                        {'   '}\n                        {comment.comment}\n                    </p>\n                ))}\n            </div>\n            {allComments.length > 3 && !viewAll ? (\n                <p\n                    className=\"text-xs text-gray-primary opacity-70 pt-2 cursor-pointer\"\n                    onClick={() => setViewAll(true)}\n                >\n                    View All Comments\n                </p>\n            ) : viewAll ? (\n                allComments.slice(3).map((comment, index) => (\n                    <p className=\"text-sm text-gray-dark break-words\" key={index}>\n                        <Link to={`/p/${user.displayName}`}>\n                            <span className=\"font-bold\">{comment.displayName} </span>\n                        </Link>\n                        {'   '}\n                        {comment.comment}\n                    </p>\n                ))\n            ) : null}\n            <AddComment\n                allComments={allComments}\n                setAllComments={setAllComments}\n                docId={docId}\n                addNewComment={addNewComment}\n                photo={photo}\n            />\n        </div>\n    );\n}\n\nComments.propTypes = {\n    allComments: PropTypes.array.isRequired,\n    setAllComments: PropTypes.func.isRequired,\n    docId: PropTypes.string.isRequired,\n    addNewComment: PropTypes.func.isRequired,\n    photo: PropTypes.object,\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Comments from './Comments';\nimport UserContext from '../../context/user';\nimport FirebaseContext from '../../context/firebase';\n\nexport default function Action({ likes, userLikedPhoto, comments, docId, isUserLikedToggle, addNewComment, photo }) {\n    const [likeCount, setLikeCount] = useState(likes.length);\n    const [allComments, setAllComments] = useState(comments);\n    const [isUserLiked, setIsUserLiked] = useState(userLikedPhoto);\n\n    useEffect(() => {\n        if (docId) {\n            setLikeCount(likes.length);\n            setAllComments(comments);\n            setIsUserLiked(userLikedPhoto);\n        }\n    }, [docId]);\n\n    console.log('photo', photo);\n    console.log('comments', comments);\n\n    const {\n        user: { uid: userId = '' },\n    } = useContext(UserContext);\n    const { firebase, FieldValue } = useContext(FirebaseContext);\n\n    const handleLike = async () => {\n        setIsUserLiked(!isUserLiked);\n        isUserLikedToggle(photo, userId);\n        await firebase\n            .firestore()\n            .collection('photos')\n            .doc(docId)\n            .update({\n                likes: isUserLiked ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n            });\n        setLikeCount(likes.length);\n    };\n\n    return (\n        <div className=\"\">\n            <div className=\"flex\">\n                <div className=\"flex items-end\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className={`sm:h-8 sm:w-8 h-6 w-6 text-gray-dark cursor-pointer ${isUserLiked && 'fill-red'} `}\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                        onClick={handleLike}\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                        />\n                    </svg>\n                    <p className=\"text-sm text-gray-dark\">{likeCount}</p>\n                </div>\n                <div className=\"flex items-end pl-4\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-6 w-6 sm:h-8 sm:w-8 text-gray-dark cursor-pointer\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                        />\n                    </svg>\n                    <p className=\"text-sm text-gray-dark\">{allComments.length}</p>\n                </div>\n            </div>\n            <Comments\n                setAllComments={setAllComments}\n                allComments={allComments}\n                docId={docId}\n                addNewComment={addNewComment}\n                photo={photo}\n            />\n        </div>\n    );\n}\n\nAction.propTypes = {\n    likes: PropTypes.array.isRequired,\n    comments: PropTypes.array.isRequired,\n    userLikedPhoto: PropTypes.bool.isRequired,\n    docId: PropTypes.string.isRequired,\n    isUserLikedToggle: PropTypes.func.isRequired,\n    addNewComment: PropTypes.func.isRequired,\n    photo: PropTypes.object,\n};\n","import React from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport PropTypes from 'prop-types';\nimport Header from '../post/Header';\nimport Image from '../post/Image';\nimport Action from '../profile/Action';\n\nexport default function ImageDetails({ photo, isUserLikedToggle, addNewComment }) {\n    return photo.username ? (\n        <div className=\"bg-gray-light py-8 px-2 sm:px-8 mx-auto overflow-scroll rounded-sm\">\n            <Header userId={photo.userId} username={photo.username} caption={photo.caption} date={photo.dateCreated} />\n            <Image imageSrc={photo.imageSrc} />\n            <Action\n                likes={photo.likes}\n                userLikedPhoto={photo.userLikedPhoto}\n                comments={photo.comments}\n                docId={photo.docId}\n                isUserLikedToggle={isUserLikedToggle}\n                addNewComment={addNewComment}\n                photo={photo}\n            />\n        </div>\n    ) : (\n        <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n            <Skeleton count={1} width={600} height={600} />\n        </SkeletonTheme>\n    );\n}\n\nImageDetails.propTypes = {\n    photo: PropTypes.shape({\n        caption: PropTypes.string.isRequired,\n        comments: PropTypes.array.isRequired,\n        dateCreated: PropTypes.number.isRequired,\n        docId: PropTypes.string.isRequired,\n        imageSrc: PropTypes.string.isRequired,\n        likes: PropTypes.array.isRequired,\n        photoId: PropTypes.string.isRequired,\n        userId: PropTypes.string.isRequired,\n        username: PropTypes.string.isRequired,\n        userLikedPhoto: PropTypes.bool.isRequired,\n    }),\n    photos: PropTypes.object,\n    isUserLikedToggle: PropTypes.func.isRequired,\n    addNewComment: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageDetails from './ImageDetails';\n\nexport default function Image({ photo, profileUserInfo, photos, isUserLikedToggle, addNewComment }) {\n    const [isImageClicked, setIsImageClicked] = useState(false);\n    const [currentPhoto, setCurrentPhoto] = useState(photo);\n\n    const screenToggle = () => {\n        setIsImageClicked((prevState) => !prevState);\n        setCurrentPhoto(photo);\n    };\n\n    const closeImage = (e) => {\n        if (e.target === e.currentTarget) {\n            screenToggle();\n        }\n    };\n\n    const showNextPhoto = () => {\n        if (photos.length - 1 !== photos.indexOf(currentPhoto)) {\n            setCurrentPhoto((prevState) => photos[photos.indexOf(prevState) + 1]);\n        }\n    };\n\n    const showPrevPhoto = () => {\n        if (photos.indexOf(currentPhoto) > 0) {\n            setCurrentPhoto((prevState) => photos[photos.indexOf(prevState) - 1]);\n        }\n    };\n\n    return photo ? (\n        <>\n            <div className=\"relative w-full\" style={{ paddingTop: '100%' }}>\n                <img\n                    src={photo.imageSrc}\n                    alt={photo.caption}\n                    className=\"object-cover cursor-pointer absolute top-0 left-0 right-0 bottom-0 w-full h-full\"\n                    onClick={screenToggle}\n                />\n            </div>\n            {isImageClicked && (\n                <div\n                    onClick={(e) => {\n                        closeImage(e);\n                    }}\n                    className=\"flex justify-center w-screen py-10 bg-gray-primary bg-opacity-70 fixed top-0 left-0 right-0 bottom-0 z-90\"\n                >\n                    <button\n                        onClick={showPrevPhoto}\n                        className={`hidden md:flex text-gray-light absolute md:left-4 lg:left-20 xl:left-40 top-1/2 p-4 rounded opacity-60 hover:opacity-100 ${\n                            photos.indexOf(currentPhoto) === 0 && 'md:hidden'\n                        }`}\n                    >\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-10 w-10\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 19l-7-7 7-7\" />\n                        </svg>\n                    </button>\n                    <button\n                        onClick={showNextPhoto}\n                        className={`hidden md:flex text-gray-light absolute md:right-4 lg:right-20 xl:right-40 top-1/2 p-4 rounded opacity-60 hover:opacity-100 ${\n                            photos.length - 1 === photos.indexOf(currentPhoto) && 'md:hidden'\n                        }`}\n                    >\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-10 w-10\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5l7 7-7 7\" />\n                        </svg>\n                    </button>\n                    <div className=\"flex h-screen pb-4 sm:pb-0 sm:h-auto sm:max-h-screen relative max-w-screen-sm\">\n                        <button\n                            onClick={screenToggle}\n                            className=\" absolute top-0 right-0 text-gray-primary md:-right-10 md:text-gray-light\"\n                        >\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 md:h-10 md:w-10\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M6 18L18 6M6 6l12 12\"\n                                />\n                            </svg>\n                        </button>\n                        <ImageDetails\n                            photo={currentPhoto}\n                            profileUsername={profileUserInfo.username}\n                            isUserLikedToggle={isUserLikedToggle}\n                            addNewComment={addNewComment}\n                        />\n                    </div>\n                </div>\n            )}\n        </>\n    ) : null;\n}\n\nImage.propTypes = {\n    photo: PropTypes.shape({\n        imageSrc: PropTypes.string,\n        caption: PropTypes.string,\n        likes: PropTypes.array,\n        userId: PropTypes.string,\n    }),\n    profileUserInfo: PropTypes.shape({\n        username: PropTypes.string,\n    }),\n    photos: PropTypes.array,\n    photoCounts: PropTypes.number.isRequired,\n    isUserLikedToggle: PropTypes.func.isRequired,\n    addNewComment: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from './Image';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nexport default function Images({ profileUserInfo, photos, photoCounts, isUserLikedToggle, addNewComment, loading }) {\n    return (\n        <div className=\"border-t-2 border-gray-dark my-8 pt-8\">\n            <div className=\"grid grid-cols-3 gap-2 sm:gap-8 items-center\">\n                {loading ? (\n                    <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n                        <Skeleton count={1} width={300} height={300} />\n                    </SkeletonTheme>\n                ) : (\n                    photos.map((photo, index) => (\n                        <Image\n                            key={index}\n                            photo={photo}\n                            profileUserInfo={profileUserInfo}\n                            photos={photos}\n                            photoCounts={photoCounts}\n                            isUserLikedToggle={isUserLikedToggle}\n                            addNewComment={addNewComment}\n                        />\n                    ))\n                )}\n                {/* {photos.map((photo, index) => (\n                    <Image\n                        key={index}\n                        photo={photo}\n                        profileUserInfo={profileUserInfo}\n                        photos={photos}\n                        photoCounts={photoCounts}\n                        isUserLikedToggle={isUserLikedToggle}\n                        addNewComment={addNewComment}\n                    />\n                ))} */}\n            </div>\n        </div>\n    );\n}\nImages.propTypes = {\n    profileUserInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n        bio: PropTypes.string,\n    }),\n    photos: PropTypes.array,\n    photoCounts: PropTypes.number.isRequired,\n    isUserLikedToggle: PropTypes.func.isRequired,\n    addNewComment: PropTypes.func.isRequired,\n    loading: PropTypes.bool.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ProfileHeader from './ProfileHeader';\nimport Images from './Images';\nimport { getProfilePhotosbyUserId } from '../../services/firebase';\nimport useUser from '../../hooks/useUser';\nimport Skeleton from 'react-loading-skeleton';\n\nexport default function UserProfile({ profileUserInfo }) {\n    const [photos, setPhotos] = useState(null);\n    const [photoCounts, setPhotoCounts] = useState(0);\n    const [loading, setLoading] = useState(false);\n    console.log('photos', photos);\n\n    const {\n        userInfo: { userId },\n    } = useUser();\n\n    useEffect(() => {\n        const getProfileUserPhotos = async () => {\n            const result = await getProfilePhotosbyUserId(userId, profileUserInfo.userId, profileUserInfo.username);\n            setPhotos(result.sort((a, b) => b.dateCreated - a.dateCreated));\n            setPhotoCounts(result.length);\n            setLoading(false);\n        };\n        if (profileUserInfo?.userId && userId) {\n            setLoading(true);\n            getProfileUserPhotos();\n        }\n    }, [profileUserInfo?.userId, userId]);\n\n    const isUserLikedToggle = (currentPhoto, userId) => {\n        const updatedPhotos = photos;\n        // update userLIkedPhoto\n        updatedPhotos[photos.indexOf(currentPhoto)].userLikedPhoto =\n            !photos[photos.indexOf(currentPhoto)].userLikedPhoto;\n\n        // update likeCounts\n        const index = updatedPhotos[photos.indexOf(currentPhoto)].likes.indexOf(userId);\n        if (index > -1) {\n            updatedPhotos[photos.indexOf(currentPhoto)].likes.splice(index, 1);\n        } else {\n            updatedPhotos[photos.indexOf(currentPhoto)].likes.push(userId);\n        }\n        setPhotos(updatedPhotos);\n    };\n\n    const addNewComment = (currentPhoto, comment, userId, displayName) => {\n        const updatedPhotos = photos;\n        const currentPhotosComments = photos[photos.indexOf(currentPhoto)].comments;\n        updatedPhotos[photos.indexOf(currentPhoto)].comments = [\n            { comment, userId, displayName },\n            ...currentPhotosComments,\n        ];\n        setPhotos(updatedPhotos);\n    };\n\n    return (\n        <div className=\"max-w-screen-lg container mx-auto px-4\">\n            <ProfileHeader profileUserInfo={profileUserInfo} photos={photos} photoCounts={photoCounts} />\n            {/* {loading && <Skeleton count={1} width={300} height={300} />} */}\n            {!photos ? null : photos.length > 0 ? (\n                <Images\n                    profileUserInfo={profileUserInfo}\n                    photos={photos}\n                    photoCounts={photoCounts}\n                    isUserLikedToggle={isUserLikedToggle}\n                    addNewComment={addNewComment}\n                    loading={loading}\n                />\n            ) : (\n                <div className=\"mt-8 border-t-2 border-gray-dark\">\n                    <p className=\"text-gray-light text-center pt-8\">No Posts</p>\n                </div>\n            )}\n        </div>\n    );\n}\n\nUserProfile.propTypes = {\n    profileUserInfo: PropTypes.object,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { getUserByUsername } from '../services/firebase';\nimport { useHistory } from 'react-router-dom';\nimport UserProfile from '../components/profile/';\nimport * as ROUTES from '../constants/routes';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nexport default function Profile() {\n    const { username } = useParams();\n    const [profileUserInfo, setProfileUserInfo] = useState(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        const getProfileUserInfo = async () => {\n            const [result] = await getUserByUsername(username);\n            setProfileUserInfo(result);\n            if (!result) {\n                history.push(ROUTES.NOT_FOUND);\n            }\n        };\n        if (username) {\n            getProfileUserInfo();\n        }\n    }, [username]);\n\n    useEffect(() => {\n        document.title = `${username} - Artisto`;\n    }, [username]);\n\n    return profileUserInfo?.username ? (\n        <div>\n            <Header />\n            <UserProfile profileUserInfo={profileUserInfo} />\n        </div>\n    ) : (\n        <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n            <div className=\"max-w-screen-lg h-screen mx-auto\">\n                <Skeleton count={1} height={200} className=\"mt-20 mx-4\" />\n            </div>\n        </SkeletonTheme>\n    );\n}\n","import { firebase, FieldValue } from '../lib/firebase';\nimport Axios from 'axios';\nimport imageCompression from 'browser-image-compression';\nconst cloudName = `${process.env.REACT_APP_CLOUD_NAME}`;\nconst presets = `${process.env.REACT_APP_PRESETS}`;\n\nexport async function doesUsernameExist(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    return result.docs.length > 0;\n}\n\nexport async function getUserByUserId(userId) {\n    const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function getUserByUsername(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function IsUserFollowingProfileUser(username, profileUserId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .where('following', 'array-contains', profileUserId)\n        .get();\n    const [response = {}] = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return response.userId;\n}\n\nexport async function getFollowingPhotosByUserId(following, userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', 'in', following).get();\n    const userFollowedPhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const userFollowedPhotosWithDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const [userInfo] = await getUserByUserId(photo.userId);\n            const { username } = userInfo;\n            return {\n                username,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return userFollowedPhotosWithDetails;\n}\n\nexport async function getPhotosbyUserId(userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get();\n    const photos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    return photos;\n}\n\nexport async function getProfilePhotosbyUserId(userId, profileId, profileUsername) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', profileId).get();\n    const profilePhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const profilePhotosWithDetails = await Promise.all(\n        profilePhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            return {\n                username: profileUsername,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return profilePhotosWithDetails;\n}\n\nexport async function updateUserFollowing(userDocId, profileUserId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(userDocId)\n        .update({\n            following: isUserFollowing ? FieldValue.arrayRemove(profileUserId) : FieldValue.arrayUnion(profileUserId),\n        });\n}\n\nexport async function updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(profileUserDocId)\n        .update({\n            followers: isUserFollowing ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n        });\n}\n\nexport async function toggleFollow(userDocId, userId, profileUserDocId, profileUserId, isUserFollowing) {\n    await updateUserFollowing(userDocId, profileUserId, isUserFollowing);\n    await updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing);\n}\n\nexport async function getFollowingOrFollowersList(userIds) {\n    const result = await Promise.all(\n        userIds.map(async (userId) => {\n            const [userList] = await getUserByUserId(userId);\n            return userList;\n        })\n    );\n    return result;\n}\n\nexport async function getSearchResults(category, searchKeyword) {\n    if (searchKeyword) {\n        const result = await firebase.firestore().collection('users').where('category', '==', category).get();\n        const users = result.docs.map((item) => ({\n            ...item.data(),\n            docId: item.id,\n        }));\n        return users;\n    } else {\n        const result = await firebase.firestore().collection('users').limit(10).where('category', '==', category).get();\n        const users = result.docs.map((item) => ({\n            ...item.data(),\n            docId: item.id,\n        }));\n        return users;\n    }\n}\n\nexport async function updateProfile(docId, fullName, category, title, bio, imageFile, setUpload) {\n    setUpload(true);\n\n    if (imageFile) {\n        let url = '';\n        const options = {\n            maxSizeMB: 1,\n            maxWidthOrHeight: 400,\n        };\n\n        try {\n            const compressedFile = await imageCompression(imageFile[0], options);\n            const formData = new FormData();\n            formData.append('file', compressedFile);\n            formData.append('upload_preset', presets);\n\n            await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n                url = data.secure_url;\n            });\n\n            await firebase.firestore().collection('users').doc(docId).update({\n                fullName,\n                category,\n                title,\n                bio,\n                photo: url,\n            });\n\n            setUpload(false);\n        } catch (error) {\n            setUpload(false);\n            alert(error.message);\n        }\n    } else {\n        await firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n        });\n        setUpload(false);\n    }\n}\n\nexport async function uploadNewPost(caption, imageFile, userId, setUpload) {\n    let url = '';\n    const options = {\n        maxWidthOrHeight: 2000,\n    };\n\n    setUpload(true);\n\n    try {\n        const compressedFile = await imageCompression(imageFile[0], options);\n        const formData = new FormData();\n        formData.append('file', compressedFile);\n        formData.append('upload_preset', presets);\n\n        await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n            url = data.secure_url;\n        });\n\n        await firebase\n            .firestore()\n            .collection('photos')\n            .add({\n                caption,\n                comments: [],\n                dateCreated: Date.now(),\n                imageSrc: url,\n                likes: [],\n                photoId: userId + Date.now(),\n                userId,\n                userLatitude: 34.0522,\n                userLongitude: -188.2437,\n            });\n\n        setUpload(false);\n    } catch (error) {\n        setUpload(false);\n        alert(error.message);\n    }\n}\n","export default __webpack_public_path__ + \"static/media/logo.6dc95425.png\";","import React, { useContext, useEffect, useState } from 'react';\nimport logo from '../images/logo.png';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport UserContext from '../context/user';\nimport FirebaseContext from '../context/firebase';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function Header() {\n    const [userInfo, setUserInfo] = useState('');\n    const {\n        user: { uid: userId },\n    } = useContext(UserContext);\n\n    const { firebase } = useContext(FirebaseContext);\n    const history = useHistory();\n    const handleSignOut = () => {\n        firebase.auth().signOut();\n        history.push(ROUTES.LOGIN);\n    };\n\n    useEffect(() => {\n        let result = null;\n        const getUserInfo = async () => {\n            while (!result) {\n                [result] = await getUserByUserId(userId);\n                setUserInfo(result);\n            }\n        };\n        if (userId) {\n            getUserInfo();\n        }\n    }, [userId]);\n\n    return userInfo ? (\n        <div className=\"bg-gray-dark w-screen h-14 flex justify-center items-center fixed z-50 top-0 left-0\">\n            <div className=\"max-w-screen-xl w-full h-14 flex justify-between items-center\">\n                <Link to={ROUTES.DASHBOARD}>\n                    <h1 className=\"flex sm:h-14 sm:w-auto w-28\">\n                        <img src={logo} alt=\"artisto\" className=\"sm:h-full sm:w-auto w-full h-auto\" />\n                    </h1>\n                </Link>\n                <div className=\"flex flex-row items-center\">\n                    <div className=\"pr-2 sm:pr-4\">\n                        <Link to={ROUTES.UPLOAD_IMAGE}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 4v16m8-8H4\" />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-2 sm:pr-4\">\n                        <Link to={ROUTES.SEARCH}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-2 sm:pr-4\">\n                        <Link to={ROUTES.MESSAGES}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"flex h-14 items-center pr-2 sm:pr-4\">\n                        <Link to={`/p/${userInfo?.username}`}>\n                            <img src={userInfo?.photo} className=\"h-5 w-5 sm:h-10 sm:w-10 rounded-full object-cover\" />\n                        </Link>\n                    </div>\n                    <div className=\"pr-2 sm:pr-4 cursor-pointer\" onClick={handleSignOut}>\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                            />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    ) : null;\n}\n","import { useContext, useState, useEffect } from 'react';\nimport UserContext from '../context/user';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function useUser() {\n    const { user } = useContext(UserContext);\n    const [activeUser, setActiveUser] = useState({});\n\n    useEffect(() => {\n        async function getUserInfoByUserId() {\n            const [result] = await getUserByUserId(user.uid);\n            setActiveUser(result);\n        }\n        if (user?.uid) {\n            getUserInfoByUserId();\n        }\n    }, [user]);\n    return { userInfo: activeUser };\n}\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { formatDistance } from 'date-fns';\nimport { getUserByUserId } from '../../services/firebase';\n\nexport default function Header({ username, userId, caption, date }) {\n    const [userPhotoSrc, setUserPhotoSrc] = useState(null);\n    useEffect(() => {\n        const getUserPhotoSrc = async () => {\n            const [result] = await getUserByUserId(userId);\n            const { photo } = result;\n            setUserPhotoSrc(photo);\n        };\n        if (userId) {\n            getUserPhotoSrc();\n        }\n    }, [userId]);\n\n    return (\n        <div className=\"\">\n            <div className=\"flex \">\n                <Link to={`/p/${username}`}>\n                    <div className=\"w-12 mr-2\">\n                        <img\n                            src={userPhotoSrc}\n                            alt={`${username} profile photo`}\n                            className=\"w-12 h-12 rounded-full mr-4 object-cover\"\n                        />\n                    </div>\n                </Link>\n                <div>\n                    <Link to={`/p/${username}`}>\n                        <p className=\"font-bold text-gray-dark\">{username}</p>\n                    </Link>\n                    <p className=\"text-gray-dark break-words text-xs sm:text-sm\">{caption}</p>\n                </div>\n            </div>\n            <p className=\"text-gray-primary text-xs pt-2 text-right\">{formatDistance(date, new Date())} ago</p>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    username: PropTypes.string.isRequired,\n    userId: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n    date: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Image({ imageSrc }) {\n    return (\n        <div className=\"flex w-full justify-center pt-2 pb-2\">\n            <img src={imageSrc} className=\"w-full\" />\n        </div>\n    );\n}\n\nImage.propTypes = {\n    imageSrc: PropTypes.string.isRequired,\n};\n"],"sourceRoot":""}