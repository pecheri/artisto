{"version":3,"sources":["services/firebase.js","hooks/useUser.js","images/logo.png","components/Header.js","components/post/Header.js","components/post/Image.js","components/post/AddComment.js","components/post/Comments.js","components/post/Action.js","components/post/index.js","components/profile/FollowingFollowersUser.js","components/profile/FollowingFollwersList.js","components/profile/ProfileHeader.js","components/profile/Image.js","components/profile/Images.js","components/profile/index.js","pages/Profile.js"],"names":["doesUsernameExist","username","a","firebase","firestore","collection","where","get","result","console","log","docs","length","getUserByUserId","userId","user","map","item","data","docId","id","getUserByUsername","IsUserFollowingProfileUser","profileUserId","response","getFollowingPhotosByUserId","following","userFollowedPhotos","photo","Promise","all","userLikedPhoto","likes","includes","userInfo","userFollowedPhotosWithDetails","getPhotosbyUserId","photos","updateUserFollowing","userDocId","isUserFollowing","doc","update","FieldValue","arrayRemove","arrayUnion","updateProfileUserFollowers","profileUserDocId","followers","toggleFollow","updateProfile","fullName","category","title","bio","getFollowingOrFollowersList","userIds","userList","useUser","useContext","UserContext","useState","activeUser","setActiveUser","useEffect","uid","getUserInfoByUserId","Header","FirebaseContext","history","useHistory","className","to","ROUTES","src","logo","alt","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","auth","signOut","push","caption","date","userPhotoSrc","setUserPhotoSrc","getUserPhotoSrc","formatDistance","Date","Image","imageSrc","AddComment","allComments","setAllComments","comment","setComment","displayName","onSubmit","event","preventDefault","comments","type","placeholder","autoComplete","value","onChange","target","Comments","viewAll","setViewAll","slice","index","Action","likeCount","setLikeCount","isUserLiked","setIsUserLiked","handleLike","Post","dateCreated","FollowingFollowersUser","setFollowingOrFollowers","FollowingFollwersList","followingOrFollowers","list","setList","getFollowingList","getFollowersList","count","ProfileHeader","profileUserInfo","photoCounts","setIsUserFollowing","followersCount","setFollowersCount","checkIfUsersFollowing","toggleUserFollow","prevState","e","currentTarget","closeFollowingFollowersList","isImageClicked","setIsImageClicked","screenToggle","style","width","aspectRatio","closeImage","Images","UserProfile","setPhotos","setPhotoCounts","getProfileUserPhotos","Profile","useParams","setProfileUserInfo","getProfileUserInfo","color","highlightColor","height"],"mappings":"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","file":"static/js/7.98ec8039.chunk.js","sourcesContent":["import { firebase, FieldValue } from '../lib/firebase';\n\nexport async function doesUsernameExist(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    console.log(result.docs.length > 0);\n    return result.docs.length > 0;\n}\n\nexport async function getUserByUserId(userId) {\n    const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function getUserByUsername(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function IsUserFollowingProfileUser(username, profileUserId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .where('following', 'array-contains', profileUserId)\n        .get();\n    const [response = {}] = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return response.userId;\n    // if (user.following.includes(profileUserId)) {\n    //     return true;\n    // } else {\n    //     return false;\n    // }\n}\n\nexport async function getFollowingPhotosByUserId(following, userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', 'in', following).get();\n    const userFollowedPhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const userFollowedPhotosWithDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const [userInfo] = await getUserByUserId(photo.userId);\n            const { username } = userInfo;\n            return {\n                username,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return userFollowedPhotosWithDetails;\n}\n\nexport async function getPhotosbyUserId(userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get();\n    const photos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    return photos;\n}\n\nexport async function updateUserFollowing(userDocId, profileUserId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(userDocId)\n        .update({\n            following: isUserFollowing ? FieldValue.arrayRemove(profileUserId) : FieldValue.arrayUnion(profileUserId),\n        });\n}\n\nexport async function updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(profileUserDocId)\n        .update({\n            followers: isUserFollowing ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n        });\n}\n\nexport async function toggleFollow(userDocId, userId, profileUserDocId, profileUserId, isUserFollowing) {\n    await updateUserFollowing(userDocId, profileUserId, isUserFollowing);\n    await updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing);\n}\n\nexport async function updateProfile(docId, fullName, category, title, bio) {\n    firebase.firestore().collection('users').doc(docId).update({\n        fullName,\n        category,\n        title,\n        bio,\n    });\n}\n\nexport async function getFollowingOrFollowersList(userIds) {\n    const result = await Promise.all(\n        userIds.map(async (userId) => {\n            const [userList] = await getUserByUserId(userId);\n            console.log('userList', userList);\n            return userList;\n        })\n    );\n    console.log('result', result);\n    return result;\n}\n","import { useContext, useState, useEffect } from 'react';\nimport UserContext from '../context/user';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function useUser() {\n    const { user } = useContext(UserContext);\n    const [activeUser, setActiveUser] = useState({});\n\n    useEffect(() => {\n        async function getUserInfoByUserId() {\n            const [result] = await getUserByUserId(user.uid);\n            setActiveUser(result);\n        }\n        if (user?.uid) {\n            getUserInfoByUserId();\n        }\n    }, [user]);\n    return { userInfo: activeUser };\n}\n","export default __webpack_public_path__ + \"static/media/logo.6dc95425.png\";","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logo from '../images/logo.png';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport UserContext from '../context/user';\nimport FirebaseContext from '../context/firebase';\nimport { getUserByUserId } from '../services/firebase';\nimport useUser from '../hooks/useUser';\n\nexport default function Header() {\n    // const [userInfo, setUserInfo] = useState('');\n    const { user } = useContext(UserContext);\n    const { firebase } = useContext(FirebaseContext);\n    const history = useHistory();\n    const handleSignOut = () => {\n        firebase.auth().signOut();\n        history.push(ROUTES.LOGIN);\n    };\n\n    const { userInfo } = useUser();\n\n    // useEffect(() => {\n    //     const getUserInfo = async () => {\n    //         const [result] = await getUserByUserId(user.uid);\n    //         setUserInfo(result);\n    //     };\n    //     if (user?.uid) {\n    //         getUserInfo();\n    //     }\n    // }, [user]);\n\n    return (\n        <div className=\"bg-gray-dark w-screen h-14 flex justify-center items-center fixed z-50\">\n            <div className=\"max-w-screen-xl w-screen h-14 flex justify-between items-center\">\n                <Link to={ROUTES.DASHBOARD}>\n                    <h1 className=\"h-14 flex\">\n                        <img src={logo} alt=\"artisto\" />\n                    </h1>\n                </Link>\n                <div className=\"flex flex-row items-center\">\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.SEARCH}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.MESSAGES}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"flex h-14 items-center pr-4\">\n                        <Link to={`/p/${userInfo.username}`}>\n                            <img src={userInfo.photo} className=\"h-10 w-10 rounded-full\" />\n                        </Link>\n                    </div>\n                    <div className=\"pr-4 cursor-pointer\" onClick={handleSignOut}>\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-8 w-8 text-gray-light\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                            />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    userInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n    }),\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { formatDistance } from 'date-fns';\nimport { getUserByUserId } from '../../services/firebase';\n\nexport default function Header({ username, userId, caption, date }) {\n    const [userPhotoSrc, setUserPhotoSrc] = useState(null);\n    useEffect(() => {\n        const getUserPhotoSrc = async () => {\n            const [result] = await getUserByUserId(userId);\n            const { photo } = result;\n            setUserPhotoSrc(photo);\n        };\n        if (userId) {\n            getUserPhotoSrc();\n        }\n    }, [userId]);\n\n    return (\n        <div className=\"\">\n            <div className=\"flex\">\n                <Link to={`/p/${username}`}>\n                    <img src={userPhotoSrc} alt={`${username} profile photo`} className=\"w-12 h-12 rounded-full mr-4\" />\n                </Link>\n                <div>\n                    <Link to={`/p/${username}`}>\n                        <p className=\"font-bold text-gray-dark\">{username}</p>\n                    </Link>\n                    <p className=\"text-gray-dark break-words\">{caption}</p>\n                </div>\n            </div>\n            <p className=\"text-gray-primary text-xs pt-2 text-right\">{formatDistance(date, new Date())} ago</p>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    username: PropTypes.string.isRequired,\n    userId: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n    date: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Image({ imageSrc }) {\n    return (\n        <div className=\"flex w-full justify-center pt-2 pb-2\">\n            <img src={imageSrc} className=\"w-full\" />\n        </div>\n    );\n}\n\nImage.propTypes = {\n    imageSrc: PropTypes.string.isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport UserContext from '../../context/user';\nimport FirebaseContext from '../../context/firebase';\n\nexport default function AddComment({ allComments, setAllComments, docId }) {\n    const [comment, setComment] = useState('');\n    const {\n        user: { displayName, uid: userId },\n    } = useContext(UserContext);\n    const { firebase, FieldValue } = useContext(FirebaseContext);\n\n    const handleSubmit = (event) => {\n        event.preventDefault(event);\n        setAllComments([{ comment, userId, displayName }, ...allComments]);\n        setComment('');\n        return firebase\n            .firestore()\n            .collection('photos')\n            .doc(docId)\n            .update({\n                comments: FieldValue.arrayUnion({ comment, userId, displayName }),\n            });\n    };\n    return (\n        <div className=\"mt-2\">\n            <form className=\"flex\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"add a comment...\"\n                    autoComplete=\"off\"\n                    className=\"text-sm w-full p-2 rounded-l\"\n                    value={comment}\n                    onChange={({ target }) => setComment(target.value)}\n                />\n                <button\n                    type=\"submit\"\n                    className={`p-2 bg-blue-primary text-gray-light rounded-r ${comment.length < 1 && 'opacity-50'}`}\n                >\n                    SEND\n                </button>\n            </form>\n        </div>\n    );\n}\n\nAddComment.propTypes = {\n    allComments: PropTypes.array,\n    setAllComments: PropTypes.func.isRequired,\n    docId: PropTypes.string.isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddComment from './AddComment';\nimport UserContext from '../../context/user';\n\nexport default function Comments({ allComments, setAllComments, docId }) {\n    const [viewAll, setViewAll] = useState(false);\n    const { user } = useContext(UserContext);\n\n    // const handleViewAllComments = () => {\n    //     setViewAll(true);\n    // };\n    return (\n        <div className=\"pt-2\">\n            <div>\n                {allComments.slice(0, 3).map((comment, index) => (\n                    <p className=\"text-sm text-gray-dark break-words\" key={index}>\n                        <Link to={`/p/${user.displayName}`}>\n                            <span className=\"font-bold\">{comment.displayName} </span>\n                        </Link>\n                        {'   '}\n                        {comment.comment}\n                    </p>\n                ))}\n            </div>\n            {allComments.length > 3 && !viewAll ? (\n                <p\n                    className=\"text-xs text-gray-primary opacity-70 pt-2 cursor-pointer\"\n                    onClick={() => setViewAll(true)}\n                >\n                    View All Comments\n                </p>\n            ) : viewAll ? (\n                allComments.slice(3).map((comment, index) => (\n                    <p className=\"text-sm text-gray-dark break-words\" key={index}>\n                        <Link to={`/p/${user.displayName}`}>\n                            <span className=\"font-bold\">{comment.displayName} </span>\n                        </Link>\n                        {'   '}\n                        {comment.comment}\n                    </p>\n                ))\n            ) : null}\n            <AddComment allComments={allComments} setAllComments={setAllComments} docId={docId} />\n        </div>\n    );\n}\n\nComments.propTypes = {\n    allComments: PropTypes.array.isRequired,\n    setAllComments: PropTypes.func.isRequired,\n    docId: PropTypes.string.isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Comments from './Comments';\nimport UserContext from '../../context/user';\nimport FirebaseContext from '../../context/firebase';\n\nexport default function Action({ likes, userLikedPhoto, comments, docId }) {\n    const [likeCount, setLikeCount] = useState(likes.length);\n    const [allComments, setAllComments] = useState(comments);\n    const [isUserLiked, setIsUserLiked] = useState(userLikedPhoto);\n\n    const {\n        user: { uid: userId = '' },\n    } = useContext(UserContext);\n    const { firebase, FieldValue } = useContext(FirebaseContext);\n\n    const handleLike = async () => {\n        setIsUserLiked(!isUserLiked);\n        await firebase\n            .firestore()\n            .collection('photos')\n            .doc(docId)\n            .update({\n                likes: isUserLiked ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n            });\n        setLikeCount((likeCount) => (isUserLiked ? likeCount - 1 : likeCount + 1));\n    };\n\n    return (\n        <div className=\"\">\n            <div className=\"flex\">\n                <div className=\"flex items-end\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className={`h-8 w-8 text-gray-dark cursor-pointer ${isUserLiked && 'fill-red'} `}\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                        onClick={handleLike}\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                        />\n                    </svg>\n                    <p className=\"text-sm text-gray-dark\">{likeCount}</p>\n                </div>\n                <div className=\"flex items-end pl-4\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-8 w-8 text-gray-dark cursor-pointer\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                        />\n                    </svg>\n                    <p className=\"text-sm text-gray-dark\">{allComments.length}</p>\n                </div>\n            </div>\n            <Comments setAllComments={setAllComments} allComments={allComments} docId={docId} />\n        </div>\n    );\n}\n\nAction.propTypes = {\n    likes: PropTypes.array.isRequired,\n    comments: PropTypes.array.isRequired,\n    userLikedPhoto: PropTypes.bool.isRequired,\n    docId: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Image from './Image';\nimport Action from './Action';\n\nexport default function Post({ photo }) {\n    return (\n        <div className=\"bg-gray-light py-8 px-16 mb-8\">\n            <Header userId={photo.userId} username={photo.username} caption={photo.caption} date={photo.dateCreated} />\n            <Image imageSrc={photo.imageSrc} />\n            <Action\n                likes={photo.likes}\n                userLikedPhoto={photo.userLikedPhoto}\n                comments={photo.comments}\n                docId={photo.docId}\n            />\n        </div>\n    );\n}\n\nPost.propTypes = {\n    photo: PropTypes.shape({\n        caption: PropTypes.string.isRequired,\n        comments: PropTypes.array.isRequired,\n        dateCreated: PropTypes.number.isRequired,\n        docId: PropTypes.string.isRequired,\n        imageSrc: PropTypes.string.isRequired,\n        likes: PropTypes.array.isRequired,\n        photoId: PropTypes.string.isRequired,\n        userId: PropTypes.string.isRequired,\n        username: PropTypes.string.isRequired,\n        userLikedPhoto: PropTypes.bool.isRequired,\n    }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function FollowingFollowersUser({ username, fullName, photo, setFollowingOrFollowers }) {\n    return (\n        <div className=\"p-2 flex mx-auto items-center\">\n            <Link to={`/p/${username}`} onClick={() => setFollowingOrFollowers()}>\n                <div>\n                    <img src={photo} className=\"h-10 w-10 rounded-full\" />\n                </div>\n            </Link>\n            <div className=\"pl-4\">\n                <Link to={`/p/${username}`} onClick={() => setFollowingOrFollowers()}>\n                    <p className=\"font-bold\">{fullName}</p>\n                </Link>\n                <p className=\"text-sm\">\n                    <span className=\"text-xs\">ID: </span>\n                    {username}\n                </p>\n            </div>\n        </div>\n    );\n}\n\nFollowingFollowersUser.propTypes = {\n    username: PropTypes.string.isRequired,\n    fullName: PropTypes.string.isRequired,\n    photo: PropTypes.string.isRequired,\n    setFollowingOrFollowers: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFollowingOrFollowersList } from '../../services/firebase';\nimport FollowingFollowersUser from './FollowingFollowersUser';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nexport default function FollowingFollwersList({ following, followers, followingOrFollowers, setFollowingOrFollowers }) {\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n        const getFollowingList = async () => {\n            const result = await getFollowingOrFollowersList(following);\n            setList(result);\n        };\n        const getFollowersList = async () => {\n            const result = await getFollowingOrFollowersList(followers);\n            setList(result);\n        };\n        if (followingOrFollowers === 'following') {\n            getFollowingList();\n        }\n        if (followingOrFollowers === 'followers') {\n            getFollowersList();\n        }\n    }, [followingOrFollowers]);\n    console.log('list', list);\n    return (\n        <div className=\"bg-gray-light h-3/4 max-w-sm w-96 rounded text-gray-dark p-8\">\n            {list ? (\n                list.map((item, index) => (\n                    <FollowingFollowersUser\n                        key={index}\n                        username={item.username}\n                        fullName={item.fullName}\n                        photo={item.photo}\n                        setFollowingOrFollowers={setFollowingOrFollowers}\n                    />\n                ))\n            ) : (\n                <Skeleton count={4} className=\"w-full pb-4 h-1/4\" />\n            )}\n        </div>\n    );\n}\n\nFollowingFollwersList.propTypes = {\n    // profileUserInfo: PropTypes.shape({\n    //     dateCreated: PropTypes.number,\n    //     email: PropTypes.string,\n    //     followers: PropTypes.array,\n    //     following: PropTypes.array,\n    //     fullName: PropTypes.string,\n    //     userId: PropTypes.string,\n    //     username: PropTypes.string,\n    //     category: PropTypes.string,\n    //     photo: PropTypes.string,\n    //     title: PropTypes.string,\n    //     bio: PropTypes.string,\n    //     docId: PropTypes.string,\n    // }),\n    followingOrFollowers: PropTypes.string,\n    following: PropTypes.array,\n    followers: PropTypes.array,\n    setFollowingOrFollowers: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useUser from '../../hooks/useUser';\nimport { IsUserFollowingProfileUser } from '../../services/firebase';\nimport { toggleFollow } from '../../services/firebase';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport FollowingFollwersList from './FollowingFollwersList';\n\nexport default function ProfileHeader({ profileUserInfo, photos, photoCounts }) {\n    const {\n        userInfo: { username, docId, userId },\n    } = useUser();\n\n    const [isUserFollowing, setIsUserFollowing] = useState(null);\n    const [followersCount, setFollowersCount] = useState(profileUserInfo.followers.length);\n    const [followingOrFollowers, setFollowingOrFollowers] = useState(null);\n    console.log('followingOrFOllowers', followingOrFollowers);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        const checkIfUsersFollowing = async () => {\n            const result = await IsUserFollowingProfileUser(username, profileUserInfo.userId);\n            setIsUserFollowing(!!result);\n        };\n        if (profileUserInfo && username) {\n            checkIfUsersFollowing();\n        }\n    }, [profileUserInfo, username]);\n\n    const toggleUserFollow = async () => {\n        setIsUserFollowing((prevState) => !prevState);\n        isUserFollowing\n            ? setFollowersCount((prevState) => prevState - 1)\n            : setFollowersCount((prevState) => prevState + 1);\n\n        await toggleFollow(docId, userId, profileUserInfo.docId, profileUserInfo.userId, isUserFollowing);\n    };\n\n    const closeFollowingFollowersList = (e) => {\n        if (e.target === e.currentTarget) {\n            setFollowingOrFollowers(null);\n        }\n    };\n\n    return (\n        <div className=\"pt-24 text-gray-light\">\n            {followingOrFollowers && (\n                <div\n                    onClick={(e) => {\n                        closeFollowingFollowersList(e);\n                    }}\n                    className=\"flex justify-center w-screen h-screen pt-20 bg-gray-primary bg-opacity-50 absolute top-0 left-0 z-90\"\n                >\n                    <div className=\"\">\n                        <FollowingFollwersList\n                            following={profileUserInfo.following}\n                            followers={profileUserInfo.followers}\n                            followingOrFollowers={followingOrFollowers}\n                            setFollowingOrFollowers={setFollowingOrFollowers}\n                        />\n                    </div>\n                </div>\n            )}\n            <div className=\"flex items-center \">\n                <div className=\"pr-4\">\n                    <img\n                        src={profileUserInfo.photo}\n                        alt={`${profileUserInfo.username} profile photo`}\n                        className=\"w-36 h-36 rounded-full\"\n                    />\n                </div>\n\n                <div className=\"w-1/2\">\n                    <div className=\"flex items-center\">\n                        <div>\n                            <p className=\"text-lg font-bold\">{profileUserInfo.fullName}</p>\n                            <p>\n                                <span className=\"text-sm\">ID: </span>\n                                {profileUserInfo.username}\n                            </p>\n                        </div>\n                        <div className=\"ml-10\">\n                            {profileUserInfo.username === username ? (\n                                <button\n                                    className=\"text-xs bg-gray-dark text-gray-light p-2 rounded\"\n                                    onClick={() => history.push(`/edit/${username}`)}\n                                >\n                                    Edit Profile\n                                </button>\n                            ) : null}\n                        </div>\n                    </div>\n\n                    <p className=\"\">\n                        <span className=\"text-sm\">Category: </span>\n                        {profileUserInfo.category}\n                    </p>\n                    <div className=\"flex mt-4\">\n                        <p>\n                            {photoCounts} <span className=\"text-sm\">posts</span>\n                        </p>\n                        <p\n                            className=\"px-4 cursor-pointer\"\n                            onClick={() => setFollowingOrFollowers(profileUserInfo.followers.length > 0 && 'followers')}\n                        >\n                            {followersCount} <span className=\"text-sm\">followers</span>\n                        </p>\n                        <p\n                            className=\"cursor-pointer\"\n                            onClick={() => setFollowingOrFollowers(profileUserInfo.following.length > 0 && 'following')}\n                        >\n                            {profileUserInfo.following.length} <span className=\"text-sm\">following</span>\n                        </p>\n                    </div>\n                </div>\n                <div>\n                    {profileUserInfo.username === username || isUserFollowing === null ? null : (\n                        <button\n                            onClick={toggleUserFollow}\n                            className={`rounded text-gray-light bg-red-primary text-sm py-2 px-6 ${\n                                isUserFollowing ? 'bg-red-primary' : 'bg-blue-primary'\n                            }`}\n                        >\n                            {isUserFollowing ? 'Unfollow' : 'Follow'}\n                        </button>\n                    )}\n                </div>\n            </div>\n            <div className=\"pt-2 max-w-2xl\">\n                <p className=\"\">{profileUserInfo.title}</p>\n                <p className=\"text-sm\">Bio:</p>\n                <p className=\"break-words text-sm\">{profileUserInfo.bio}</p>\n            </div>\n        </div>\n    );\n}\n\nProfileHeader.propTypes = {\n    profileUserInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n        bio: PropTypes.string,\n        docId: PropTypes.string,\n    }),\n    photos: PropTypes.array,\n    photoCounts: PropTypes.number,\n};\n\n{\n    /* <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n            <Skeleton count={1} width={480} height={200} className=\"mt-20\" />\n        </SkeletonTheme> */\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Post from '../post';\n\nexport default function Image({ photo }) {\n    const [isImageClicked, setIsImageClicked] = useState(false);\n    const screenToggle = () => {\n        setIsImageClicked((prevState) => !prevState);\n    };\n\n    const closeImage = (e) => {\n        if (e.target === e.currentTarget) {\n            screenToggle();\n        }\n    };\n\n    return (\n        <>\n            <img\n                src={photo.imageSrc}\n                alt={photo.caption}\n                className=\"object-cover cursor-pointer\"\n                style={{ width: '100%', aspectRatio: '1' }}\n                onClick={screenToggle}\n            />\n            {isImageClicked && (\n                <div\n                    onClick={(e) => {\n                        closeImage(e);\n                    }}\n                    className=\"flex justify-center w-screen pt-20 bg-gray-primary bg-opacity-50 absolute top-0 left-0 z-90\"\n                >\n                    <div className=\"w-full max-w-screen-sm pb-8\">\n                        <Post photo={photo} />\n                    </div>\n                </div>\n            )}\n        </>\n    );\n}\n\nImage.propTypes = {\n    photo: PropTypes.shape({ imageSrc: PropTypes.string, caption: PropTypes.string }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from './Image';\n\nexport default function Images({ profileUserInfo, photos }) {\n    return (\n        <div className=\"border-t-2 border-gray-dark my-8 pt-8\">\n            <div className=\"grid grid-cols-3 gap-8 items-center\">\n                {photos.map((photo, index) => (\n                    <Image key={index} photo={photo} />\n                ))}\n\n                {/* <img src={photos[0].imageSrc} />\n                <img src={photos[0].imageSrc} />\n                <img src={photos[0].imageSrc} />\n                <img src={photos[0].imageSrc} />\n                <img src={photos[0].imageSrc} />\n                <img src={photos[0].imageSrc} />\n                <img src={photos[0].imageSrc} />\n                <img src={photos[0].imageSrc} />\n                <img src={photos[0].imageSrc} /> */}\n            </div>\n        </div>\n    );\n}\nImages.propTypes = {\n    profileUserInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n        bio: PropTypes.string,\n    }),\n    photos: PropTypes.array,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ProfileHeader from './ProfileHeader';\nimport Images from './Images';\nimport { getPhotosbyUserId } from '../../services/firebase';\n\nexport default function UserProfile({ profileUserInfo }) {\n    const [photos, setPhotos] = useState(null);\n    const [photoCounts, setPhotoCounts] = useState(0);\n\n    useEffect(() => {\n        const getProfileUserPhotos = async () => {\n            const result = await getPhotosbyUserId(profileUserInfo.userId);\n            setPhotos(result);\n            setPhotoCounts(result.length);\n        };\n        if (profileUserInfo?.userId) {\n            getProfileUserPhotos();\n        }\n    }, [profileUserInfo?.userId]);\n\n    return (\n        <div className=\"max-w-screen-lg container mx-auto px-4\">\n            <ProfileHeader profileUserInfo={profileUserInfo} photos={photos} photoCounts={photoCounts} />\n            {photos ? (\n                <Images profileUserInfo={profileUserInfo} photos={photos} />\n            ) : (\n                <div className=\"mt-8 border-t-2 border-gray-dark\">\n                    <p className=\"text-gray-light text-center pt-8\">No Photos</p>\n                </div>\n            )}\n        </div>\n    );\n}\n\nUserProfile.propTypes = {\n    profileUserInfo: PropTypes.object,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { getUserByUsername } from '../services/firebase';\nimport UserProfile from '../components/profile';\nimport { useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nexport default function Profile() {\n    const { username } = useParams();\n    const [profileUserInfo, setProfileUserInfo] = useState(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        const getProfileUserInfo = async () => {\n            const [result] = await getUserByUsername(username);\n            setProfileUserInfo(result);\n            if (!result) {\n                history.push(ROUTES.NOT_FOUND);\n            }\n        };\n        if (username) {\n            getProfileUserInfo();\n        }\n    }, [username]);\n\n    return profileUserInfo?.username ? (\n        <div>\n            <Header />\n            <UserProfile profileUserInfo={profileUserInfo} />\n        </div>\n    ) : (\n        <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n            <div className=\"max-w-screen-lg h-screen mx-auto\">\n                <Skeleton count={1} height={200} className=\"mt-20 mx-4\" />\n            </div>\n        </SkeletonTheme>\n    );\n}\n"],"sourceRoot":""}