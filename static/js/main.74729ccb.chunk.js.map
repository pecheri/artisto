{"version":3,"sources":["constants/routes.js","context/firebase.js","lib/firebase.js","context/user.js","App.js","hooks/useAuthListener.js","index.js"],"names":["DASHBOARD","LOGIN","SIGN_UP","PROFILE","PROFILE_EDIT","SEARCH","MESSAGES","NOT_FOUND","FirebaseContext","createContext","firebase","Firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","FieldValue","firestore","UserContext","Login","lazy","SignUp","DashBoard","Profile","ProfileEdit","Search","NotFound","App","user","useState","JSON","parse","localStorage","getItem","setUser","useContext","useEffect","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem","useAuthListener","Provider","value","fallback","className","path","ROUTES","component","exact","ReactDOM","render","document","getElementById"],"mappings":"mGAAA,gRAAO,IAAMA,EAAY,IACZC,EAAQ,SACRC,EAAU,WACVC,EAAU,eACVC,EAAe,kBACfC,EAAS,UACTC,EAAW,YACXC,EAAY,c,gCCPzB,WAEMC,EAAkBC,wBAAc,MACvBD,O,gCCHf,gFAcME,GAdN,YAciBC,IAASC,cATX,CACXC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,+CAIHC,EAAeR,IAASS,UAAxBD,Y,gCCfR,WAEME,EAAcZ,wBAAc,MACnBY,O,2JCGTC,EAAQC,gBAAK,kBAAM,gCACnBC,EAASD,gBAAK,kBAAM,uDACpBE,EAAYF,gBAAK,kBAAM,sDACvBG,EAAUH,gBAAK,kBAAM,sDACrBI,EAAcJ,gBAAK,kBAAM,sDACzBK,EAASL,gBAAK,kBAAM,iCACpBM,EAAWN,gBAAK,kBAAM,gCAwBbO,MAtBf,WAAgB,IACJC,ECZG,WAA4B,IAAD,EACdC,mBAASC,KAAKC,MAAMC,aAAaC,QAAQ,cAD3B,mBAC/BL,EAD+B,KACzBM,EADyB,KAE9B3B,EAAa4B,qBAAW9B,KAAxBE,SAeR,OAdA6B,qBAAU,WACN,IAAMC,EAAW9B,EAAS+B,OAAOC,oBAAmB,SAACC,GAE7CA,GACAR,aAAaS,QAAQ,WAAYX,KAAKY,UAAUF,IAChDN,EAAQM,KAGRR,aAAaW,WAAW,YACxBT,EAAQ,UAGhB,OAAO,kBAAMG,OACd,CAAC9B,IACG,CAAEqB,QDLQgB,GAAThB,KAER,OACI,cAAC,IAAYiB,SAAb,CAAsBC,MAAO,CAAElB,QAA/B,SACI,cAAC,IAAD,UACI,cAAC,WAAD,CAAUmB,SAAU,mBAAGC,UAAU,+CAAb,wBAApB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAMC,IAAcC,UAAWhC,IACtC,cAAC,IAAD,CAAO8B,KAAMC,IAAgBC,UAAW9B,IACxC,cAAC,IAAD,CAAO4B,KAAMC,IAAkBC,UAAW7B,EAAW8B,OAAK,IAC1D,cAAC,IAAD,CAAOH,KAAMC,IAAgBC,UAAW5B,IACxC,cAAC,IAAD,CAAO0B,KAAMC,IAAqBC,UAAW3B,IAC7C,cAAC,IAAD,CAAOyB,KAAMC,IAAeC,UAAW1B,IACvC,cAAC,IAAD,CAAO0B,UAAWzB,c,QErB1C2B,IAASC,OACL,cAAC,IAAgBT,SAAjB,CAA0BC,MAAO,CAAEvC,aAAUS,gBAA7C,SACI,cAAC,EAAD,MAEJuC,SAASC,eAAe,W","file":"static/js/main.74729ccb.chunk.js","sourcesContent":["export const DASHBOARD = '/';\nexport const LOGIN = '/login';\nexport const SIGN_UP = '/sign-up';\nexport const PROFILE = '/p/:username';\nexport const PROFILE_EDIT = '/edit/:username';\nexport const SEARCH = '/search';\nexport const MESSAGES = '/messages';\nexport const NOT_FOUND = '/not-found';\n","import { createContext } from 'react';\n\nconst FirebaseContext = createContext(null);\nexport default FirebaseContext;\n","import Firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n// import { seedDatabase } from '../seed';\n\nconst config = {\n    apiKey: 'AIzaSyDYOC4vSoKt8A2qLzIqw1A_BYTrqLAbFLk',\n    authDomain: 'artisto-rki.firebaseapp.com',\n    projectId: 'artisto-rki',\n    storageBucket: 'artisto-rki.appspot.com',\n    messagingSenderId: '960656414320',\n    appId: '1:960656414320:web:76f34788ac2ca4954d46b5',\n};\n\nconst firebase = Firebase.initializeApp(config);\nconst { FieldValue } = Firebase.firestore;\n\nexport { firebase, FieldValue };\n\n// seedDatabase(firebase);\n","import { createContext } from 'react';\n\nconst UserContext = createContext(null);\nexport default UserContext;\n","import React, { lazy, Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport * as ROUTES from './constants/routes';\nimport UserContext from './context/user';\nimport useAuthListener from './hooks/useAuthListener';\n\nconst Login = lazy(() => import('./pages/Login'));\nconst SignUp = lazy(() => import('./pages/SignUp'));\nconst DashBoard = lazy(() => import('./pages/DashBoard'));\nconst Profile = lazy(() => import('./pages/Profile'));\nconst ProfileEdit = lazy(() => import('./pages/ProfileEdit'));\nconst Search = lazy(() => import('./pages/Search'));\nconst NotFound = lazy(() => import('./pages/NotFound'));\n\nfunction App() {\n    const { user } = useAuthListener();\n\n    return (\n        <UserContext.Provider value={{ user }}>\n            <Router>\n                <Suspense fallback={<p className=\"text-gray-light text-center w-screen text-xl\">Loading...</p>}>\n                    <Switch>\n                        <Route path={ROUTES.LOGIN} component={Login} />\n                        <Route path={ROUTES.SIGN_UP} component={SignUp} />\n                        <Route path={ROUTES.DASHBOARD} component={DashBoard} exact />\n                        <Route path={ROUTES.PROFILE} component={Profile} />\n                        <Route path={ROUTES.PROFILE_EDIT} component={ProfileEdit} />\n                        <Route path={ROUTES.SEARCH} component={Search} />\n                        <Route component={NotFound} />\n                    </Switch>\n                </Suspense>\n            </Router>\n        </UserContext.Provider>\n    );\n}\n\nexport default App;\n","import { useState, useEffect, useContext } from 'react';\nimport FirebaseContext from '../context/firebase';\n\nexport default function useAuthListener() {\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\n    const { firebase } = useContext(FirebaseContext);\n    useEffect(() => {\n        const listener = firebase.auth().onAuthStateChanged((authUser) => {\n            // we have a user... therefore we can store the user in localstorage\n            if (authUser) {\n                localStorage.setItem('authUser', JSON.stringify(authUser));\n                setUser(authUser);\n            } else {\n                // we don't have an authUser, therefore clear the localstorage\n                localStorage.removeItem('authUser');\n                setUser(null);\n            }\n        });\n        return () => listener();\n    }, [firebase]);\n    return { user };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport FirebaseContext from './context/firebase';\nimport { firebase, FieldValue } from './lib/firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={{ firebase, FieldValue }}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}