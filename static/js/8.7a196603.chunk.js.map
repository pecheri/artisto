{"version":3,"sources":["pages/ProfileEdit.js","services/firebase.js","hooks/useUser.js","images/logo.png","components/Header.js","lib/categories.js"],"names":["ProfileEdit","useUser","userInfo","bio","category","fullName","title","photo","userId","docId","username","useState","userBio","setUserBio","userCategory","setUserCategory","userFullName","setUserFullName","userTitle","setUserTitle","imageFile","setImageFile","console","log","history","useHistory","useEffect","isInvalid","handleProfileUpdate","event","a","preventDefault","updateProfile","alert","setTimeout","push","className","onSubmit","placeholder","type","onChange","target","value","categories","sort","map","index","accept","files","disabled","cloudName","process","presets","doesUsernameExist","firebase","firestore","collection","where","get","result","docs","length","getUserByUserId","user","item","data","id","getUserByUsername","IsUserFollowingProfileUser","profileUserId","response","getFollowingPhotosByUserId","following","userFollowedPhotos","Promise","all","userLikedPhoto","likes","includes","userFollowedPhotosWithDetails","getPhotosbyUserId","photos","getLatestPhotoInfo","photoId","profileUsername","photoWithDetails","updateUserFollowing","userDocId","isUserFollowing","doc","update","FieldValue","arrayRemove","arrayUnion","updateProfileUserFollowers","profileUserDocId","followers","toggleFollow","getFollowingOrFollowersList","userIds","userList","getSearchResults","users","url","formData","FormData","append","Axios","post","then","secure_url","uploadNewPost","caption","add","comments","dateCreated","Date","now","imageSrc","userLatitude","userLongitude","useContext","UserContext","activeUser","setActiveUser","uid","getUserInfoByUserId","Header","FirebaseContext","to","ROUTES","src","logo","alt","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","auth","signOut"],"mappings":"qPAQe,SAASA,IAAe,IAAD,EAG9BC,cADAC,SAAYC,EAFkB,EAElBA,IAAKC,EAFa,EAEbA,SAAUC,EAFG,EAEHA,SAAiBC,GAFd,EAEOC,MAFP,EAEcD,OAAOE,EAFrB,EAEqBA,OAAQC,EAF7B,EAE6BA,MAAOC,EAFpC,EAEoCA,SAFpC,EAIJC,mBAASR,GAJL,mBAI3BS,EAJ2B,KAIlBC,EAJkB,OAKMF,mBAASP,GALf,mBAK3BU,EAL2B,KAKbC,EALa,OAMMJ,mBAASN,GANf,mBAM3BW,EAN2B,KAMbC,EANa,OAOAN,mBAASL,GAPT,mBAO3BY,EAP2B,KAOhBC,EAPgB,OAQAR,mBAAS,MART,mBAQ3BS,EAR2B,KAQhBC,EARgB,KAUlCC,QAAQC,IAAI,YAAaH,GAEzB,IAAMI,EAAUC,cAEhBC,qBAAU,WACFlB,IACAK,EAAWV,GACXY,EAAgBX,GAChBa,EAAgBZ,GAEhBc,EAAab,MAElB,CAACE,IAEJ,IAAMmB,EACFf,IAAYT,GAAOW,IAAiBV,GAAYY,IAAiBX,GAAYa,IAAcZ,IAAUc,EAEnGQ,EAAmB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACxBD,EAAME,iBADkB,SAElBC,YAAcvB,EAAOO,EAAcF,EAAcI,EAAWN,EAASQ,GAFnD,OAGxBa,MAAM,yCACQC,YAAW,WACrBV,EAAQW,KAAR,aAAmBzB,MACpB,KANqB,2CAAH,sDASzB,OACI,gCACI,cAAC,IAAD,IACA,sBAAK0B,UAAU,+CAAf,UACI,mBAAGA,UAAU,0BAAb,0BACC5B,EACG,uBAAM4B,UAAU,gBAAgBC,SAAUT,EAA1C,UACI,sBAAKQ,UAAU,qCAAf,UACI,mBAAGA,UAAU,sCAAb,uBACA,uBACIE,YAAY,YACZC,KAAK,OACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBxB,EAAgBwB,EAAOC,QACjDA,MAAO1B,EACPoB,UAAU,wDAGlB,sBAAKA,UAAU,qCAAf,UACI,mBAAGA,UAAU,sCAAb,sBACA,yBACIA,UAAU,0DACVI,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB1B,EAAgB0B,EAAOC,QACjDA,MAAO5B,EAHX,UAKK6B,IAAWC,OAAOC,KAAI,SAACzC,EAAU0C,GAAX,OACnB,wBAAoBJ,MAAOtC,EAA3B,SACKA,GADQ0C,MAIjB,wBAAQJ,MAAM,SAAd,0BAGR,sBAAKN,UAAU,qCAAf,UACI,mBAAGA,UAAU,sCAAb,mBACA,uBACIE,YAAY,QACZC,KAAK,OACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBtB,EAAasB,EAAOC,QAC9CA,MAAOxB,EACPkB,UAAU,wDAGlB,sBAAKA,UAAU,qCAAf,UACI,mBAAGA,UAAU,sCAAb,iBACA,0BACIE,YAAY,MACZC,KAAK,OACLC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB5B,EAAW4B,EAAOC,QAC5CA,MAAO9B,EACPwB,UAAU,wDAGlB,sBAAKA,UAAU,qCAAf,UACI,mBAAGA,UAAU,sCAAb,2BACA,uBACIG,KAAK,OACLQ,OAAO,UACPX,UAAU,qDACVI,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBpB,EAAaoB,EAAOO,aAGtD,qBAAKZ,UAAU,qCAAf,SACI,wBACIA,UAAS,gGACLT,GAAa,cAEjBY,KAAK,SACLU,SAAUtB,EALd,yBAWR,a,8fCnHduB,EAAS,UAAMC,aACfC,EAAO,UAAMD,YAEZ,SAAeE,EAAtB,kC,4CAAO,WAAiC3C,GAAjC,eAAAoB,EAAA,sEACkBwB,IAASC,YAAYC,WAAW,SAASC,MAAM,WAAY,KAAM/C,GAAUgD,MAD7F,cACGC,EADH,OAEHrC,QAAQC,IAAIoC,EAAOC,KAAKC,OAAS,GAF9B,kBAGIF,EAAOC,KAAKC,OAAS,GAHzB,4C,sBAMA,SAAeC,EAAtB,kC,4CAAO,WAA+BtD,GAA/B,iBAAAsB,EAAA,sEACkBwB,IAASC,YAAYC,WAAW,SAASC,MAAM,SAAU,KAAMjD,GAAQkD,MADzF,cACGC,EADH,OAEGI,EAAOJ,EAAOC,KAAKf,KAAI,SAACmB,GAAD,mBAAC,eACvBA,EAAKC,QADiB,IAEzBxD,MAAOuD,EAAKE,QAJb,kBAMIH,GANJ,4C,sBASA,SAAeI,EAAtB,kC,4CAAO,WAAiCzD,GAAjC,iBAAAoB,EAAA,sEACkBwB,IAASC,YAAYC,WAAW,SAASC,MAAM,WAAY,KAAM/C,GAAUgD,MAD7F,cACGC,EADH,OAEGI,EAAOJ,EAAOC,KAAKf,KAAI,SAACmB,GAAD,mBAAC,eACvBA,EAAKC,QADiB,IAEzBxD,MAAOuD,EAAKE,QAJb,kBAMIH,GANJ,4C,sBASA,SAAeK,EAAtB,oC,4CAAO,WAA0C1D,EAAU2D,GAApD,uBAAAvC,EAAA,sEACkBwB,IAChBC,YACAC,WAAW,SACXC,MAAM,WAAY,KAAM/C,GACxB+C,MAAM,YAAa,iBAAkBY,GACrCX,MANF,cACGC,EADH,SAOqBA,EAAOC,KAAKf,KAAI,SAACmB,GAAD,mBAAC,eAClCA,EAAKC,QAD4B,IAEpCxD,MAAOuD,EAAKE,QATb,0BAOII,OAPJ,MAOe,GAPf,oBAWIA,EAAS9D,QAXb,4C,sBAmBA,SAAe+D,EAAtB,oC,4CAAO,WAA0CC,EAAWhE,GAArD,mBAAAsB,EAAA,sEACkBwB,IAASC,YAAYC,WAAW,UAAUC,MAAM,SAAU,KAAMe,GAAWd,MAD7F,cACGC,EADH,OAEGc,EAAqBd,EAAOC,KAAKf,KAAI,SAACtC,GAAD,mBAAC,eACrCA,EAAM0D,QAD8B,IAEvCxD,MAAOF,EAAM2D,QAJd,SAMyCQ,QAAQC,IAChDF,EAAmB5B,IAAnB,uCAAuB,WAAOtC,GAAP,uBAAAuB,EAAA,6DACf8C,GAAiB,EACjBrE,EAAMsE,MAAMC,SAAStE,KACrBoE,GAAiB,GAHF,SAKMd,EAAgBvD,EAAMC,QAL5B,0CAKZN,EALY,KAMXQ,EAAaR,EAAbQ,SANW,2CAQfA,YACGH,GATY,IAUfqE,oBAVe,2CAAvB,wDAPD,cAMGG,EANH,yBAqBIA,GArBJ,4C,sBAwBA,SAAeC,EAAtB,kC,4CAAO,WAAiCxE,GAAjC,iBAAAsB,EAAA,sEACkBwB,IAASC,YAAYC,WAAW,UAAUC,MAAM,SAAU,KAAMjD,GAAQkD,MAD1F,cACGC,EADH,OAEGsB,EAAStB,EAAOC,KAAKf,KAAI,SAACtC,GAAD,mBAAC,eACzBA,EAAM0D,QADkB,IAE3BxD,MAAOF,EAAM2D,QAJd,kBAMIe,GANJ,4C,sBASA,SAAeC,EAAtB,sC,4CAAO,WAAkCC,EAAS3E,EAAQ4E,GAAnD,uBAAAtD,EAAA,sEACkBwB,IAASC,YAAYC,WAAW,UAAUC,MAAM,UAAW,KAAM0B,GAASzB,MAD5F,cACGC,EADH,gBAE8BA,EAAOC,KAAKf,KAAI,SAACtC,GAAD,mBAAC,eAC3CA,EAAM0D,QADoC,IAE7CxD,MAAOF,EAAM2D,QAJd,0CAEImB,EAFJ,KAMH/D,QAAQC,IAAI8D,GACRT,GAAiB,EACjBS,EAAiBR,MAAMC,SAAStE,KAChCoE,GAAiB,GATlB,6CAWSS,GAXT,IAW2BT,iBAAgBlE,SAAU0E,KAXrD,6C,sBAcA,SAAeE,EAAtB,sC,4CAAO,WAAmCC,EAAWlB,EAAemB,GAA7D,SAAA1D,EAAA,sDACHwB,IACKC,YACAC,WAAW,SACXiC,IAAIF,GACJG,OAAO,CACJlB,UAAWgB,EAAkBG,IAAWC,YAAYvB,GAAiBsB,IAAWE,WAAWxB,KANhG,4C,sBAUA,SAAeyB,EAAtB,sC,4CAAO,WAA0CC,EAAkBvF,EAAQgF,GAApE,SAAA1D,EAAA,sDACHwB,IACKC,YACAC,WAAW,SACXiC,IAAIM,GACJL,OAAO,CACJM,UAAWR,EAAkBG,IAAWC,YAAYpF,GAAUmF,IAAWE,WAAWrF,KANzF,4C,sBAUA,SAAeyF,EAAtB,0C,4CAAO,WAA4BV,EAAW/E,EAAQuF,EAAkB1B,EAAemB,GAAhF,SAAA1D,EAAA,sEACGwD,EAAoBC,EAAWlB,EAAemB,GADjD,uBAEGM,EAA2BC,EAAkBvF,EAAQgF,GAFxD,4C,sBAcA,SAAeU,EAAtB,kC,4CAAO,WAA2CC,GAA3C,eAAArE,EAAA,sEACkB4C,QAAQC,IACzBwB,EAAQtD,IAAR,uCAAY,WAAOrC,GAAP,mBAAAsB,EAAA,sEACiBgC,EAAgBtD,GADjC,0CACD4F,EADC,KAER9E,QAAQC,IAAI,WAAY6E,GAFhB,kBAGDA,GAHC,2CAAZ,wDAFD,cACGzC,EADH,OAQHrC,QAAQC,IAAI,SAAUoC,GARnB,kBASIA,GATJ,4C,sBAYA,SAAe0C,EAAtB,kC,4CAAO,WAAgCjG,GAAhC,iBAAA0B,EAAA,sEACkBwB,IAASC,YAAYC,WAAW,SAASC,MAAM,WAAY,KAAMrD,GAAUsD,MAD7F,cACGC,EADH,OAEG2C,EAAQ3C,EAAOC,KAAKf,KAAI,SAACmB,GAAD,mBAAC,eACxBA,EAAKC,QADkB,IAE1BxD,MAAOuD,EAAKE,QAEhB5C,QAAQC,IAAI+E,GANT,kBAOIA,GAPJ,4C,sBA2BA,SAAetE,EAAtB,4C,4CAAO,WAA6BvB,EAAOJ,EAAUD,EAAUE,EAAOH,EAAKiB,GAApE,iBAAAU,EAAA,0DACCV,EADD,wBAEKmF,EAAM,IACJC,EAAW,IAAIC,UACZC,OAAO,OAAQtF,EAAU,IAClCoF,EAASE,OAAO,gBAAiBtD,GALlC,SAOOuD,IAAMC,KAAN,0CAA8C1D,EAA9C,iBAAwEsD,GAAUK,MAAK,YAAe,IAAZ5C,EAAW,EAAXA,KAC5FsC,EAAMtC,EAAK6C,WACXxF,QAAQC,IAAI,MAAOgF,MATxB,OAYCjD,IAASC,YAAYC,WAAW,SAASiC,IAAIhF,GAAOiF,OAAO,CACvDrF,WACAD,WACAE,QACAH,MACAI,MAAOgG,IAjBZ,wBAoBCjD,IAASC,YAAYC,WAAW,SAASiC,IAAIhF,GAAOiF,OAAO,CACvDrF,WACAD,WACAE,QACAH,QAxBL,6C,sBA6BA,SAAe4G,EAAtB,sC,4CAAO,WAA6BC,EAAS5F,EAAWZ,GAAjD,iBAAAsB,EAAA,6DACCyE,EAAM,IACJC,EAAW,IAAIC,UACZC,OAAO,OAAQtF,EAAU,IAClCoF,EAASE,OAAO,gBAAiBtD,GAJ9B,SAMGuD,IAAMC,KAAN,0CAA8C1D,EAA9C,iBAAwEsD,GAAUK,MAAK,YAAe,IAAZ5C,EAAW,EAAXA,KAC5FsC,EAAMtC,EAAK6C,WACXxF,QAAQC,IAAI,MAAOgF,MARpB,uBAWGjD,IACDC,YACAC,WAAW,UACXyD,IAAI,CACDD,UACAE,SAAU,GACVC,YAAaC,KAAKC,MAClBC,SAAUf,EACV1B,MAAO,GACPM,QAAS3E,EAAS4G,KAAKC,MACvB7G,SACA+G,aAAc,QACdC,eAAgB,WAvBrB,4C,sJCjMQ,SAASvH,IAAW,IACvB8D,EAAS0D,qBAAWC,KAApB3D,KADsB,EAEMpD,mBAAS,IAFf,mBAEvBgH,EAFuB,KAEXC,EAFW,KAa9B,OATAlG,qBAAU,WAAM,4CACZ,gCAAAI,EAAA,sEAC2BgC,YAAgBC,EAAK8D,KADhD,mCACWlE,EADX,KAEIiE,EAAcjE,GAFlB,4CADY,uBAKZ,OAAII,QAAJ,IAAIA,OAAJ,EAAIA,EAAM8D,MALG,WAAD,wBAMRC,KAEL,CAAC/D,IACG,CAAE7D,SAAUyH,K,gCCjBR,QAA0B,kC,gCCAzC,mHAUe,SAASI,IAEHN,qBAAWC,KAApB3D,KAFqB,IAGrBT,EAAamE,qBAAWO,KAAxB1E,SACF9B,EAAUC,cAMRvB,EAAaD,cAAbC,SAYR,OACI,qBAAKkC,UAAU,yEAAf,SACI,sBAAKA,UAAU,kEAAf,UACI,cAAC,IAAD,CAAM6F,GAAIC,IAAV,SACI,oBAAI9F,UAAU,YAAd,SACI,qBAAK+F,IAAKC,IAAMC,IAAI,gBAG5B,sBAAKjG,UAAU,6BAAf,UACI,qBAAKA,UAAU,OAAf,SACI,cAAC,IAAD,CAAM6F,GAAIC,IAAV,SACI,qBACII,MAAM,6BACNlG,UAAU,0BACVmG,KAAK,OACLC,QAAQ,YACRC,OAAO,eALX,SAOI,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,EAAE,yBAIjF,qBAAKzG,UAAU,OAAf,SACI,cAAC,IAAD,CAAM6F,GAAIC,IAAV,SACI,qBACII,MAAM,6BACNlG,UAAU,0BACVmG,KAAK,OACLC,QAAQ,YACRC,OAAO,eALX,SAOI,sBACIC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,sDAKlB,qBAAKzG,UAAU,OAAf,SACI,cAAC,IAAD,CAAM6F,GAAIC,IAAV,SACI,qBACII,MAAM,6BACNlG,UAAU,0BACVmG,KAAK,OACLC,QAAQ,YACRC,OAAO,eALX,SAOI,sBACIC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,wKAKlB,qBAAKzG,UAAU,8BAAf,SACI,cAAC,IAAD,CAAM6F,GAAE,aAAQ/H,EAASQ,UAAzB,SACI,qBAAKyH,IAAKjI,EAASK,MAAO6B,UAAU,4CAG5C,qBAAKA,UAAU,sBAAsB0G,QAhF/B,WAClBxF,EAASyF,OAAOC,UAChBxH,EAAQW,KAAK+F,MA8ED,SACI,qBACII,MAAM,6BACNlG,UAAU,0BACVmG,KAAK,OACLC,QAAQ,YACRC,OAAO,eALX,SAOI,sBACIC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,4G,gCC3GlC,kCAAO,IAAMlG,EAAa,CAAC,aAAc,aAAc,YAAa,iBAAkB,WAAY","file":"static/js/8.7a196603.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport useUser from '../hooks/useUser';\nimport { categories } from '../lib/categories';\nimport { updateProfile } from '../services/firebase';\nimport { useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\n\nexport default function ProfileEdit() {\n    const {\n        userInfo: { bio, category, fullName, photo, title, userId, docId, username },\n    } = useUser();\n    const [userBio, setUserBio] = useState(bio);\n    const [userCategory, setUserCategory] = useState(category);\n    const [userFullName, setUserFullName] = useState(fullName);\n    const [userTitle, setUserTitle] = useState(title);\n    const [imageFile, setImageFile] = useState(null);\n\n    console.log('imageFile', imageFile);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        if (userId) {\n            setUserBio(bio);\n            setUserCategory(category);\n            setUserFullName(fullName);\n            // setUserPhoto(photo);\n            setUserTitle(title);\n        }\n    }, [userId]);\n\n    const isInvalid =\n        userBio === bio && userCategory === category && userFullName === fullName && userTitle === title && !imageFile;\n\n    const handleProfileUpdate = async (event) => {\n        event.preventDefault();\n        await updateProfile(docId, userFullName, userCategory, userTitle, userBio, imageFile);\n        alert('Your Profile was successfully update!');\n        const timer = setTimeout(() => {\n            history.push(`/p/${username}`);\n        }, 500);\n    };\n\n    return (\n        <div>\n            <Header />\n            <div className=\"cotainer max-w-screen-sm py-20 px-10 mx-auto\">\n                <p className=\"text-xl text-gray-light\">Edit Profile</p>\n                {userId ? (\n                    <form className=\"flex flex-col\" onSubmit={handleProfileUpdate}>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Full Name</p>\n                            <input\n                                placeholder=\"Full Name\"\n                                type=\"text\"\n                                onChange={({ target }) => setUserFullName(target.value)}\n                                value={userFullName}\n                                className=\"bg-gray-light w-full p-1 h-10 text-sm col-span-3\"\n                            />\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Category</p>\n                            <select\n                                className=\"bg-gray-light w-full h-10 text-sm col-span-3 capitalize\"\n                                onChange={({ target }) => setUserCategory(target.value)}\n                                value={userCategory}\n                            >\n                                {categories.sort().map((category, index) => (\n                                    <option key={index} value={category}>\n                                        {category}\n                                    </option>\n                                ))}\n                                <option value=\"others\">Others</option>\n                            </select>\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Title</p>\n                            <input\n                                placeholder=\"Title\"\n                                type=\"text\"\n                                onChange={({ target }) => setUserTitle(target.value)}\n                                value={userTitle}\n                                className=\"bg-gray-light w-full p-1 h-10 text-sm col-span-3\"\n                            />\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Bio</p>\n                            <textarea\n                                placeholder=\"Bio\"\n                                type=\"text\"\n                                onChange={({ target }) => setUserBio(target.value)}\n                                value={userBio}\n                                className=\"bg-gray-light w-full p-1 text-sm col-span-3 h-28\"\n                            />\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Profile Photo</p>\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                className=\"text-gray-light w-full p-1 h-10 text-sm col-span-3\"\n                                onChange={({ target }) => setImageFile(target.files)}\n                            />\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <button\n                                className={`bg-yellow-primary text-gray-dark mt-12 w-full p-1 h-10 rounded  col-start-2 col-end-5 ${\n                                    isInvalid && 'opacity-50'\n                                }`}\n                                type=\"submit\"\n                                disabled={isInvalid}\n                            >\n                                Submit\n                            </button>\n                        </div>\n                    </form>\n                ) : null}\n            </div>\n        </div>\n    );\n}\n","import { firebase, FieldValue } from '../lib/firebase';\nimport Axios from 'axios';\nconst cloudName = `${process.env.REACT_APP_CLOUD_NAME}`;\nconst presets = `${process.env.REACT_APP_PRESETS}`;\n\nexport async function doesUsernameExist(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    console.log(result.docs.length > 0);\n    return result.docs.length > 0;\n}\n\nexport async function getUserByUserId(userId) {\n    const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function getUserByUsername(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function IsUserFollowingProfileUser(username, profileUserId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .where('following', 'array-contains', profileUserId)\n        .get();\n    const [response = {}] = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return response.userId;\n    // if (user.following.includes(profileUserId)) {\n    //     return true;\n    // } else {\n    //     return false;\n    // }\n}\n\nexport async function getFollowingPhotosByUserId(following, userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', 'in', following).get();\n    const userFollowedPhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const userFollowedPhotosWithDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const [userInfo] = await getUserByUserId(photo.userId);\n            const { username } = userInfo;\n            return {\n                username,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return userFollowedPhotosWithDetails;\n}\n\nexport async function getPhotosbyUserId(userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get();\n    const photos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    return photos;\n}\n\nexport async function getLatestPhotoInfo(photoId, userId, profileUsername) {\n    const result = await firebase.firestore().collection('photos').where('photoId', '==', photoId).get();\n    const [photoWithDetails] = await result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    console.log(photoWithDetails);\n    let userLikedPhoto = false;\n    if (photoWithDetails.likes.includes(userId)) {\n        userLikedPhoto = true;\n    }\n    return { ...photoWithDetails, userLikedPhoto, username: profileUsername };\n}\n\nexport async function updateUserFollowing(userDocId, profileUserId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(userDocId)\n        .update({\n            following: isUserFollowing ? FieldValue.arrayRemove(profileUserId) : FieldValue.arrayUnion(profileUserId),\n        });\n}\n\nexport async function updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(profileUserDocId)\n        .update({\n            followers: isUserFollowing ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n        });\n}\n\nexport async function toggleFollow(userDocId, userId, profileUserDocId, profileUserId, isUserFollowing) {\n    await updateUserFollowing(userDocId, profileUserId, isUserFollowing);\n    await updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing);\n}\n\n// export async function updateProfile(docId, fullName, category, title, bio) {\n//     firebase.firestore().collection('users').doc(docId).update({\n//         fullName,\n//         category,\n//         title,\n//         bio,\n//     });\n// }\n\nexport async function getFollowingOrFollowersList(userIds) {\n    const result = await Promise.all(\n        userIds.map(async (userId) => {\n            const [userList] = await getUserByUserId(userId);\n            console.log('userList', userList);\n            return userList;\n        })\n    );\n    console.log('result', result);\n    return result;\n}\n\nexport async function getSearchResults(category) {\n    const result = await firebase.firestore().collection('users').where('category', '==', category).get();\n    const users = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    console.log(users);\n    return users;\n}\n\nexport async function updateProfilePhoto(imageFile) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', presets);\n    formData.append('cloud_name', 'test');\n\n    Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData)\n        // .then((response) => console.log('response', response))\n        .then(({ data }) => {\n            console.log(JSON.stringify(data.secure_url));\n            url = JSON.stringify(data.secure_url);\n            console.log('url', url);\n        });\n    return url;\n}\n\nexport async function updateProfile(docId, fullName, category, title, bio, imageFile) {\n    if (imageFile) {\n        let url = '';\n        const formData = new FormData();\n        formData.append('file', imageFile[0]);\n        formData.append('upload_preset', presets);\n\n        await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n            url = data.secure_url;\n            console.log('url', url);\n        });\n\n        firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n            photo: url,\n        });\n    } else {\n        firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n        });\n    }\n}\n\nexport async function uploadNewPost(caption, imageFile, userId) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', presets);\n\n    await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n        url = data.secure_url;\n        console.log('url', url);\n    });\n\n    await firebase\n        .firestore()\n        .collection('photos')\n        .add({\n            caption,\n            comments: [],\n            dateCreated: Date.now(),\n            imageSrc: url,\n            likes: [],\n            photoId: userId + Date.now(),\n            userId,\n            userLatitude: 34.0522,\n            userLongitude: -188.2437,\n        });\n}\n","import { useContext, useState, useEffect } from 'react';\nimport UserContext from '../context/user';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function useUser() {\n    const { user } = useContext(UserContext);\n    const [activeUser, setActiveUser] = useState({});\n\n    useEffect(() => {\n        async function getUserInfoByUserId() {\n            const [result] = await getUserByUserId(user.uid);\n            setActiveUser(result);\n        }\n        if (user?.uid) {\n            getUserInfoByUserId();\n        }\n    }, [user]);\n    return { userInfo: activeUser };\n}\n","export default __webpack_public_path__ + \"static/media/logo.6dc95425.png\";","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logo from '../images/logo.png';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport UserContext from '../context/user';\nimport FirebaseContext from '../context/firebase';\nimport { getUserByUserId } from '../services/firebase';\nimport useUser from '../hooks/useUser';\n\nexport default function Header() {\n    // const [userInfo, setUserInfo] = useState('');\n    const { user } = useContext(UserContext);\n    const { firebase } = useContext(FirebaseContext);\n    const history = useHistory();\n    const handleSignOut = () => {\n        firebase.auth().signOut();\n        history.push(ROUTES.LOGIN);\n    };\n\n    const { userInfo } = useUser();\n\n    // useEffect(() => {\n    //     const getUserInfo = async () => {\n    //         const [result] = await getUserByUserId(user.uid);\n    //         setUserInfo(result);\n    //     };\n    //     if (user?.uid) {\n    //         getUserInfo();\n    //     }\n    // }, [user]);\n\n    return (\n        <div className=\"bg-gray-dark w-screen h-14 flex justify-center items-center fixed z-50\">\n            <div className=\"max-w-screen-xl w-screen h-14 flex justify-between items-center\">\n                <Link to={ROUTES.DASHBOARD}>\n                    <h1 className=\"h-14 flex\">\n                        <img src={logo} alt=\"artisto\" />\n                    </h1>\n                </Link>\n                <div className=\"flex flex-row items-center\">\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.UPLOAD_IMAGE}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 4v16m8-8H4\" />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.SEARCH}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.MESSAGES}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"flex h-14 items-center pr-4\">\n                        <Link to={`/p/${userInfo.username}`}>\n                            <img src={userInfo.photo} className=\"h-10 w-10 rounded-full object-cover\" />\n                        </Link>\n                    </div>\n                    <div className=\"pr-4 cursor-pointer\" onClick={handleSignOut}>\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-8 w-8 text-gray-light\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                            />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    userInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n    }),\n};\n","export const categories = ['web design', 'video game', 'animation', 'graphic design', 'painting', 'illustration'];\n"],"sourceRoot":""}