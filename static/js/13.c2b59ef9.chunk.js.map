{"version":3,"sources":["pages/SignUp.js","services/firebase.js","images/logo.png","lib/categories.js"],"names":["SignUp","firebase","useContext","FirebaseContext","useState","username","setUsername","email","setEmail","password","setPassword","fullName","setFullName","category","setCategory","error","setError","isInvalid","history","useHistory","useEffect","document","title","handleSignUp","event","a","preventDefault","doesUsernameExist","auth","createUserWithEmailAndPassword","createdUserResult","user","updateProfile","displayName","toLowerCase","firestore","collection","add","userId","uid","bio","followers","following","photo","dateCreated","Date","now","push","ROUTES","message","className","src","logo","alt","onSubmit","placeholder","type","onChange","target","value","hidden","categories","sort","map","index","disabled","to","cloudName","process","presets","where","get","result","console","log","docs","length","getUserByUserId","item","data","docId","id","getUserByUsername","IsUserFollowingProfileUser","profileUserId","response","getFollowingPhotosByUserId","userFollowedPhotos","Promise","all","userLikedPhoto","likes","includes","userInfo","userFollowedPhotosWithDetails","getPhotosbyUserId","photos","getLatestPhotoInfo","photoId","profileUsername","photoWithDetails","updateUserFollowing","userDocId","isUserFollowing","doc","update","FieldValue","arrayRemove","arrayUnion","updateProfileUserFollowers","profileUserDocId","toggleFollow","getFollowingOrFollowersList","userIds","userList","getSearchResults","users","imageFile","url","formData","FormData","append","Axios","post","then","secure_url","uploadNewPost","caption","comments","imageSrc","userLatitude","userLongitude"],"mappings":"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","file":"static/js/13.c2b59ef9.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport FirebaseContext from '../context/firebase';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport logo from '../images/logo.png';\nimport { categories } from '../lib/categories';\nimport { doesUsernameExist } from '../services/firebase';\n\nexport default function SignUp() {\n    const { firebase } = useContext(FirebaseContext);\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [fullName, setFullName] = useState('');\n    const [category, setCategory] = useState('');\n    const [error, setError] = useState('');\n    const isInvalid = password === '' || email === '' || username === '' || fullName === '' || category === '';\n    const history = useHistory();\n\n    useEffect(() => {\n        document.title = 'Sign In - Artisto';\n    }, []);\n\n    const handleSignUp = async (event) => {\n        event.preventDefault();\n        const usernameExist = await doesUsernameExist(username);\n        if (!usernameExist) {\n            try {\n                const createdUserResult = await firebase.auth().createUserWithEmailAndPassword(email, password);\n                await createdUserResult.user.updateProfile({\n                    displayName: username.toLowerCase(),\n                });\n\n                await firebase.firestore().collection('users').add({\n                    userId: createdUserResult.user.uid,\n                    username: username.toLowerCase(),\n                    fullName,\n                    email: email.toLowerCase(),\n                    category: category,\n                    title: '',\n                    bio: '',\n                    followers: [],\n                    following: [],\n                    photo: '',\n                    dateCreated: Date.now(),\n                });\n                history.push(ROUTES.DASHBOARD);\n            } catch (error) {\n                setError(error.message);\n            }\n        } else {\n            setUsername('');\n            setError('That username is already taken, please try another.');\n        }\n    };\n\n    return (\n        <div className=\"flex justify-center container max-w-screen-md items-center h-screen mx-auto\">\n            <div className=\"w-1/2\">\n                <h1 className=\"w-full flex items-center justify-end\">\n                    <img src={logo} alt=\"artisto\" className=\"\" />\n                </h1>\n            </div>\n            <div className=\"w-1/2\">\n                <div className=\"bg-gray-dark rounded\">\n                    <div className=\"p-8\">\n                        {error && <p className=\"text-xs text-red-primary\">{error}</p>}\n                        <form className=\"flex flex-col\" onSubmit={handleSignUp}>\n                            <input\n                                placeholder=\"Username\"\n                                type=\"text\"\n                                onChange={({ target }) => setUsername(target.value)}\n                                value={username}\n                                className=\"bg-gray-light w-full p-1 h-10 text-sm mb-5\"\n                            />\n                            <input\n                                placeholder=\"Full Name\"\n                                type=\"text\"\n                                onChange={({ target }) => setFullName(target.value)}\n                                value={fullName}\n                                className=\"bg-gray-light w-full p-1 h-10 text-sm mb-5\"\n                            />\n                            <select\n                                className=\"bg-gray-light w-full py-1 h-10 text-sm text-gray-dark mb-5\"\n                                onChange={({ target }) => setCategory(target.value)}\n                                value={category}\n                            >\n                                <option hidden value=\"\">\n                                    Category\n                                </option>\n                                {categories.sort().map((category, index) => (\n                                    <option key={index} value={category}>\n                                        {category}\n                                    </option>\n                                ))}\n                                <option value=\"others\">Others</option>\n                            </select>\n                            <input\n                                placeholder=\"Email Address\"\n                                type=\"text\"\n                                onChange={({ target }) => setEmail(target.value)}\n                                value={email}\n                                className=\"bg-gray-light w-full p-1 h-10 text-sm mb-5\"\n                            />\n\n                            <input\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                onChange={({ target }) => setPassword(target.value)}\n                                value={password}\n                                className=\"bg-gray-light w-full p-1 h-10 text-sm\"\n                            />\n                            <button\n                                className={`bg-yellow-primary text-gray-dark mt-12 w-full p-1 h-10 rounded ${\n                                    isInvalid && 'opacity-50'\n                                }`}\n                                type=\"submit\"\n                                disabled={isInvalid}\n                            >\n                                Sign Up\n                            </button>\n                        </form>\n                    </div>\n                    <div className=\"flex flex-col justify-center items-center\">\n                        <p className=\"text-gray-light text-xs mb-12 mt-8\">\n                            You already have an account?{' '}\n                            <Link to={ROUTES.LOGIN} className=\"text-yellow-primary\">\n                                Login\n                            </Link>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { firebase, FieldValue } from '../lib/firebase';\nimport Axios from 'axios';\nconst cloudName = `${process.env.REACT_APP_CLOUD_NAME}`;\nconst presets = `${process.env.REACT_APP_PRESETS}`;\n\nexport async function doesUsernameExist(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    console.log(result.docs.length > 0);\n    return result.docs.length > 0;\n}\n\nexport async function getUserByUserId(userId) {\n    const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function getUserByUsername(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function IsUserFollowingProfileUser(username, profileUserId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .where('following', 'array-contains', profileUserId)\n        .get();\n    const [response = {}] = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return response.userId;\n    // if (user.following.includes(profileUserId)) {\n    //     return true;\n    // } else {\n    //     return false;\n    // }\n}\n\nexport async function getFollowingPhotosByUserId(following, userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', 'in', following).get();\n    const userFollowedPhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const userFollowedPhotosWithDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const [userInfo] = await getUserByUserId(photo.userId);\n            const { username } = userInfo;\n            return {\n                username,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return userFollowedPhotosWithDetails;\n}\n\nexport async function getPhotosbyUserId(userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get();\n    const photos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    return photos;\n}\n\nexport async function getLatestPhotoInfo(photoId, userId, profileUsername) {\n    const result = await firebase.firestore().collection('photos').where('photoId', '==', photoId).get();\n    const [photoWithDetails] = await result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    console.log(photoWithDetails);\n    let userLikedPhoto = false;\n    if (photoWithDetails.likes.includes(userId)) {\n        userLikedPhoto = true;\n    }\n    return { ...photoWithDetails, userLikedPhoto, username: profileUsername };\n}\n\nexport async function updateUserFollowing(userDocId, profileUserId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(userDocId)\n        .update({\n            following: isUserFollowing ? FieldValue.arrayRemove(profileUserId) : FieldValue.arrayUnion(profileUserId),\n        });\n}\n\nexport async function updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(profileUserDocId)\n        .update({\n            followers: isUserFollowing ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n        });\n}\n\nexport async function toggleFollow(userDocId, userId, profileUserDocId, profileUserId, isUserFollowing) {\n    await updateUserFollowing(userDocId, profileUserId, isUserFollowing);\n    await updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing);\n}\n\n// export async function updateProfile(docId, fullName, category, title, bio) {\n//     firebase.firestore().collection('users').doc(docId).update({\n//         fullName,\n//         category,\n//         title,\n//         bio,\n//     });\n// }\n\nexport async function getFollowingOrFollowersList(userIds) {\n    const result = await Promise.all(\n        userIds.map(async (userId) => {\n            const [userList] = await getUserByUserId(userId);\n            console.log('userList', userList);\n            return userList;\n        })\n    );\n    console.log('result', result);\n    return result;\n}\n\nexport async function getSearchResults(category) {\n    const result = await firebase.firestore().collection('users').where('category', '==', category).get();\n    const users = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    console.log(users);\n    return users;\n}\n\nexport async function updateProfilePhoto(imageFile) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', presets);\n    formData.append('cloud_name', 'test');\n\n    Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData)\n        // .then((response) => console.log('response', response))\n        .then(({ data }) => {\n            console.log(JSON.stringify(data.secure_url));\n            url = JSON.stringify(data.secure_url);\n            console.log('url', url);\n        });\n    return url;\n}\n\nexport async function updateProfile(docId, fullName, category, title, bio, imageFile) {\n    if (imageFile) {\n        let url = '';\n        const formData = new FormData();\n        formData.append('file', imageFile[0]);\n        formData.append('upload_preset', presets);\n\n        await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n            url = data.secure_url;\n            console.log('url', url);\n        });\n\n        firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n            photo: url,\n        });\n    } else {\n        firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n        });\n    }\n}\n\nexport async function uploadNewPost(caption, imageFile, userId) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', presets);\n\n    await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n        url = data.secure_url;\n        console.log('url', url);\n    });\n\n    await firebase\n        .firestore()\n        .collection('photos')\n        .add({\n            caption,\n            comments: [],\n            dateCreated: Date.now(),\n            imageSrc: url,\n            likes: [],\n            photoId: userId + Date.now(),\n            userId,\n            userLatitude: 34.0522,\n            userLongitude: -188.2437,\n        });\n}\n","export default __webpack_public_path__ + \"static/media/logo.6dc95425.png\";","export const categories = ['web design', 'video game', 'animation', 'graphic design', 'painting', 'illustration'];\n"],"sourceRoot":""}