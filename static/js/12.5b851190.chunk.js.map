{"version":3,"sources":["pages/UploadImage.js","services/firebase.js","images/logo.png","components/Header.js","hooks/useUser.js"],"names":["UploadImage","useState","image","setImage","imageForUpload","setImageForUpload","caption","setCaption","upload","setUpload","history","useHistory","useEffect","document","title","useUser","userInfo","userId","username","postSubmit","event","a","preventDefault","uploadNewPost","push","isInvalid","className","onSubmit","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","src","htmlFor","type","accept","onChange","target","files","URL","createObjectURL","id","placeholder","value","disabled","cloudName","process","presets","doesUsernameExist","firebase","firestore","collection","where","get","result","docs","length","getUserByUserId","user","map","item","data","docId","getUserByUsername","IsUserFollowingProfileUser","profileUserId","response","getFollowingPhotosByUserId","following","userFollowedPhotos","photo","Promise","all","userLikedPhoto","likes","includes","userFollowedPhotosWithDetails","getProfilePhotosbyUserId","profileId","profileUsername","profilePhotos","profilePhotosWithDetails","updateUserFollowing","userDocId","isUserFollowing","doc","update","FieldValue","arrayRemove","arrayUnion","updateProfileUserFollowers","profileUserDocId","followers","toggleFollow","getFollowingOrFollowersList","userIds","userList","getSearchResults","category","searchKeyword","users","limit","updateProfile","fullName","bio","imageFile","url","options","maxSizeMB","maxWidthOrHeight","imageCompression","compressedFile","formData","FormData","append","Axios","post","then","secure_url","alert","message","add","comments","dateCreated","Date","now","imageSrc","photoId","userLatitude","userLongitude","Header","setUserInfo","useContext","UserContext","uid","FirebaseContext","getUserInfo","to","ROUTES","logo","alt","auth","signOut","activeUser","setActiveUser","getUserInfoByUserId"],"mappings":"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","file":"static/js/12.5b851190.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport { useHistory } from 'react-router-dom';\nimport { uploadNewPost } from '../services/firebase';\nimport useUser from '../hooks/useUser';\n\nexport default function UploadImage() {\n    const [image, setImage] = useState(null);\n    const [imageForUpload, setImageForUpload] = useState(null);\n    const [caption, setCaption] = useState('');\n    const [upload, setUpload] = useState(false);\n    const history = useHistory();\n\n    useEffect(() => {\n        document.title = 'Post - Artisto';\n    }, []);\n\n    const {\n        userInfo: { userId, username },\n    } = useUser();\n\n    const onImageChange = (event) => {\n        setImageForUpload(event.target.files);\n        if (event.target.files && event.target.files[0]) {\n            setImage(URL.createObjectURL(event.target.files[0]));\n        }\n    };\n\n    const postSubmit = async (event) => {\n        event.preventDefault();\n        await uploadNewPost(caption, imageForUpload, userId, setUpload);\n        history.push(`/p/${username}`);\n    };\n\n    const isInvalid = !image || !caption;\n\n    const removeImageSelected = (event) => {\n        event.preventDefault();\n        setImage(null);\n    };\n\n    return (\n        <div>\n            <Header />\n            {upload && (\n                <div className=\"flex absolute top-0 left-0 w-screen h-screen bg-gray-dark opacity-70 z-90 items-center justify-center\">\n                    <p className=\"text-2xl text-gray-light bg-gradient-to-r from-blue-primary via-yellow-primary to-red-primary py-4 px-8 rounded animate-pulse\">\n                        Uploading...\n                    </p>\n                </div>\n            )}\n            <div className=\"container max-w-screen-lg mx-auto px-4 mb-8\">\n                <div className=\"pt-20 flex max-h-screen\">\n                    <form onSubmit={postSubmit} className=\"sm:flex w-full max-w-screen-lg mx-auto\">\n                        <div className=\"sm:w-1/2 pb-4 sm:pb-0 max-h-full\">\n                            <div className=\"border-gray-light border-dotted border-4 flex relative h-60 sm:h-96 max-h-full items-center justify-center rounded-xl\">\n                                {image && (\n                                    <button onClick={removeImageSelected} className=\"absolute top-0 left-0\">\n                                        <svg\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            className=\"h-8 w-8 text-red-primary\"\n                                            fill=\"none\"\n                                            viewBox=\"0 0 24 24\"\n                                            stroke=\"currentColor\"\n                                        >\n                                            <path\n                                                strokeLinecap=\"round\"\n                                                strokeLinejoin=\"round\"\n                                                strokeWidth={2}\n                                                d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\n                                            />\n                                        </svg>\n                                    </button>\n                                )}\n\n                                {image ? (\n                                    <div className=\"flex w-full h-full\">\n                                        <img src={image} className=\"p-4 m-4 mx-auto object-contain\" />\n                                    </div>\n                                ) : (\n                                    <div>\n                                        <label\n                                            htmlFor=\"imageUploader\"\n                                            className=\"cursor-pointer text-gray-light bg-blue-primary p-2 rounded\"\n                                        >\n                                            Choose Image\n                                        </label>\n                                        <input\n                                            type=\"file\"\n                                            accept=\"image/*\"\n                                            onChange={onImageChange}\n                                            className=\"text-gray-light text-center hidden\"\n                                            id=\"imageUploader\"\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"sm:w-1/2 sm:h-96 flex justify-center items-end sm:pl-8 max-h-full \">\n                            <div className=\"w-full\">\n                                <textarea\n                                    placeholder=\"Write a caption...\"\n                                    onChange={({ target }) => setCaption(target.value)}\n                                    value={caption}\n                                    className=\"h-32 p-4 w-full rounded\"\n                                />\n                                <button\n                                    type=\"submit\"\n                                    disabled={isInvalid}\n                                    className={`mt-4 bg-yellow-primary text-gray-dark py-2 px-6 rounded mx-auto sm:mx-0 block ${\n                                        isInvalid && 'opacity-50'\n                                    }`}\n                                >\n                                    Post\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { firebase, FieldValue } from '../lib/firebase';\nimport Axios from 'axios';\nimport imageCompression from 'browser-image-compression';\nconst cloudName = `${process.env.REACT_APP_CLOUD_NAME}`;\nconst presets = `${process.env.REACT_APP_PRESETS}`;\n\nexport async function doesUsernameExist(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    return result.docs.length > 0;\n}\n\nexport async function getUserByUserId(userId) {\n    const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function getUserByUsername(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function IsUserFollowingProfileUser(username, profileUserId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .where('following', 'array-contains', profileUserId)\n        .get();\n    const [response = {}] = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return response.userId;\n}\n\nexport async function getFollowingPhotosByUserId(following, userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', 'in', following).get();\n    const userFollowedPhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const userFollowedPhotosWithDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const [userInfo] = await getUserByUserId(photo.userId);\n            const { username } = userInfo;\n            return {\n                username,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return userFollowedPhotosWithDetails;\n}\n\nexport async function getPhotosbyUserId(userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get();\n    const photos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    return photos;\n}\n\nexport async function getProfilePhotosbyUserId(userId, profileId, profileUsername) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', profileId).get();\n    const profilePhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const profilePhotosWithDetails = await Promise.all(\n        profilePhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            return {\n                username: profileUsername,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return profilePhotosWithDetails;\n}\n\nexport async function updateUserFollowing(userDocId, profileUserId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(userDocId)\n        .update({\n            following: isUserFollowing ? FieldValue.arrayRemove(profileUserId) : FieldValue.arrayUnion(profileUserId),\n        });\n}\n\nexport async function updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(profileUserDocId)\n        .update({\n            followers: isUserFollowing ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n        });\n}\n\nexport async function toggleFollow(userDocId, userId, profileUserDocId, profileUserId, isUserFollowing) {\n    await updateUserFollowing(userDocId, profileUserId, isUserFollowing);\n    await updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing);\n}\n\nexport async function getFollowingOrFollowersList(userIds) {\n    const result = await Promise.all(\n        userIds.map(async (userId) => {\n            const [userList] = await getUserByUserId(userId);\n            return userList;\n        })\n    );\n    return result;\n}\n\nexport async function getSearchResults(category, searchKeyword) {\n    if (searchKeyword) {\n        const result = await firebase.firestore().collection('users').where('category', '==', category).get();\n        const users = result.docs.map((item) => ({\n            ...item.data(),\n            docId: item.id,\n        }));\n        return users;\n    } else {\n        const result = await firebase.firestore().collection('users').limit(10).where('category', '==', category).get();\n        const users = result.docs.map((item) => ({\n            ...item.data(),\n            docId: item.id,\n        }));\n        return users;\n    }\n}\n\nexport async function updateProfile(docId, fullName, category, title, bio, imageFile, setUpload) {\n    setUpload(true);\n\n    if (imageFile) {\n        let url = '';\n        const options = {\n            maxSizeMB: 1,\n            maxWidthOrHeight: 400,\n        };\n\n        try {\n            const compressedFile = await imageCompression(imageFile[0], options);\n            const formData = new FormData();\n            formData.append('file', compressedFile);\n            formData.append('upload_preset', presets);\n\n            await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n                url = data.secure_url;\n            });\n\n            await firebase.firestore().collection('users').doc(docId).update({\n                fullName,\n                category,\n                title,\n                bio,\n                photo: url,\n            });\n\n            setUpload(false);\n        } catch (error) {\n            setUpload(false);\n            alert(error.message);\n        }\n    } else {\n        await firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n        });\n        setUpload(false);\n    }\n}\n\nexport async function uploadNewPost(caption, imageFile, userId, setUpload) {\n    let url = '';\n    const options = {\n        maxWidthOrHeight: 2000,\n    };\n\n    setUpload(true);\n\n    try {\n        const compressedFile = await imageCompression(imageFile[0], options);\n        const formData = new FormData();\n        formData.append('file', compressedFile);\n        formData.append('upload_preset', presets);\n\n        await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n            url = data.secure_url;\n        });\n\n        await firebase\n            .firestore()\n            .collection('photos')\n            .add({\n                caption,\n                comments: [],\n                dateCreated: Date.now(),\n                imageSrc: url,\n                likes: [],\n                photoId: userId + Date.now(),\n                userId,\n                userLatitude: 34.0522,\n                userLongitude: -188.2437,\n            });\n\n        setUpload(false);\n    } catch (error) {\n        setUpload(false);\n        alert(error.message);\n    }\n}\n","export default __webpack_public_path__ + \"static/media/logo.6dc95425.png\";","import React, { useContext, useEffect, useState } from 'react';\nimport logo from '../images/logo.png';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport UserContext from '../context/user';\nimport FirebaseContext from '../context/firebase';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function Header() {\n    const [userInfo, setUserInfo] = useState('');\n    const {\n        user: { uid: userId },\n    } = useContext(UserContext);\n\n    const { firebase } = useContext(FirebaseContext);\n    const history = useHistory();\n    const handleSignOut = () => {\n        firebase.auth().signOut();\n        history.push(ROUTES.LOGIN);\n    };\n\n    useEffect(() => {\n        let result = null;\n        const getUserInfo = async () => {\n            while (!result) {\n                [result] = await getUserByUserId(userId);\n                setUserInfo(result);\n            }\n        };\n        if (userId) {\n            getUserInfo();\n        }\n    }, [userId]);\n\n    return userInfo ? (\n        <div className=\"bg-gray-dark w-screen h-14 flex justify-center items-center fixed z-50 top-0 left-0\">\n            <div className=\"max-w-screen-xl w-full h-14 flex justify-between items-center\">\n                <Link to={ROUTES.DASHBOARD}>\n                    <h1 className=\"flex sm:h-14 sm:w-auto w-28\">\n                        <img src={logo} alt=\"artisto\" className=\"sm:h-full sm:w-auto w-full h-auto\" />\n                    </h1>\n                </Link>\n                <div className=\"flex flex-row items-center\">\n                    <div className=\"pr-2 sm:pr-4\">\n                        <Link to={ROUTES.UPLOAD_IMAGE}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 4v16m8-8H4\" />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-2 sm:pr-4\">\n                        <Link to={ROUTES.SEARCH}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-2 sm:pr-4\">\n                        <Link to={ROUTES.MESSAGES}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"flex h-14 items-center pr-2 sm:pr-4\">\n                        <Link to={`/p/${userInfo?.username}`}>\n                            <img src={userInfo?.photo} className=\"h-5 w-5 sm:h-10 sm:w-10 rounded-full object-cover\" />\n                        </Link>\n                    </div>\n                    <div className=\"pr-2 sm:pr-4 cursor-pointer\" onClick={handleSignOut}>\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-5 w-5 sm:h-8 sm:w-8 text-gray-light\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                            />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    ) : null;\n}\n","import { useContext, useState, useEffect } from 'react';\nimport UserContext from '../context/user';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function useUser() {\n    const { user } = useContext(UserContext);\n    const [activeUser, setActiveUser] = useState({});\n\n    useEffect(() => {\n        async function getUserInfoByUserId() {\n            const [result] = await getUserByUserId(user.uid);\n            setActiveUser(result);\n        }\n        if (user?.uid) {\n            getUserInfoByUserId();\n        }\n    }, [user]);\n    return { userInfo: activeUser };\n}\n"],"sourceRoot":""}