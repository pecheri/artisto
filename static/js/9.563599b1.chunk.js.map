{"version":3,"sources":["pages/ProfileEdit.js","services/firebase.js","hooks/useUser.js","images/logo.png","components/Header.js","lib/categories.js"],"names":["ProfileEdit","useUser","userInfo","bio","category","fullName","title","photo","userId","docId","username","useState","userBio","setUserBio","userCategory","setUserCategory","userFullName","setUserFullName","userTitle","setUserTitle","imageFile","setImageFile","console","log","history","useHistory","useEffect","isInvalid","handleProfileUpdate","event","a","preventDefault","updateProfile","alert","setTimeout","push","className","onSubmit","placeholder","type","onChange","target","value","categories","sort","map","index","accept","files","disabled","doesUsernameExist","firebase","firestore","collection","where","get","result","docs","length","getUserByUserId","user","item","data","id","getUserByUsername","IsUserFollowingProfileUser","profileUserId","response","getFollowingPhotosByUserId","following","userFollowedPhotos","Promise","all","userLikedPhoto","likes","includes","userFollowedPhotosWithDetails","getPhotosbyUserId","photos","updateUserFollowing","userDocId","isUserFollowing","doc","update","FieldValue","arrayRemove","arrayUnion","updateProfileUserFollowers","profileUserDocId","followers","toggleFollow","getFollowingOrFollowersList","userIds","userList","getSearchResults","users","url","formData","FormData","append","Axios","post","then","secure_url","useContext","UserContext","activeUser","setActiveUser","uid","getUserInfoByUserId","Header","FirebaseContext","to","ROUTES","src","logo","alt","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","auth","signOut"],"mappings":"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","file":"static/js/9.563599b1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport useUser from '../hooks/useUser';\nimport { categories } from '../lib/categories';\nimport { updateProfile } from '../services/firebase';\nimport { useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\n\nexport default function ProfileEdit() {\n    const {\n        userInfo: { bio, category, fullName, photo, title, userId, docId, username },\n    } = useUser();\n    const [userBio, setUserBio] = useState(bio);\n    const [userCategory, setUserCategory] = useState(category);\n    const [userFullName, setUserFullName] = useState(fullName);\n    const [userTitle, setUserTitle] = useState(title);\n    const [imageFile, setImageFile] = useState(null);\n\n    console.log('imageFile', imageFile);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        if (userId) {\n            setUserBio(bio);\n            setUserCategory(category);\n            setUserFullName(fullName);\n            // setUserPhoto(photo);\n            setUserTitle(title);\n        }\n    }, [userId]);\n\n    const isInvalid =\n        userBio === bio && userCategory === category && userFullName === fullName && userTitle === title && !imageFile;\n\n    const handleProfileUpdate = async (event) => {\n        event.preventDefault();\n        await updateProfile(docId, userFullName, userCategory, userTitle, userBio, imageFile);\n        alert('Your Profile was successfully update!');\n        const timer = setTimeout(() => {\n            history.push(`/p/${username}`);\n        }, 500);\n    };\n\n    return (\n        <div>\n            <Header />\n            <div className=\"cotainer max-w-screen-sm py-20 px-10 mx-auto\">\n                <p className=\"text-xl text-gray-light\">Edit Profile</p>\n                {userId ? (\n                    <form className=\"flex flex-col\" onSubmit={handleProfileUpdate}>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Full Name</p>\n                            <input\n                                placeholder=\"Full Name\"\n                                type=\"text\"\n                                onChange={({ target }) => setUserFullName(target.value)}\n                                value={userFullName}\n                                className=\"bg-gray-light w-full p-1 h-10 text-sm col-span-3\"\n                            />\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Category</p>\n                            <select\n                                className=\"bg-gray-light w-full h-10 text-sm col-span-3 capitalize\"\n                                onChange={({ target }) => setUserCategory(target.value)}\n                                value={userCategory}\n                            >\n                                {categories.sort().map((category, index) => (\n                                    <option key={index} value={category}>\n                                        {category}\n                                    </option>\n                                ))}\n                                <option value=\"others\">Others</option>\n                            </select>\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Title</p>\n                            <input\n                                placeholder=\"Title\"\n                                type=\"text\"\n                                onChange={({ target }) => setUserTitle(target.value)}\n                                value={userTitle}\n                                className=\"bg-gray-light w-full p-1 h-10 text-sm col-span-3\"\n                            />\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Bio</p>\n                            <textarea\n                                placeholder=\"Bio\"\n                                type=\"text\"\n                                onChange={({ target }) => setUserBio(target.value)}\n                                value={userBio}\n                                className=\"bg-gray-light w-full p-1 text-sm col-span-3 h-28\"\n                            />\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <p className=\"text-gray-light text-sm text-center\">Profile Photo</p>\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                className=\"text-gray-light w-full p-1 h-10 text-sm col-span-3\"\n                                onChange={({ target }) => setImageFile(target.files)}\n                            />\n                        </div>\n                        <div className=\"grid grid-cols-4 mt-8 items-center\">\n                            <button\n                                className={`bg-yellow-primary text-gray-dark mt-12 w-full p-1 h-10 rounded  col-start-2 col-end-5 ${\n                                    isInvalid && 'opacity-50'\n                                }`}\n                                type=\"submit\"\n                                disabled={isInvalid}\n                            >\n                                Submit\n                            </button>\n                        </div>\n                    </form>\n                ) : null}\n            </div>\n        </div>\n    );\n}\n","import { firebase, FieldValue } from '../lib/firebase';\nimport Axios from 'axios';\n\nexport async function doesUsernameExist(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    console.log(result.docs.length > 0);\n    return result.docs.length > 0;\n}\n\nexport async function getUserByUserId(userId) {\n    const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function getUserByUsername(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function IsUserFollowingProfileUser(username, profileUserId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .where('following', 'array-contains', profileUserId)\n        .get();\n    const [response = {}] = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return response.userId;\n    // if (user.following.includes(profileUserId)) {\n    //     return true;\n    // } else {\n    //     return false;\n    // }\n}\n\nexport async function getFollowingPhotosByUserId(following, userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', 'in', following).get();\n    const userFollowedPhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const userFollowedPhotosWithDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const [userInfo] = await getUserByUserId(photo.userId);\n            const { username } = userInfo;\n            return {\n                username,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return userFollowedPhotosWithDetails;\n}\n\nexport async function getPhotosbyUserId(userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get();\n    const photos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    return photos;\n}\n\nexport async function updateUserFollowing(userDocId, profileUserId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(userDocId)\n        .update({\n            following: isUserFollowing ? FieldValue.arrayRemove(profileUserId) : FieldValue.arrayUnion(profileUserId),\n        });\n}\n\nexport async function updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(profileUserDocId)\n        .update({\n            followers: isUserFollowing ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n        });\n}\n\nexport async function toggleFollow(userDocId, userId, profileUserDocId, profileUserId, isUserFollowing) {\n    await updateUserFollowing(userDocId, profileUserId, isUserFollowing);\n    await updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing);\n}\n\n// export async function updateProfile(docId, fullName, category, title, bio) {\n//     firebase.firestore().collection('users').doc(docId).update({\n//         fullName,\n//         category,\n//         title,\n//         bio,\n//     });\n// }\n\nexport async function getFollowingOrFollowersList(userIds) {\n    const result = await Promise.all(\n        userIds.map(async (userId) => {\n            const [userList] = await getUserByUserId(userId);\n            console.log('userList', userList);\n            return userList;\n        })\n    );\n    console.log('result', result);\n    return result;\n}\n\nexport async function getSearchResults(category) {\n    const result = await firebase.firestore().collection('users').where('category', '==', category).get();\n    const users = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    console.log(users);\n    return users;\n}\n\nexport async function updateProfilePhoto(imageFile) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', 's4onxndn');\n    formData.append('cloud_name', 'test');\n\n    Axios.post('https://api.cloudinary.com/v1_1/dvhwserkv/image/upload', formData)\n        // .then((response) => console.log('response', response))\n        .then(({ data }) => {\n            console.log(JSON.stringify(data.secure_url));\n            url = JSON.stringify(data.secure_url);\n            console.log('url', url);\n        });\n    return url;\n}\n\nexport async function updateProfile(docId, fullName, category, title, bio, imageFile) {\n    if (imageFile) {\n        let url = '';\n        const formData = new FormData();\n        formData.append('file', imageFile[0]);\n        formData.append('upload_preset', 's4onxndn');\n        formData.append('cloud_name', 'test');\n\n        await Axios.post('https://api.cloudinary.com/v1_1/dvhwserkv/image/upload', formData)\n            // .then((response) => console.log('response', response))\n            .then(({ data }) => {\n                // console.log(JSON.stringify(data.secure_url));\n                url = data.secure_url;\n                console.log('url', url);\n            });\n\n        firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n            photo: url,\n        });\n    } else {\n        firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n        });\n    }\n}\n// s4onxndn\n","import { useContext, useState, useEffect } from 'react';\nimport UserContext from '../context/user';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function useUser() {\n    const { user } = useContext(UserContext);\n    const [activeUser, setActiveUser] = useState({});\n\n    useEffect(() => {\n        async function getUserInfoByUserId() {\n            const [result] = await getUserByUserId(user.uid);\n            setActiveUser(result);\n        }\n        if (user?.uid) {\n            getUserInfoByUserId();\n        }\n    }, [user]);\n    return { userInfo: activeUser };\n}\n","export default __webpack_public_path__ + \"static/media/logo.6dc95425.png\";","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logo from '../images/logo.png';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport UserContext from '../context/user';\nimport FirebaseContext from '../context/firebase';\nimport { getUserByUserId } from '../services/firebase';\nimport useUser from '../hooks/useUser';\n\nexport default function Header() {\n    // const [userInfo, setUserInfo] = useState('');\n    const { user } = useContext(UserContext);\n    const { firebase } = useContext(FirebaseContext);\n    const history = useHistory();\n    const handleSignOut = () => {\n        firebase.auth().signOut();\n        history.push(ROUTES.LOGIN);\n    };\n\n    const { userInfo } = useUser();\n\n    // useEffect(() => {\n    //     const getUserInfo = async () => {\n    //         const [result] = await getUserByUserId(user.uid);\n    //         setUserInfo(result);\n    //     };\n    //     if (user?.uid) {\n    //         getUserInfo();\n    //     }\n    // }, [user]);\n\n    return (\n        <div className=\"bg-gray-dark w-screen h-14 flex justify-center items-center fixed z-50\">\n            <div className=\"max-w-screen-xl w-screen h-14 flex justify-between items-center\">\n                <Link to={ROUTES.DASHBOARD}>\n                    <h1 className=\"h-14 flex\">\n                        <img src={logo} alt=\"artisto\" />\n                    </h1>\n                </Link>\n                <div className=\"flex flex-row items-center\">\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.SEARCH}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.MESSAGES}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"flex h-14 items-center pr-4\">\n                        <Link to={`/p/${userInfo.username}`}>\n                            <img src={userInfo.photo} className=\"h-10 w-10 rounded-full\" />\n                        </Link>\n                    </div>\n                    <div className=\"pr-4 cursor-pointer\" onClick={handleSignOut}>\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-8 w-8 text-gray-light\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                            />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    userInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n    }),\n};\n","export const categories = ['web design', 'video game', 'animation', 'graphic design', 'painting', 'illustration'];\n"],"sourceRoot":""}