{"version":3,"sources":["components/post/index.js","components/Timeline.js","hooks/usePhotos.js","pages/DashBoard.js","services/firebase.js","hooks/useUser.js","images/logo.png","components/Header.js","components/post/Header.js","components/post/Image.js","components/SideProfile.js","components/post/AddComment.js","components/post/Comments.js","components/post/Action.js"],"names":["Post","photo","className","userId","username","caption","date","dateCreated","Image","imageSrc","Action","likes","userLikedPhoto","comments","docId","Timeline","useContext","UserContext","user","photos","useState","setPhotos","userContext","uid","useEffect","a","getUserByUserId","following","followedUserPhotos","length","getFollowingPhotosByUserId","sort","b","getTimelinePhotos","usePhotos","console","log","map","color","highlightColor","count","width","height","DashBoard","setUserInfo","document","title","result","getUserInfo","Header","SideProfile","doesUsernameExist","firebase","firestore","collection","where","get","docs","item","data","id","getUserByUsername","IsUserFollowingProfileUser","profileUserId","response","userFollowedPhotos","Promise","all","includes","userInfo","userFollowedPhotosWithDetails","getPhotosbyUserId","updateUserFollowing","userDocId","isUserFollowing","doc","update","FieldValue","arrayRemove","arrayUnion","updateProfileUserFollowers","profileUserDocId","followers","toggleFollow","getFollowingOrFollowersList","userIds","userList","getSearchResults","category","users","updateProfile","fullName","bio","imageFile","url","formData","FormData","append","Axios","post","then","secure_url","useUser","activeUser","setActiveUser","getUserInfoByUserId","FirebaseContext","history","useHistory","to","ROUTES","src","logo","alt","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","auth","signOut","push","userPhotoSrc","setUserPhotoSrc","getUserPhotoSrc","formatDistance","Date","circle","AddComment","allComments","setAllComments","comment","setComment","displayName","onSubmit","event","preventDefault","type","placeholder","autoComplete","value","onChange","target","Comments","viewAll","setViewAll","slice","index","likeCount","setLikeCount","isUserLiked","setIsUserLiked","handleLike"],"mappings":"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","file":"static/js/6.ef94f05e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Image from './Image';\nimport Action from './Action';\n\nexport default function Post({ photo }) {\n    return (\n        <div className=\"bg-gray-light py-8 px-16 mb-8\">\n            <Header userId={photo.userId} username={photo.username} caption={photo.caption} date={photo.dateCreated} />\n            <Image imageSrc={photo.imageSrc} />\n            <Action\n                likes={photo.likes}\n                userLikedPhoto={photo.userLikedPhoto}\n                comments={photo.comments}\n                docId={photo.docId}\n            />\n        </div>\n    );\n}\n\nPost.propTypes = {\n    photo: PropTypes.shape({\n        caption: PropTypes.string.isRequired,\n        comments: PropTypes.array.isRequired,\n        dateCreated: PropTypes.number.isRequired,\n        docId: PropTypes.string.isRequired,\n        imageSrc: PropTypes.string.isRequired,\n        likes: PropTypes.array.isRequired,\n        photoId: PropTypes.string.isRequired,\n        userId: PropTypes.string.isRequired,\n        username: PropTypes.string.isRequired,\n        userLikedPhoto: PropTypes.bool.isRequired,\n    }),\n};\n","import React, { useEffect, useState, useContext } from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport useUser from '../hooks/useUser';\nimport { getFollowingPhotosByUserId, getUserByUserId } from '../services/firebase';\nimport UserContext from '../context/user';\nimport Post from './post';\nimport usePhotos from '../hooks/usePhotos';\n\nexport default function Timeline() {\n    const { user } = useContext(UserContext);\n    const { photos } = usePhotos();\n\n    console.log('photos', photos);\n\n    return (\n        <div className=\"col-span-2 container\">\n            {!photos ? (\n                <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n                    <Skeleton count={4} width={640} height={500} />\n                </SkeletonTheme>\n            ) : photos.length > 0 ? (\n                photos.map((photo) => <Post key={photo.docId} photo={photo} />)\n            ) : (\n                <p>Follow artists to see photos!</p>\n            )}\n        </div>\n    );\n}\n","import { useState, useEffect, useContext } from 'react';\nimport userContext from '../context/user';\nimport { getUserByUserId, getFollowingPhotosByUserId } from '../services/firebase';\n\nexport default function usePhotos() {\n    const [photos, setPhotos] = useState(null);\n    const {\n        user: { uid: userId = '' },\n    } = useContext(userContext);\n\n    useEffect(() => {\n        async function getTimelinePhotos() {\n            const [{ following }] = await getUserByUserId(userId);\n            let followedUserPhotos = [];\n\n            // does the user actually follow people?\n            if (following.length > 0) {\n                followedUserPhotos = await getFollowingPhotosByUserId(following, userId);\n            }\n            // re-arrange array to be newest photos first by dateCreated\n            followedUserPhotos.sort((a, b) => b.dateCreated - a.dateCreated);\n            setPhotos(followedUserPhotos);\n        }\n\n        getTimelinePhotos();\n    }, [userId]);\n    return { photos };\n}\n","import React, { useEffect, useState, useContext } from 'react';\nimport UserContext from '../context/user';\nimport Header from '../components/Header';\nimport Timeline from '../components/Timeline';\nimport SideProfile from '../components/SideProfile';\nimport { getUserByUserId } from '../services/firebase';\nimport useUser from '../hooks/useUser';\n\nexport default function DashBoard() {\n    const [userInfo, setUserInfo] = useState({});\n    const { user } = useContext(UserContext);\n    useEffect(() => {\n        document.title = 'Artisto';\n    }, []);\n\n    useEffect(() => {\n        const getUserInfo = async () => {\n            const [result] = await getUserByUserId(user.uid);\n            setUserInfo(result);\n            console.log('result', result);\n        };\n        if (user) {\n            getUserInfo();\n        }\n    }, [user]);\n\n    return (\n        <div className=\"font-body\">\n            <Header />\n            <div className=\"w-sceen flex justify-center pt-24\">\n                <div className=\"grid grid-cols-3 w-full max-w-screen-lg mx-4\">\n                    <Timeline />\n                    <SideProfile />\n                </div>\n            </div>\n        </div>\n    );\n}\n\n{\n    /* <img src=\"https://media.istockphoto.com/vectors/default-profile-picture-avatar-photo-placeholder-vector-illustration-vector-id1223671392?k=6&m=1223671392&s=612x612&w=0&h=NGxdexflb9EyQchqjQP0m6wYucJBYLfu46KCLNMHZYM=\" /> */\n}\n","import { firebase, FieldValue } from '../lib/firebase';\nimport Axios from 'axios';\n\nexport async function doesUsernameExist(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    console.log(result.docs.length > 0);\n    return result.docs.length > 0;\n}\n\nexport async function getUserByUserId(userId) {\n    const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function getUserByUsername(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function IsUserFollowingProfileUser(username, profileUserId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .where('following', 'array-contains', profileUserId)\n        .get();\n    const [response = {}] = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return response.userId;\n    // if (user.following.includes(profileUserId)) {\n    //     return true;\n    // } else {\n    //     return false;\n    // }\n}\n\nexport async function getFollowingPhotosByUserId(following, userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', 'in', following).get();\n    const userFollowedPhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const userFollowedPhotosWithDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const [userInfo] = await getUserByUserId(photo.userId);\n            const { username } = userInfo;\n            return {\n                username,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return userFollowedPhotosWithDetails;\n}\n\nexport async function getPhotosbyUserId(userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get();\n    const photos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    return photos;\n}\n\nexport async function updateUserFollowing(userDocId, profileUserId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(userDocId)\n        .update({\n            following: isUserFollowing ? FieldValue.arrayRemove(profileUserId) : FieldValue.arrayUnion(profileUserId),\n        });\n}\n\nexport async function updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(profileUserDocId)\n        .update({\n            followers: isUserFollowing ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n        });\n}\n\nexport async function toggleFollow(userDocId, userId, profileUserDocId, profileUserId, isUserFollowing) {\n    await updateUserFollowing(userDocId, profileUserId, isUserFollowing);\n    await updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing);\n}\n\n// export async function updateProfile(docId, fullName, category, title, bio) {\n//     firebase.firestore().collection('users').doc(docId).update({\n//         fullName,\n//         category,\n//         title,\n//         bio,\n//     });\n// }\n\nexport async function getFollowingOrFollowersList(userIds) {\n    const result = await Promise.all(\n        userIds.map(async (userId) => {\n            const [userList] = await getUserByUserId(userId);\n            console.log('userList', userList);\n            return userList;\n        })\n    );\n    console.log('result', result);\n    return result;\n}\n\nexport async function getSearchResults(category) {\n    const result = await firebase.firestore().collection('users').where('category', '==', category).get();\n    const users = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    console.log(users);\n    return users;\n}\n\nexport async function updateProfilePhoto(imageFile) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', 's4onxndn');\n    formData.append('cloud_name', 'test');\n\n    Axios.post('https://api.cloudinary.com/v1_1/dvhwserkv/image/upload', formData)\n        // .then((response) => console.log('response', response))\n        .then(({ data }) => {\n            console.log(JSON.stringify(data.secure_url));\n            url = JSON.stringify(data.secure_url);\n            console.log('url', url);\n        });\n    return url;\n}\n\nexport async function updateProfile(docId, fullName, category, title, bio, imageFile) {\n    if (imageFile) {\n        let url = '';\n        const formData = new FormData();\n        formData.append('file', imageFile[0]);\n        formData.append('upload_preset', 's4onxndn');\n        formData.append('cloud_name', 'test');\n\n        await Axios.post('https://api.cloudinary.com/v1_1/dvhwserkv/image/upload', formData)\n            // .then((response) => console.log('response', response))\n            .then(({ data }) => {\n                // console.log(JSON.stringify(data.secure_url));\n                url = data.secure_url;\n                console.log('url', url);\n            });\n\n        firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n            photo: url,\n        });\n    } else {\n        firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n        });\n    }\n}\n// s4onxndn\n","import { useContext, useState, useEffect } from 'react';\nimport UserContext from '../context/user';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function useUser() {\n    const { user } = useContext(UserContext);\n    const [activeUser, setActiveUser] = useState({});\n\n    useEffect(() => {\n        async function getUserInfoByUserId() {\n            const [result] = await getUserByUserId(user.uid);\n            setActiveUser(result);\n        }\n        if (user?.uid) {\n            getUserInfoByUserId();\n        }\n    }, [user]);\n    return { userInfo: activeUser };\n}\n","export default __webpack_public_path__ + \"static/media/logo.6dc95425.png\";","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logo from '../images/logo.png';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport UserContext from '../context/user';\nimport FirebaseContext from '../context/firebase';\nimport { getUserByUserId } from '../services/firebase';\nimport useUser from '../hooks/useUser';\n\nexport default function Header() {\n    // const [userInfo, setUserInfo] = useState('');\n    const { user } = useContext(UserContext);\n    const { firebase } = useContext(FirebaseContext);\n    const history = useHistory();\n    const handleSignOut = () => {\n        firebase.auth().signOut();\n        history.push(ROUTES.LOGIN);\n    };\n\n    const { userInfo } = useUser();\n\n    // useEffect(() => {\n    //     const getUserInfo = async () => {\n    //         const [result] = await getUserByUserId(user.uid);\n    //         setUserInfo(result);\n    //     };\n    //     if (user?.uid) {\n    //         getUserInfo();\n    //     }\n    // }, [user]);\n\n    return (\n        <div className=\"bg-gray-dark w-screen h-14 flex justify-center items-center fixed z-50\">\n            <div className=\"max-w-screen-xl w-screen h-14 flex justify-between items-center\">\n                <Link to={ROUTES.DASHBOARD}>\n                    <h1 className=\"h-14 flex\">\n                        <img src={logo} alt=\"artisto\" />\n                    </h1>\n                </Link>\n                <div className=\"flex flex-row items-center\">\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.SEARCH}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.MESSAGES}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"flex h-14 items-center pr-4\">\n                        <Link to={`/p/${userInfo.username}`}>\n                            <img src={userInfo.photo} className=\"h-10 w-10 rounded-full\" />\n                        </Link>\n                    </div>\n                    <div className=\"pr-4 cursor-pointer\" onClick={handleSignOut}>\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-8 w-8 text-gray-light\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                            />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    userInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n    }),\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { formatDistance } from 'date-fns';\nimport { getUserByUserId } from '../../services/firebase';\n\nexport default function Header({ username, userId, caption, date }) {\n    const [userPhotoSrc, setUserPhotoSrc] = useState(null);\n    useEffect(() => {\n        const getUserPhotoSrc = async () => {\n            const [result] = await getUserByUserId(userId);\n            const { photo } = result;\n            setUserPhotoSrc(photo);\n        };\n        if (userId) {\n            getUserPhotoSrc();\n        }\n    }, [userId]);\n\n    return (\n        <div className=\"\">\n            <div className=\"flex\">\n                <Link to={`/p/${username}`}>\n                    <img src={userPhotoSrc} alt={`${username} profile photo`} className=\"w-12 h-12 rounded-full mr-4\" />\n                </Link>\n                <div>\n                    <Link to={`/p/${username}`}>\n                        <p className=\"font-bold text-gray-dark\">{username}</p>\n                    </Link>\n                    <p className=\"text-gray-dark break-words\">{caption}</p>\n                </div>\n            </div>\n            <p className=\"text-gray-primary text-xs pt-2 text-right\">{formatDistance(date, new Date())} ago</p>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    username: PropTypes.string.isRequired,\n    userId: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n    date: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Image({ imageSrc }) {\n    return (\n        <div className=\"flex w-full justify-center pt-2 pb-2\">\n            <img src={imageSrc} className=\"w-full\" />\n        </div>\n    );\n}\n\nImage.propTypes = {\n    imageSrc: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport UserContext from '../context/user';\nimport { getUserByUserId } from '../services/firebase';\nimport { Link } from 'react-router-dom';\nimport useUser from '../hooks/useUser';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nexport default function SideProfile() {\n    // const [userInfo, setUserInfo] = useState({});\n    // const { user } = useContext(UserContext);\n    // useEffect(() => {\n    //     document.title = 'Artisto';\n    // }, []);\n\n    // useEffect(() => {\n    //     const getUserInfo = async () => {\n    //         const [result] = await getUserByUserId(user.uid);\n    //         setUserInfo(result);\n    //         console.log('result', result);\n    //     };\n    //     if (user) {\n    //         getUserInfo();\n    //     }\n    // }, [user]);\n\n    const { userInfo } = useUser();\n\n    return (\n        <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n            <div className=\"flex pt-4 justify-center\">\n                <div className=\"mx-auto justify-center flex-col w-full sticky top-0 max-h-screen pt-20\">\n                    <div className=\"flex justify-center\">\n                        <Link to={`/p/${userInfo.username}`}>\n                            {!userInfo.photo ? (\n                                <Skeleton width={144} height={144} circle={true} />\n                            ) : (\n                                <img src={userInfo.photo} className=\"w-36 rounded-full\" />\n                            )}\n                        </Link>\n                    </div>\n                    {!userInfo.fullName ? (\n                        <div className=\"flex justify-center flex-col items-center mt-4\">\n                            <Skeleton width={180} height={200} />\n                        </div>\n                    ) : (\n                        <>\n                            <div className=\"flex justify-center flex-col items-center\">\n                                <p className=\"font-bold mt-4 text-gray-light\">{userInfo.fullName}</p>\n                                <p className=\"text-sm text-gray-light\">\n                                    <span className=\"text-xs\">ID: </span>\n                                    {userInfo.username}\n                                </p>\n                                <p className=\"text-sm mt-4 text-gray-light\">{userInfo.title}</p>\n                                <p className=\"mt-2 text-sm text-gray-light\">\n                                    <span className=\"text-xs \">Category: </span>\n                                    {userInfo.category}\n                                </p>\n                            </div>\n                            <div className=\"mt-2 px-20\">\n                                <p className=\"text-sm text-gray-light\">Bio:</p>\n                                <p className=\"text-xs w-full break-words text-gray-light\">{userInfo.bio}</p>\n                            </div>\n                        </>\n                    )}\n                </div>\n            </div>\n        </SkeletonTheme>\n    );\n}\n\nSideProfile.propTypes = {\n    userInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n        bio: PropTypes.string,\n    }),\n};\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport UserContext from '../../context/user';\nimport FirebaseContext from '../../context/firebase';\n\nexport default function AddComment({ allComments, setAllComments, docId }) {\n    const [comment, setComment] = useState('');\n    const {\n        user: { displayName, uid: userId },\n    } = useContext(UserContext);\n    const { firebase, FieldValue } = useContext(FirebaseContext);\n\n    const handleSubmit = (event) => {\n        event.preventDefault(event);\n        setAllComments([{ comment, userId, displayName }, ...allComments]);\n        setComment('');\n        return firebase\n            .firestore()\n            .collection('photos')\n            .doc(docId)\n            .update({\n                comments: FieldValue.arrayUnion({ comment, userId, displayName }),\n            });\n    };\n    return (\n        <div className=\"mt-2\">\n            <form className=\"flex\" onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    placeholder=\"add a comment...\"\n                    autoComplete=\"off\"\n                    className=\"text-sm w-full p-2 rounded-l\"\n                    value={comment}\n                    onChange={({ target }) => setComment(target.value)}\n                />\n                <button\n                    type=\"submit\"\n                    className={`p-2 bg-blue-primary text-gray-light rounded-r ${comment.length < 1 && 'opacity-50'}`}\n                >\n                    SEND\n                </button>\n            </form>\n        </div>\n    );\n}\n\nAddComment.propTypes = {\n    allComments: PropTypes.array,\n    setAllComments: PropTypes.func.isRequired,\n    docId: PropTypes.string.isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AddComment from './AddComment';\nimport UserContext from '../../context/user';\n\nexport default function Comments({ allComments, setAllComments, docId }) {\n    const [viewAll, setViewAll] = useState(false);\n    const { user } = useContext(UserContext);\n\n    // const handleViewAllComments = () => {\n    //     setViewAll(true);\n    // };\n    return (\n        <div className=\"pt-2\">\n            <div>\n                {allComments.slice(0, 3).map((comment, index) => (\n                    <p className=\"text-sm text-gray-dark break-words\" key={index}>\n                        <Link to={`/p/${user.displayName}`}>\n                            <span className=\"font-bold\">{comment.displayName} </span>\n                        </Link>\n                        {'   '}\n                        {comment.comment}\n                    </p>\n                ))}\n            </div>\n            {allComments.length > 3 && !viewAll ? (\n                <p\n                    className=\"text-xs text-gray-primary opacity-70 pt-2 cursor-pointer\"\n                    onClick={() => setViewAll(true)}\n                >\n                    View All Comments\n                </p>\n            ) : viewAll ? (\n                allComments.slice(3).map((comment, index) => (\n                    <p className=\"text-sm text-gray-dark break-words\" key={index}>\n                        <Link to={`/p/${user.displayName}`}>\n                            <span className=\"font-bold\">{comment.displayName} </span>\n                        </Link>\n                        {'   '}\n                        {comment.comment}\n                    </p>\n                ))\n            ) : null}\n            <AddComment allComments={allComments} setAllComments={setAllComments} docId={docId} />\n        </div>\n    );\n}\n\nComments.propTypes = {\n    allComments: PropTypes.array.isRequired,\n    setAllComments: PropTypes.func.isRequired,\n    docId: PropTypes.string.isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Comments from './Comments';\nimport UserContext from '../../context/user';\nimport FirebaseContext from '../../context/firebase';\n\nexport default function Action({ likes, userLikedPhoto, comments, docId }) {\n    const [likeCount, setLikeCount] = useState(likes.length);\n    const [allComments, setAllComments] = useState(comments);\n    const [isUserLiked, setIsUserLiked] = useState(userLikedPhoto);\n\n    const {\n        user: { uid: userId = '' },\n    } = useContext(UserContext);\n    const { firebase, FieldValue } = useContext(FirebaseContext);\n\n    const handleLike = async () => {\n        setIsUserLiked(!isUserLiked);\n        await firebase\n            .firestore()\n            .collection('photos')\n            .doc(docId)\n            .update({\n                likes: isUserLiked ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n            });\n        setLikeCount((likeCount) => (isUserLiked ? likeCount - 1 : likeCount + 1));\n    };\n\n    return (\n        <div className=\"\">\n            <div className=\"flex\">\n                <div className=\"flex items-end\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className={`h-8 w-8 text-gray-dark cursor-pointer ${isUserLiked && 'fill-red'} `}\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                        onClick={handleLike}\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n                        />\n                    </svg>\n                    <p className=\"text-sm text-gray-dark\">{likeCount}</p>\n                </div>\n                <div className=\"flex items-end pl-4\">\n                    <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        className=\"h-8 w-8 text-gray-dark cursor-pointer\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                        stroke=\"currentColor\"\n                    >\n                        <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                        />\n                    </svg>\n                    <p className=\"text-sm text-gray-dark\">{allComments.length}</p>\n                </div>\n            </div>\n            <Comments setAllComments={setAllComments} allComments={allComments} docId={docId} />\n        </div>\n    );\n}\n\nAction.propTypes = {\n    likes: PropTypes.array.isRequired,\n    comments: PropTypes.array.isRequired,\n    userLikedPhoto: PropTypes.bool.isRequired,\n    docId: PropTypes.string.isRequired,\n};\n"],"sourceRoot":""}