{"version":3,"sources":["components/profile/FollowingFollowersUser.js","components/profile/FollowingFollwersList.js","components/profile/ProfileHeader.js","components/profile/ImageDetails.js","components/profile/Image.js","components/profile/Images.js","components/profile/index.js","pages/Profile.js"],"names":["FollowingFollowersUser","username","fullName","photo","setFollowingOrFollowers","className","to","onClick","src","FollowingFollwersList","following","followers","followingOrFollowers","useState","list","setList","useEffect","getFollowingList","a","getFollowingOrFollowersList","result","getFollowersList","console","log","map","item","index","count","ProfileHeader","profileUserInfo","photoCounts","photos","useUser","userInfo","docId","userId","isUserFollowing","setIsUserFollowing","length","followersCount","setFollowersCount","history","useHistory","IsUserFollowingProfileUser","checkIfUsersFollowing","toggleUserFollow","prevState","toggleFollow","e","target","currentTarget","closeFollowingFollowersList","alt","push","category","title","bio","ImageDetails","profileUsername","photoWithDetails","setPhotoWithDetails","getLatestPhotoInfo","photoId","latestPhotoInfo","caption","date","dateCreated","Image","imageSrc","Action","likes","userLikedPhoto","comments","color","highlightColor","width","height","isImageClicked","setIsImageClicked","screenToggle","style","aspectRatio","closeImage","Images","UserProfile","setPhotos","setPhotoCounts","getProfileUserPhotos","getPhotosbyUserId","Profile","useParams","setProfileUserInfo","getUserByUsername","ROUTES","getProfileUserInfo","Header"],"mappings":"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","file":"static/js/15.9cbd3080.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function FollowingFollowersUser({ username, fullName, photo, setFollowingOrFollowers }) {\n    return (\n        <div className=\"p-2 flex mx-auto items-center\">\n            <Link to={`/p/${username}`} onClick={() => setFollowingOrFollowers()}>\n                <div>\n                    <img src={photo} className=\"h-10 w-10 rounded-full object-cover\" />\n                </div>\n            </Link>\n            <div className=\"pl-4\">\n                <Link to={`/p/${username}`} onClick={() => setFollowingOrFollowers()}>\n                    <p className=\"font-bold\">{fullName}</p>\n                </Link>\n                <p className=\"text-sm\">\n                    <span className=\"text-xs\">ID: </span>\n                    {username}\n                </p>\n            </div>\n        </div>\n    );\n}\n\nFollowingFollowersUser.propTypes = {\n    username: PropTypes.string.isRequired,\n    fullName: PropTypes.string.isRequired,\n    photo: PropTypes.string.isRequired,\n    setFollowingOrFollowers: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFollowingOrFollowersList } from '../../services/firebase';\nimport FollowingFollowersUser from './FollowingFollowersUser';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nexport default function FollowingFollwersList({ following, followers, followingOrFollowers, setFollowingOrFollowers }) {\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n        const getFollowingList = async () => {\n            const result = await getFollowingOrFollowersList(following);\n            setList(result);\n        };\n        const getFollowersList = async () => {\n            const result = await getFollowingOrFollowersList(followers);\n            setList(result);\n        };\n        if (followingOrFollowers === 'following') {\n            getFollowingList();\n        }\n        if (followingOrFollowers === 'followers') {\n            getFollowersList();\n        }\n    }, [followingOrFollowers]);\n    console.log('list', list);\n    return (\n        <div className=\"bg-gray-light h-3/4 max-w-sm w-96 rounded text-gray-dark p-8\">\n            {list ? (\n                list.map((item, index) => (\n                    <FollowingFollowersUser\n                        key={index}\n                        username={item.username}\n                        fullName={item.fullName}\n                        photo={item.photo}\n                        setFollowingOrFollowers={setFollowingOrFollowers}\n                    />\n                ))\n            ) : (\n                <Skeleton count={4} className=\"w-full pb-4 h-1/4\" />\n            )}\n        </div>\n    );\n}\n\nFollowingFollwersList.propTypes = {\n    // profileUserInfo: PropTypes.shape({\n    //     dateCreated: PropTypes.number,\n    //     email: PropTypes.string,\n    //     followers: PropTypes.array,\n    //     following: PropTypes.array,\n    //     fullName: PropTypes.string,\n    //     userId: PropTypes.string,\n    //     username: PropTypes.string,\n    //     category: PropTypes.string,\n    //     photo: PropTypes.string,\n    //     title: PropTypes.string,\n    //     bio: PropTypes.string,\n    //     docId: PropTypes.string,\n    // }),\n    followingOrFollowers: PropTypes.string,\n    following: PropTypes.array,\n    followers: PropTypes.array,\n    setFollowingOrFollowers: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useUser from '../../hooks/useUser';\nimport { IsUserFollowingProfileUser } from '../../services/firebase';\nimport { toggleFollow } from '../../services/firebase';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport FollowingFollwersList from './FollowingFollwersList';\n\nexport default function ProfileHeader({ profileUserInfo, photos, photoCounts }) {\n    const {\n        userInfo: { username, docId, userId },\n    } = useUser();\n\n    const [isUserFollowing, setIsUserFollowing] = useState(null);\n    const [followersCount, setFollowersCount] = useState(profileUserInfo.followers.length);\n    const [followingOrFollowers, setFollowingOrFollowers] = useState(null);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        const checkIfUsersFollowing = async () => {\n            const result = await IsUserFollowingProfileUser(username, profileUserInfo.userId);\n            setIsUserFollowing(!!result);\n        };\n        if (profileUserInfo && username) {\n            checkIfUsersFollowing();\n        }\n    }, [profileUserInfo, username]);\n\n    const toggleUserFollow = async () => {\n        setIsUserFollowing((prevState) => !prevState);\n        isUserFollowing\n            ? setFollowersCount((prevState) => prevState - 1)\n            : setFollowersCount((prevState) => prevState + 1);\n\n        await toggleFollow(docId, userId, profileUserInfo.docId, profileUserInfo.userId, isUserFollowing);\n    };\n\n    const closeFollowingFollowersList = (e) => {\n        if (e.target === e.currentTarget) {\n            setFollowingOrFollowers(null);\n        }\n    };\n\n    return (\n        <div className=\"pt-24 text-gray-light\">\n            {followingOrFollowers && (\n                <div\n                    onClick={(e) => {\n                        closeFollowingFollowersList(e);\n                    }}\n                    className=\"flex justify-center w-screen h-screen pt-20 bg-gray-primary bg-opacity-50 absolute top-0 left-0 z-90\"\n                >\n                    <div className=\"\">\n                        <FollowingFollwersList\n                            following={profileUserInfo.following}\n                            followers={profileUserInfo.followers}\n                            followingOrFollowers={followingOrFollowers}\n                            setFollowingOrFollowers={setFollowingOrFollowers}\n                        />\n                    </div>\n                </div>\n            )}\n            <div className=\"flex items-center \">\n                <div className=\"pr-4\">\n                    <img\n                        src={profileUserInfo.photo}\n                        alt={`${profileUserInfo.username} profile photo`}\n                        className=\"w-36 h-36 rounded-full object-cover\"\n                    />\n                </div>\n\n                <div className=\"w-1/2\">\n                    <div className=\"flex items-center\">\n                        <div>\n                            <p className=\"text-lg font-bold\">{profileUserInfo.fullName}</p>\n                            <p>\n                                <span className=\"text-sm\">ID: </span>\n                                {profileUserInfo.username}\n                            </p>\n                        </div>\n                        <div className=\"ml-10\">\n                            {profileUserInfo.username === username ? (\n                                <button\n                                    className=\"text-xs bg-gray-dark text-gray-light p-2 rounded\"\n                                    onClick={() => history.push(`/edit/${username}`)}\n                                >\n                                    Edit Profile\n                                </button>\n                            ) : null}\n                        </div>\n                    </div>\n\n                    <p className=\"\">\n                        <span className=\"text-sm\">Category: </span>\n                        {profileUserInfo.category}\n                    </p>\n                    <div className=\"flex mt-4\">\n                        <p>\n                            {photoCounts} <span className=\"text-sm\">{photoCounts === 1 ? 'post' : 'posts'}</span>\n                        </p>\n                        <p\n                            className=\"px-4 cursor-pointer\"\n                            onClick={() => setFollowingOrFollowers(profileUserInfo.followers.length > 0 && 'followers')}\n                        >\n                            {followersCount}{' '}\n                            <span className=\"text-sm\">\n                                {profileUserInfo.followers.length === 1 ? 'follower' : 'followers'}\n                            </span>\n                        </p>\n                        <p\n                            className=\"cursor-pointer\"\n                            onClick={() => setFollowingOrFollowers(profileUserInfo.following.length > 0 && 'following')}\n                        >\n                            {profileUserInfo.following.length} <span className=\"text-sm\">following</span>\n                        </p>\n                    </div>\n                </div>\n                <div>\n                    {profileUserInfo.username === username || isUserFollowing === null ? null : (\n                        <button\n                            onClick={toggleUserFollow}\n                            className={`rounded text-gray-light bg-red-primary text-sm py-2 px-6 ${\n                                isUserFollowing ? 'bg-red-primary' : 'bg-blue-primary'\n                            }`}\n                        >\n                            {isUserFollowing ? 'Unfollow' : 'Follow'}\n                        </button>\n                    )}\n                </div>\n            </div>\n            <div className=\"pt-2 max-w-2xl\">\n                <p className=\"\">{profileUserInfo.title}</p>\n                <p className=\"text-sm\">Bio:</p>\n                <p className=\"break-words text-sm\">{profileUserInfo.bio}</p>\n            </div>\n        </div>\n    );\n}\n\nProfileHeader.propTypes = {\n    profileUserInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n        bio: PropTypes.string,\n        docId: PropTypes.string,\n    }),\n    photos: PropTypes.array,\n    photoCounts: PropTypes.number,\n};\n\n{\n    /* <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n            <Skeleton count={1} width={480} height={200} className=\"mt-20\" />\n        </SkeletonTheme> */\n}\n","import React, { useState, useEffect } from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport PropTypes from 'prop-types';\nimport Header from '../post/Header';\nimport Image from '../post/Image';\nimport Action from '../post/Action';\nimport useUser from '../../hooks/useUser';\nimport { getLatestPhotoInfo } from '../../services/firebase';\n\nexport default function ImageDetails({ photo, profileUsername }) {\n    const [photoWithDetails, setPhotoWithDetails] = useState(null);\n\n    const {\n        userInfo: { userId },\n    } = useUser();\n\n    useEffect(() => {\n        const latestPhotoInfo = async () => {\n            const result = await getLatestPhotoInfo(photo.photoId, userId, profileUsername);\n            setPhotoWithDetails(result);\n        };\n        if (userId && photo) {\n            latestPhotoInfo();\n        }\n    }, [userId, photo]);\n    console.log('photo', photo);\n    console.log('photoWithDetails', photoWithDetails);\n\n    return photoWithDetails?.username ? (\n        <div className=\"bg-gray-light py-8 px-16 mb-8\">\n            <Header\n                userId={photoWithDetails.userId}\n                username={photoWithDetails.username}\n                caption={photoWithDetails.caption}\n                date={photoWithDetails.dateCreated}\n            />\n            <Image imageSrc={photoWithDetails.imageSrc} />\n            <Action\n                likes={photoWithDetails.likes}\n                userLikedPhoto={photoWithDetails.userLikedPhoto}\n                comments={photoWithDetails.comments}\n                docId={photoWithDetails.docId}\n            />\n        </div>\n    ) : (\n        <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n            <Skeleton count={1} width={600} height={600} />\n        </SkeletonTheme>\n    );\n}\n\nImageDetails.propTypes = {\n    photo: PropTypes.shape({\n        // caption: PropTypes.string.isRequired,\n        // comments: PropTypes.array.isRequired,\n        // dateCreated: PropTypes.number.isRequired,\n        // docId: PropTypes.string.isRequired,\n        // imageSrc: PropTypes.string.isRequired,\n        // likes: PropTypes.array.isRequired,\n        photoId: PropTypes.string.isRequired,\n        // userId: PropTypes.string.isRequired,\n    }),\n    profileUsername: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageDetails from './ImageDetails';\nimport useUser from '../../hooks/useUser';\n\nexport default function Image({ photo, profileUserInfo }) {\n    const [isImageClicked, setIsImageClicked] = useState(false);\n    // const [photoWithInfo, setPhotoWithInfo] = useState(null);\n\n    // const {\n    //     userInfo: { userId },\n    // } = useUser();\n\n    const screenToggle = () => {\n        setIsImageClicked((prevState) => !prevState);\n    };\n\n    const closeImage = (e) => {\n        if (e.target === e.currentTarget) {\n            screenToggle();\n        }\n    };\n\n    // useEffect(() => {\n    //     const getPhotoWithDetails = () => {\n    //         let userLikedPhoto = false;\n    //         if (photo.likes.includes(userId)) {\n    //             userLikedPhoto = true;\n    //         }\n    //         setPhotoWithInfo({ ...photo, userLikedPhoto, username: profileUserInfo.username });\n    //     };\n    //     if (photo && userId) {\n    //         getPhotoWithDetails();\n    //     }\n    // }, [photo, userId]);\n\n    return photo ? (\n        <>\n            <img\n                src={photo.imageSrc}\n                alt={photo.caption}\n                className=\"object-cover cursor-pointer\"\n                style={{ width: '100%', aspectRatio: '1' }}\n                onClick={screenToggle}\n            />\n            {isImageClicked && (\n                <div\n                    onClick={(e) => {\n                        closeImage(e);\n                    }}\n                    className=\"flex justify-center w-screen pt-20 bg-gray-primary bg-opacity-50 absolute top-0 left-0 z-90\"\n                >\n                    <div className=\"w-full max-w-screen-sm pb-8\">\n                        <ImageDetails photo={photo} profileUsername={profileUserInfo.username} />\n                    </div>\n                </div>\n            )}\n        </>\n    ) : null;\n}\n\nImage.propTypes = {\n    photo: PropTypes.shape({\n        imageSrc: PropTypes.string,\n        caption: PropTypes.string,\n        likes: PropTypes.array,\n        userId: PropTypes.string,\n    }),\n    profileUserInfo: PropTypes.shape({\n        username: PropTypes.string,\n    }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from './Image';\n\nexport default function Images({ profileUserInfo, photos }) {\n    return (\n        <div className=\"border-t-2 border-gray-dark my-8 pt-8\">\n            <div className=\"grid grid-cols-3 gap-8 items-center\">\n                {photos.map((photo, index) => (\n                    <Image key={index} photo={photo} profileUserInfo={profileUserInfo} />\n                ))}\n            </div>\n        </div>\n    );\n}\nImages.propTypes = {\n    profileUserInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n        bio: PropTypes.string,\n    }),\n    photos: PropTypes.array,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ProfileHeader from './ProfileHeader';\nimport Images from './Images';\nimport { getPhotosbyUserId } from '../../services/firebase';\n\nexport default function UserProfile({ profileUserInfo }) {\n    const [photos, setPhotos] = useState(null);\n    const [photoCounts, setPhotoCounts] = useState(0);\n\n    useEffect(() => {\n        const getProfileUserPhotos = async () => {\n            const result = await getPhotosbyUserId(profileUserInfo.userId);\n            setPhotos(result);\n            setPhotoCounts(result.length);\n        };\n        if (profileUserInfo?.userId) {\n            getProfileUserPhotos();\n        }\n    }, [profileUserInfo?.userId]);\n\n    return (\n        <div className=\"max-w-screen-lg container mx-auto px-4\">\n            <ProfileHeader profileUserInfo={profileUserInfo} photos={photos} photoCounts={photoCounts} />\n            {photos ? (\n                <Images profileUserInfo={profileUserInfo} photos={photos} />\n            ) : (\n                <div className=\"mt-8 border-t-2 border-gray-dark\">\n                    <p className=\"text-gray-light text-center pt-8\">No Photos</p>\n                </div>\n            )}\n        </div>\n    );\n}\n\nUserProfile.propTypes = {\n    profileUserInfo: PropTypes.object,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { getUserByUsername } from '../services/firebase';\nimport { useHistory } from 'react-router-dom';\nimport UserProfile from '../components/profile/';\nimport * as ROUTES from '../constants/routes';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nexport default function Profile() {\n    const { username } = useParams();\n    const [profileUserInfo, setProfileUserInfo] = useState(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        const getProfileUserInfo = async () => {\n            const [result] = await getUserByUsername(username);\n            setProfileUserInfo(result);\n            if (!result) {\n                history.push(ROUTES.NOT_FOUND);\n            }\n        };\n        if (username) {\n            getProfileUserInfo();\n        }\n    }, [username]);\n\n    return profileUserInfo?.username ? (\n        <div>\n            <Header />\n            <UserProfile profileUserInfo={profileUserInfo} />\n        </div>\n    ) : (\n        <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n            <div className=\"max-w-screen-lg h-screen mx-auto\">\n                <Skeleton count={1} height={200} className=\"mt-20 mx-4\" />\n            </div>\n        </SkeletonTheme>\n    );\n}\n"],"sourceRoot":""}