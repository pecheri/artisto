{"version":3,"sources":["constants/routes.js","context/firebase.js","lib/firebase.js","context/user.js","helpers/ProtectedRoute.js","helpers/isUserLoggedIn.js","components/ScrollToTop.js","App.js","hooks/useAuthListener.js","index.js"],"names":["DASHBOARD","LOGIN","SIGN_UP","PROFILE","PROFILE_EDIT","SEARCH","MESSAGES","MESSAGES_USER","UPLOAD_IMAGE","NOT_FOUND","FirebaseContext","createContext","firebase","Firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","FieldValue","firestore","UserContext","ProtectedRoute","user","children","rest","render","location","to","pathname","ROUTES","state","from","IsUserLoggedIn","loggedInPath","ScrollToTop","useLocation","useEffect","window","scrollTo","Login","lazy","SignUp","DashBoard","Profile","ProfileEdit","Search","Messages","MessagesUser","UploadImage","NotFound","App","useState","JSON","parse","localStorage","getItem","setUser","useContext","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem","useAuthListener","Provider","value","fallback","className","path","component","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7229fb9b.chunk.js","sourcesContent":["export const DASHBOARD = '/';\nexport const LOGIN = '/login';\nexport const SIGN_UP = '/sign-up';\nexport const PROFILE = '/p/:username';\nexport const PROFILE_EDIT = '/edit/:username';\nexport const SEARCH = '/search';\nexport const MESSAGES = '/messages';\nexport const MESSAGES_USER = '/messages/:username';\nexport const UPLOAD_IMAGE = '/upload';\nexport const NOT_FOUND = '/not-found';\n","import { createContext } from 'react';\n\nconst FirebaseContext = createContext(null);\nexport default FirebaseContext;\n","import Firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n// import { seedDatabase } from '../seed';\n\nconst config = {\n    apiKey: 'AIzaSyDYOC4vSoKt8A2qLzIqw1A_BYTrqLAbFLk',\n    authDomain: 'artisto-rki.firebaseapp.com',\n    projectId: 'artisto-rki',\n    storageBucket: 'artisto-rki.appspot.com',\n    messagingSenderId: '960656414320',\n    appId: '1:960656414320:web:76f34788ac2ca4954d46b5',\n};\n\nconst firebase = Firebase.initializeApp(config);\nconst { FieldValue } = Firebase.firestore;\n\nexport { firebase, FieldValue };\n\n// seedDatabase(firebase);\n","import { createContext } from 'react';\n\nconst UserContext = createContext(null);\nexport default UserContext;\n","import PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\n\nexport default function ProtectedRoute({ user, children, ...rest }) {\n    // children = dashboard\n    return (\n        <Route\n            {...rest}\n            render={({ location }) => {\n                if (user) {\n                    return children;\n                }\n                if (!user) {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: ROUTES.LOGIN,\n                                state: { from: location },\n                            }}\n                        />\n                    );\n                }\n                return null;\n            }}\n        />\n    );\n}\n\nProtectedRoute.propTypes = {\n    user: PropTypes.object,\n    children: PropTypes.array.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport default function IsUserLoggedIn({ user, loggedInPath, children, ...rest }) {\n    // children = login / signin\n    return (\n        <Route\n            {...rest}\n            render={({ location }) => {\n                if (!user) {\n                    return children;\n                }\n                if (user) {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: loggedInPath,\n                                state: { from: location },\n                            }}\n                        />\n                    );\n                }\n                return null;\n            }}\n        />\n    );\n}\n\nIsUserLoggedIn.propTypes = {\n    user: PropTypes.object,\n    loggedInPath: PropTypes.string.isRequired,\n    children: PropTypes.object.isRequired,\n};\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n    const { pathname } = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}\n","import React, { lazy, Suspense } from 'react';\n// import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport * as ROUTES from './constants/routes';\nimport UserContext from './context/user';\nimport useAuthListener from './hooks/useAuthListener';\nimport ProtectedRoute from './helpers/ProtectedRoute';\nimport IsUserLoggedIn from './helpers/isUserLoggedIn';\nimport ScrollToTop from './components/ScrollToTop';\n\nconst Login = lazy(() => import('./pages/Login'));\nconst SignUp = lazy(() => import('./pages/SignUp'));\nconst DashBoard = lazy(() => import('./pages/DashBoard'));\nconst Profile = lazy(() => import('./pages/Profile'));\nconst ProfileEdit = lazy(() => import('./pages/ProfileEdit'));\nconst Search = lazy(() => import('./pages/Search'));\nconst Messages = lazy(() => import('./pages/Messages'));\nconst MessagesUser = lazy(() => import('./pages/MessagesUser'));\nconst UploadImage = lazy(() => import('./pages/UploadImage'));\nconst NotFound = lazy(() => import('./pages/NotFound'));\n\nfunction App() {\n    const { user } = useAuthListener();\n\n    return (\n        <UserContext.Provider value={{ user }}>\n            <Router>\n                <Suspense fallback={<p className=\"text-gray-light text-center w-screen text-xl\">Loading...</p>}>\n                    <Switch>\n                        <IsUserLoggedIn user={user} loggedInPath={ROUTES.DASHBOARD} path={ROUTES.LOGIN}>\n                            <Route path={ROUTES.LOGIN} component={Login} />\n                        </IsUserLoggedIn>\n                        <IsUserLoggedIn user={user} loggedInPath={ROUTES.DASHBOARD} path={ROUTES.SIGN_UP}>\n                            <Route path={ROUTES.SIGN_UP} component={SignUp} />\n                        </IsUserLoggedIn>\n                        <ProtectedRoute user={user} path={ROUTES.DASHBOARD} exact>\n                            <ScrollToTop />\n                            <DashBoard />\n                        </ProtectedRoute>\n                        <Route path={ROUTES.PROFILE} component={Profile} />\n                        <Route path={ROUTES.PROFILE_EDIT} component={ProfileEdit} />\n                        <Route path={ROUTES.SEARCH} component={Search} />\n                        <Route path={ROUTES.MESSAGES} component={Messages} exact />\n                        <Route path={ROUTES.MESSAGES_USER} component={MessagesUser} exact />\n                        <Route path={ROUTES.UPLOAD_IMAGE} component={UploadImage} />\n                        <Route component={NotFound} />\n                    </Switch>\n                </Suspense>\n            </Router>\n        </UserContext.Provider>\n    );\n}\n\nexport default App;\n","import { useState, useEffect, useContext } from 'react';\nimport FirebaseContext from '../context/firebase';\n\nexport default function useAuthListener() {\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('authUser')));\n    const { firebase } = useContext(FirebaseContext);\n    useEffect(() => {\n        const listener = firebase.auth().onAuthStateChanged((authUser) => {\n            if (authUser) {\n                localStorage.setItem('authUser', JSON.stringify(authUser));\n                setUser(authUser);\n            } else {\n                localStorage.removeItem('authUser');\n                setUser(null);\n            }\n        });\n        return () => listener();\n    }, [firebase]);\n    return { user };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport FirebaseContext from './context/firebase';\nimport { firebase, FieldValue } from './lib/firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={{ firebase, FieldValue }}>\n        <App />\n    </FirebaseContext.Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}