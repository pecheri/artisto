{"version":3,"sources":["components/profile/FollowingFollowersUser.js","components/profile/FollowingFollwersList.js","components/profile/ProfileHeader.js","components/profile/ImageDetails.js","components/profile/Image.js","components/profile/Images.js","components/profile/index.js","pages/Profile.js"],"names":["FollowingFollowersUser","username","fullName","photo","setFollowingOrFollowers","className","to","onClick","src","FollowingFollwersList","following","followers","followingOrFollowers","useState","list","setList","useEffect","getFollowingList","a","getFollowingOrFollowersList","result","getFollowersList","map","item","index","count","ProfileHeader","profileUserInfo","photoCounts","useUser","userInfo","docId","userId","isUserFollowing","setIsUserFollowing","length","followersCount","setFollowersCount","history","useHistory","IsUserFollowingProfileUser","checkIfUsersFollowing","toggleUserFollow","prevState","toggleFollow","e","target","currentTarget","closeFollowingFollowersList","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","alt","push","category","title","bio","ImageDetails","profileUsername","photoWithDetails","setPhotoWithDetails","getLatestPhotoInfo","photoId","latestPhotoInfo","caption","date","dateCreated","Image","imageSrc","Action","likes","userLikedPhoto","comments","color","highlightColor","width","height","photos","isImageClicked","setIsImageClicked","currentPhoto","setCurrentPhoto","screenToggle","style","paddingTop","closeImage","indexOf","Images","UserProfile","setPhotos","setPhotoCounts","getProfileUserPhotos","getProfilePhotosbyUserId","sort","b","Profile","useParams","setProfileUserInfo","getUserByUsername","ROUTES","getProfileUserInfo","document","Header"],"mappings":"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","file":"static/js/15.bbf52f6b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function FollowingFollowersUser({ username, fullName, photo, setFollowingOrFollowers }) {\n    return (\n        <div className=\"p-2 flex mx-auto items-center\">\n            <Link to={`/p/${username}`} onClick={() => setFollowingOrFollowers()}>\n                <div>\n                    <img src={photo} className=\"h-10 w-10 rounded-full object-cover\" />\n                </div>\n            </Link>\n            <div className=\"pl-4\">\n                <Link to={`/p/${username}`} onClick={() => setFollowingOrFollowers()}>\n                    <p className=\"font-bold\">{fullName}</p>\n                </Link>\n                <p className=\"text-sm\">\n                    <span className=\"text-xs\">ID: </span>\n                    {username}\n                </p>\n            </div>\n        </div>\n    );\n}\n\nFollowingFollowersUser.propTypes = {\n    username: PropTypes.string.isRequired,\n    fullName: PropTypes.string.isRequired,\n    photo: PropTypes.string.isRequired,\n    setFollowingOrFollowers: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFollowingOrFollowersList } from '../../services/firebase';\nimport FollowingFollowersUser from './FollowingFollowersUser';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nexport default function FollowingFollwersList({ following, followers, followingOrFollowers, setFollowingOrFollowers }) {\n    const [list, setList] = useState([]);\n\n    useEffect(() => {\n        const getFollowingList = async () => {\n            const result = await getFollowingOrFollowersList(following);\n            setList(result);\n        };\n        const getFollowersList = async () => {\n            const result = await getFollowingOrFollowersList(followers);\n            setList(result);\n        };\n        if (followingOrFollowers === 'following') {\n            getFollowingList();\n        }\n        if (followingOrFollowers === 'followers') {\n            getFollowersList();\n        }\n    }, [followingOrFollowers]);\n    return (\n        <div className=\"bg-gray-light h-full sm:max-w-sm sm:w-96 w-screen rounded text-gray-dark p-8 overflow-scroll relative\">\n            {list ? (\n                list.map((item, index) => (\n                    <FollowingFollowersUser\n                        key={index}\n                        username={item.username}\n                        fullName={item.fullName}\n                        photo={item.photo}\n                        setFollowingOrFollowers={setFollowingOrFollowers}\n                    />\n                ))\n            ) : (\n                <Skeleton count={4} className=\"w-full pb-4 h-1/4\" />\n            )}\n        </div>\n    );\n}\n\nFollowingFollwersList.propTypes = {\n    // profileUserInfo: PropTypes.shape({\n    //     dateCreated: PropTypes.number,\n    //     email: PropTypes.string,\n    //     followers: PropTypes.array,\n    //     following: PropTypes.array,\n    //     fullName: PropTypes.string,\n    //     userId: PropTypes.string,\n    //     username: PropTypes.string,\n    //     category: PropTypes.string,\n    //     photo: PropTypes.string,\n    //     title: PropTypes.string,\n    //     bio: PropTypes.string,\n    //     docId: PropTypes.string,\n    // }),\n    followingOrFollowers: PropTypes.string,\n    following: PropTypes.array,\n    followers: PropTypes.array,\n    setFollowingOrFollowers: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport useUser from '../../hooks/useUser';\nimport { IsUserFollowingProfileUser } from '../../services/firebase';\nimport { toggleFollow } from '../../services/firebase';\nimport { useHistory } from 'react-router-dom';\nimport FollowingFollwersList from './FollowingFollwersList';\n\nexport default function ProfileHeader({ profileUserInfo, photoCounts }) {\n    const {\n        userInfo: { username, docId, userId },\n    } = useUser();\n\n    const [isUserFollowing, setIsUserFollowing] = useState(null);\n    const [followersCount, setFollowersCount] = useState(profileUserInfo.followers.length);\n    const [followingOrFollowers, setFollowingOrFollowers] = useState(null);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        const checkIfUsersFollowing = async () => {\n            const result = await IsUserFollowingProfileUser(username, profileUserInfo.userId);\n            setIsUserFollowing(!!result);\n            setFollowersCount(profileUserInfo.followers.length);\n        };\n        if (profileUserInfo && username) {\n            checkIfUsersFollowing();\n        }\n    }, [profileUserInfo, username]);\n\n    const toggleUserFollow = async () => {\n        setIsUserFollowing((prevState) => !prevState);\n        isUserFollowing\n            ? setFollowersCount((prevState) => prevState - 1)\n            : setFollowersCount((prevState) => prevState + 1);\n\n        await toggleFollow(docId, userId, profileUserInfo.docId, profileUserInfo.userId, isUserFollowing);\n    };\n\n    const closeFollowingFollowersList = (e) => {\n        if (e.target === e.currentTarget) {\n            setFollowingOrFollowers(null);\n        }\n    };\n\n    return (\n        <div className=\"pt-24 text-gray-light\">\n            {followingOrFollowers && (\n                <div\n                    onClick={(e) => {\n                        closeFollowingFollowersList(e);\n                    }}\n                    className=\"flex justify-center w-screen h-screen pt-20 bg-gray-primary bg-opacity-50 fixed top-0 left-0 bottom-0 right-0 z-90\"\n                >\n                    <div className=\"relative h-3/4\">\n                        <button\n                            onClick={() => setFollowingOrFollowers(null)}\n                            className=\"absolute top-2 right-2 md:-right-10 md:text-gray-light text-gray-dark z-90\"\n                        >\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 md:h-10 md:w-10\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M6 18L18 6M6 6l12 12\"\n                                />\n                            </svg>\n                        </button>\n                        <FollowingFollwersList\n                            following={profileUserInfo.following}\n                            followers={profileUserInfo.followers}\n                            followingOrFollowers={followingOrFollowers}\n                            setFollowingOrFollowers={setFollowingOrFollowers}\n                        />\n                    </div>\n                </div>\n            )}\n            <div className=\"flex items-top sm:items-center \">\n                <div className=\"pr-2 sm:pr-4\">\n                    <img\n                        src={profileUserInfo.photo}\n                        alt={`${profileUserInfo.username} profile photo`}\n                        className=\"sm:w-36 sm:h-36 w-12 h-12 rounded-full object-cover\"\n                    />\n                </div>\n                <div className=\"\">\n                    <div className=\"flex items-center\">\n                        <div>\n                            <p className=\"text-sm font-bold sm:text-lg\">{profileUserInfo.fullName}</p>\n                            <p className=\"text-xs sm:text-base\">\n                                <span className=\"sm:text-sm\">ID: </span>\n                                {profileUserInfo.username}\n                            </p>\n                        </div>\n                        <div className=\"ml-4 sm:ml-10\">\n                            {profileUserInfo.username === username ? (\n                                <button\n                                    className=\"text-xs bg-gray-dark text-gray-light p-2 rounded\"\n                                    onClick={() => history.push(`/edit/${username}`)}\n                                >\n                                    Edit Profile\n                                </button>\n                            ) : null}\n                            {profileUserInfo.username === username || isUserFollowing === null ? null : (\n                                <button\n                                    onClick={toggleUserFollow}\n                                    className={`rounded text-gray-light bg-red-primary text-xs p-2 sm:hidden ${\n                                        isUserFollowing ? 'bg-red-primary' : 'bg-blue-primary'\n                                    }`}\n                                >\n                                    {isUserFollowing ? 'Unfollow' : 'Follow'}\n                                </button>\n                            )}\n                        </div>\n                    </div>\n\n                    <p className=\"text-sm sm:text-base\">\n                        <span className=\"text-xs sm:text-sm\">Category: </span>\n                        {profileUserInfo.category}\n                    </p>\n                    <div className=\"flex mt-2 sm:mt-4\">\n                        <p className=\"text-sm sm:text-base\">\n                            {photoCounts}{' '}\n                            <span className=\"text-xs sm:text-sm\">{photoCounts === 1 ? 'post' : 'posts'}</span>\n                        </p>\n                        <p\n                            className=\"px-4 cursor-pointer text-sm sm:text-base\"\n                            onClick={() => setFollowingOrFollowers(profileUserInfo.followers.length > 0 && 'followers')}\n                        >\n                            {followersCount}{' '}\n                            <span className=\"text-xs sm:text-sm\">\n                                {profileUserInfo.followers.length === 1 ? 'follower' : 'followers'}\n                            </span>\n                        </p>\n                        <p\n                            className=\"cursor-pointer text-sm sm:text-base\"\n                            onClick={() => setFollowingOrFollowers(profileUserInfo.following.length > 0 && 'following')}\n                        >\n                            {profileUserInfo.following.length} <span className=\"text-xs sm:text-sm\">following</span>\n                        </p>\n                    </div>\n                </div>\n                <div>\n                    {profileUserInfo.username === username || isUserFollowing === null ? null : (\n                        <button\n                            onClick={toggleUserFollow}\n                            className={`rounded text-gray-light bg-red-primary text-sm py-2 px-6 hidden sm:block ${\n                                isUserFollowing ? 'bg-red-primary' : 'bg-blue-primary'\n                            }`}\n                        >\n                            {isUserFollowing ? 'Unfollow' : 'Follow'}\n                        </button>\n                    )}\n                </div>\n            </div>\n            <div className=\"pt-2 max-w-2xl\">\n                <p className=\"text-sm sm:text-base\">{profileUserInfo.title}</p>\n                <p className=\"text-xs sm:text-sm\">Bio:</p>\n                <p className=\"break-words text-xs sm:text-sm\">{profileUserInfo.bio}</p>\n            </div>\n        </div>\n    );\n}\n\nProfileHeader.propTypes = {\n    profileUserInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n        bio: PropTypes.string,\n        docId: PropTypes.string,\n    }),\n    photos: PropTypes.array,\n    photoCounts: PropTypes.number,\n};\n\n{\n    /* <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n            <Skeleton count={1} width={480} height={200} className=\"mt-20\" />\n        </SkeletonTheme> */\n}\n","import React, { useState, useEffect } from 'react';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\nimport PropTypes from 'prop-types';\nimport Header from '../post/Header';\nimport Image from '../post/Image';\nimport Action from '../post/Action';\nimport useUser from '../../hooks/useUser';\nimport { getLatestPhotoInfo } from '../../services/firebase';\n\nexport default function ImageDetails({ photo, profileUsername }) {\n    const [photoWithDetails, setPhotoWithDetails] = useState(null);\n\n    const {\n        userInfo: { userId },\n    } = useUser();\n\n    useEffect(() => {\n        const latestPhotoInfo = async () => {\n            const result = await getLatestPhotoInfo(photo.photoId, userId, profileUsername);\n            setPhotoWithDetails(result);\n        };\n        if (userId && photo) {\n            latestPhotoInfo();\n        }\n    }, [userId, photo]);\n\n    return photoWithDetails?.username ? (\n        <div className=\"bg-gray-light py-8 px-2 sm:px-8 mx-auto overflow-scroll rounded-sm\">\n            {/* <Header\n                userId={photoWithDetails.userId}\n                username={photoWithDetails.username}\n                caption={photoWithDetails.caption}\n                date={photoWithDetails.dateCreated}\n            />\n            <Image imageSrc={photoWithDetails.imageSrc} />\n            <Action\n                likes={photoWithDetails.likes}\n                userLikedPhoto={photoWithDetails.userLikedPhoto}\n                comments={photoWithDetails.comments}\n                docId={photoWithDetails.docId}\n            /> */}\n            <Header userId={photo.userId} username={photo.username} caption={photo.caption} date={photo.dateCreated} />\n            <Image imageSrc={photo.imageSrc} />\n            <Action\n                likes={photo.likes}\n                userLikedPhoto={photo.userLikedPhoto}\n                comments={photo.comments}\n                docId={photo.docId}\n            />\n        </div>\n    ) : (\n        <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n            <Skeleton count={1} width={600} height={600} />\n        </SkeletonTheme>\n    );\n}\n\nImageDetails.propTypes = {\n    photo: PropTypes.shape({\n        caption: PropTypes.string.isRequired,\n        comments: PropTypes.array.isRequired,\n        dateCreated: PropTypes.number.isRequired,\n        docId: PropTypes.string.isRequired,\n        imageSrc: PropTypes.string.isRequired,\n        likes: PropTypes.array.isRequired,\n        photoId: PropTypes.string.isRequired,\n        userId: PropTypes.string.isRequired,\n        username: PropTypes.string.isRequired,\n        userLikedPhoto: PropTypes.bool.isRequired,\n    }),\n    profileUsername: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageDetails from './ImageDetails';\n\nexport default function Image({ photo, profileUserInfo, photos, photoCounts }) {\n    const [isImageClicked, setIsImageClicked] = useState(false);\n    // const [nextPhoto, setNextPhoto] = useState(photos[photos.indexOf(photo) + 1]);\n    // const [prevPhoto, setPrevPhoto] = useState(photos[photos.indexOf(photo) - 1]);\n    const [currentPhoto, setCurrentPhoto] = useState(photo);\n\n    const screenToggle = () => {\n        setIsImageClicked((prevState) => !prevState);\n        setCurrentPhoto(photo);\n    };\n\n    const closeImage = (e) => {\n        if (e.target === e.currentTarget) {\n            screenToggle();\n        }\n    };\n\n    const showNextPhoto = () => {\n        if (photos.length - 1 !== photos.indexOf(currentPhoto)) {\n            setCurrentPhoto((prevState) => photos[photos.indexOf(prevState) + 1]);\n        }\n    };\n\n    const showPrevPhoto = () => {\n        if (photos.indexOf(currentPhoto) > 0) {\n            setCurrentPhoto((prevState) => photos[photos.indexOf(prevState) - 1]);\n        }\n    };\n\n    return photo ? (\n        <>\n            <div className=\"relative w-full\" style={{ paddingTop: '100%' }}>\n                <img\n                    src={photo.imageSrc}\n                    alt={photo.caption}\n                    className=\"object-cover cursor-pointer absolute top-0 left-0 right-0 bottom-0 w-full h-full\"\n                    onClick={screenToggle}\n                />\n            </div>\n            {isImageClicked && (\n                <div\n                    onClick={(e) => {\n                        closeImage(e);\n                    }}\n                    className=\"flex justify-center w-screen py-10 bg-gray-primary bg-opacity-70 fixed top-0 left-0 right-0 bottom-0 z-90\"\n                >\n                    <button\n                        onClick={showPrevPhoto}\n                        className={`hidden md:flex text-gray-light absolute md:left-4 lg:left-20 xl:left-40 top-1/2 p-4 rounded opacity-60 hover:opacity-100 ${\n                            photos.indexOf(currentPhoto) === 0 && 'md:hidden'\n                        }`}\n                    >\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-10 w-10\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 19l-7-7 7-7\" />\n                        </svg>\n                    </button>\n                    <button\n                        onClick={showNextPhoto}\n                        className={`hidden md:flex text-gray-light absolute md:right-4 lg:right-20 xl:right-40 top-1/2 p-4 rounded opacity-60 hover:opacity-100 ${\n                            photos.length - 1 === photos.indexOf(currentPhoto) && 'md:hidden'\n                        }`}\n                    >\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-10 w-10\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5l7 7-7 7\" />\n                        </svg>\n                    </button>\n                    <div className=\"flex h-screen pb-4 sm:pb-0 sm:h-auto sm:max-h-screen relative max-w-screen-sm\">\n                        <button\n                            onClick={screenToggle}\n                            className=\" absolute top-0 right-0 text-gray-primary md:-right-10 md:text-gray-light\"\n                        >\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 md:h-10 md:w-10\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M6 18L18 6M6 6l12 12\"\n                                />\n                            </svg>\n                        </button>\n\n                        <ImageDetails photo={currentPhoto} profileUsername={profileUserInfo.username} />\n                    </div>\n                </div>\n            )}\n        </>\n    ) : null;\n}\n\nImage.propTypes = {\n    photo: PropTypes.shape({\n        imageSrc: PropTypes.string,\n        caption: PropTypes.string,\n        likes: PropTypes.array,\n        userId: PropTypes.string,\n    }),\n    profileUserInfo: PropTypes.shape({\n        username: PropTypes.string,\n    }),\n    photos: PropTypes.array,\n    photoCounts: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Image from './Image';\n\nexport default function Images({ profileUserInfo, photos, photoCounts }) {\n    return (\n        <div className=\"border-t-2 border-gray-dark my-8 pt-8\">\n            <div className=\"grid grid-cols-3 gap-2 sm:gap-8 items-center\">\n                {photos.map((photo, index) => (\n                    <Image\n                        key={index}\n                        photo={photo}\n                        profileUserInfo={profileUserInfo}\n                        photos={photos}\n                        photoCounts={photoCounts}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n}\nImages.propTypes = {\n    profileUserInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n        bio: PropTypes.string,\n    }),\n    photos: PropTypes.array,\n    photoCounts: PropTypes.number.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ProfileHeader from './ProfileHeader';\nimport Images from './Images';\nimport { getPhotosbyUserId, getProfilePhotosbyUserId } from '../../services/firebase';\nimport useUser from '../../hooks/useUser';\n\nexport default function UserProfile({ profileUserInfo }) {\n    const [photos, setPhotos] = useState(null);\n    const [photoCounts, setPhotoCounts] = useState(0);\n\n    const {\n        userInfo: { userId },\n    } = useUser();\n\n    useEffect(() => {\n        const getProfileUserPhotos = async () => {\n            const result = await getProfilePhotosbyUserId(userId, profileUserInfo.userId, profileUserInfo.username);\n            setPhotos(result.sort((a, b) => b.dateCreated - a.dateCreated));\n            setPhotoCounts(result.length);\n        };\n        if (profileUserInfo?.userId && userId) {\n            getProfileUserPhotos();\n        }\n    }, [profileUserInfo?.userId, userId]);\n\n    return (\n        <div className=\"max-w-screen-lg container mx-auto px-4\">\n            <ProfileHeader profileUserInfo={profileUserInfo} photos={photos} photoCounts={photoCounts} />\n            {!photos ? null : photos.length > 0 ? (\n                <Images profileUserInfo={profileUserInfo} photos={photos} photoCounts={photoCounts} />\n            ) : (\n                <div className=\"mt-8 border-t-2 border-gray-dark\">\n                    <p className=\"text-gray-light text-center pt-8\">No Posts</p>\n                </div>\n            )}\n        </div>\n    );\n}\n\nUserProfile.propTypes = {\n    profileUserInfo: PropTypes.object,\n};\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { getUserByUsername } from '../services/firebase';\nimport { useHistory } from 'react-router-dom';\nimport UserProfile from '../components/profile/';\nimport * as ROUTES from '../constants/routes';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nexport default function Profile() {\n    const { username } = useParams();\n    const [profileUserInfo, setProfileUserInfo] = useState(null);\n    const history = useHistory();\n\n    useEffect(() => {\n        const getProfileUserInfo = async () => {\n            const [result] = await getUserByUsername(username);\n            setProfileUserInfo(result);\n            if (!result) {\n                history.push(ROUTES.NOT_FOUND);\n            }\n        };\n        if (username) {\n            getProfileUserInfo();\n        }\n    }, [username]);\n\n    useEffect(() => {\n        document.title = `${username} - Artisto`;\n    }, [username]);\n\n    return profileUserInfo?.username ? (\n        <div>\n            <Header />\n            <UserProfile profileUserInfo={profileUserInfo} />\n        </div>\n    ) : (\n        <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n            <div className=\"max-w-screen-lg h-screen mx-auto\">\n                <Skeleton count={1} height={200} className=\"mt-20 mx-4\" />\n            </div>\n        </SkeletonTheme>\n    );\n}\n"],"sourceRoot":""}