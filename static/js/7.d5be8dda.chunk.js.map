{"version":3,"sources":["components/search/Result.js","components/search/Results.js","components/search/index.js","pages/Search.js","services/firebase.js","hooks/useUser.js","images/logo.png","components/Header.js","lib/categories.js","components/SideProfile.js"],"names":["Result","username","fullName","photo","title","bio","className","to","src","alt","length","substr","Results","results","selectedFilter","searchKeyword","notFound","userId","useUser","userInfo","resultsWithoutUser","filter","item","users","user","includes","toLowerCase","map","index","getFilteredResults","propTypes","PropTypes","array","string","isRequired","SearchIndex","useState","setSearchKeyword","selectedCategory","setSelectedCategory","setSelectedFilter","setResults","displayFilterButtons","setDisplayFilterButtons","isInvalid","searchHandle","event","a","preventDefault","getSearchResults","result","onSubmit","type","placeholder","value","onChange","target","hidden","categories","sort","category","disabled","onClick","Search","Header","SideProfile","cloudName","process","presets","doesUsernameExist","firebase","firestore","collection","where","get","console","log","docs","getUserByUserId","data","docId","id","getUserByUsername","IsUserFollowingProfileUser","profileUserId","response","getFollowingPhotosByUserId","following","userFollowedPhotos","Promise","all","userLikedPhoto","likes","userFollowedPhotosWithDetails","getPhotosbyUserId","photos","getLatestPhotoInfo","photoId","profileUsername","photoWithDetails","updateUserFollowing","userDocId","isUserFollowing","doc","update","FieldValue","arrayRemove","arrayUnion","updateProfileUserFollowers","profileUserDocId","followers","toggleFollow","getFollowingOrFollowersList","userIds","userList","updateProfile","imageFile","url","formData","FormData","append","Axios","post","then","secure_url","uploadNewPost","caption","add","comments","dateCreated","Date","now","imageSrc","userLatitude","userLongitude","useContext","UserContext","activeUser","setActiveUser","useEffect","uid","getUserInfoByUserId","FirebaseContext","history","useHistory","ROUTES","logo","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","auth","signOut","push","color","highlightColor","width","height","circle"],"mappings":"uPAIe,SAASA,EAAT,GAA4D,IAA1CC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IAC/D,OACI,qBAAKC,UAAU,gDAAf,SACI,sBAAKA,UAAU,gCAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,cAAC,IAAD,CAAMC,GAAE,aAAQN,GAAhB,SACI,qBACIO,IAAKL,EACLM,IAAG,UAAKR,EAAL,kBACHK,UAAU,4CAItB,sBAAKA,UAAU,kBAAf,UACI,cAAC,IAAD,CAAMC,GAAE,aAAQN,GAAhB,SACI,mBAAGK,UAAU,UAAb,SAAwBJ,MAE5B,oBAAGI,UAAU,UAAb,UACI,sBAAMA,UAAU,UAAhB,kBACCL,KAEL,mBAAGK,UAAU,eAAb,SAA6BF,IAC7B,oBAAGE,UAAU,sCAAb,UACI,sBAAMA,UAAU,UAAhB,mBACCD,EAAIK,OAAS,IAAb,UAAsBL,EAAIM,OAAO,EAAG,KAApC,OAAgDN,a,YCvB1D,SAASO,EAAT,GAA8D,IAA3CC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,cACjDC,EACF,qBAAKV,UAAU,SAAf,SACI,mBAAGA,UAAU,8BAAb,0BAKQW,EACZC,cADAC,SAAYF,OAgJhB,OAAQJ,EA7ImB,WACvB,IAAMO,EAAqBP,EAAQQ,QAAO,SAACC,GAAD,OAAUL,IAAWK,EAAKL,UACpE,GAAuB,QAAnBH,EAA0B,CAC1B,IAAMS,EAAQH,EACTC,QACG,SAACG,GAAD,OACIA,EAAKvB,SAASwB,SAASV,EAAcW,gBACrCF,EAAKtB,SAASwB,cAAcD,SAASV,EAAcW,gBACnDF,EAAKpB,MAAMqB,SAASV,EAAcW,gBAClCF,EAAKnB,IAAIoB,SAASV,EAAcW,kBAEvCC,KAAI,SAACH,EAAMI,GAAP,OACD,cAAC5B,EAAD,CAEIC,SAAUuB,EAAKvB,SACfC,SAAUsB,EAAKtB,SACfC,MAAOqB,EAAKrB,MACZC,MAAOoB,EAAKpB,MACZC,IAAKmB,EAAKnB,KALLuB,MAQjB,OAAIL,EAAMb,OAAS,EACRa,EAEAP,EAER,GAAuB,aAAnBF,EAA+B,CACtC,IAAMS,EAAQH,EACTC,QACG,SAACG,GAAD,OACIA,EAAKvB,SAASwB,SAASV,EAAcW,gBACrCF,EAAKtB,SAASwB,cAAcD,SAASV,EAAcW,kBAE1DC,KAAI,SAACH,EAAMI,GAAP,OACD,cAAC5B,EAAD,CAEIC,SAAUuB,EAAKvB,SACfC,SAAUsB,EAAKtB,SACfC,MAAOqB,EAAKrB,MACZC,MAAOoB,EAAKpB,MACZC,IAAKmB,EAAKnB,KALLuB,MAQjB,OAAIL,EAAMb,OAAS,EACRa,EAEAP,EAER,GAAuB,UAAnBF,EAA4B,CACnC,IAAMS,EAAQH,EACTC,QAAO,SAACG,GAAD,OAAUA,EAAKpB,MAAMsB,cAAcD,SAASV,EAAcW,kBACjEC,KAAI,SAACH,EAAMI,GAAP,OACD,cAAC5B,EAAD,CAEIC,SAAUuB,EAAKvB,SACfC,SAAUsB,EAAKtB,SACfC,MAAOqB,EAAKrB,MACZC,MAAOoB,EAAKpB,MACZC,IAAKmB,EAAKnB,KALLuB,MAQjB,OAAIL,EAAMb,OAAS,EACRa,EAEAP,EAER,GAAuB,QAAnBF,EAA0B,CACjC,IAAMS,EAAQH,EACTC,QAAO,SAACG,GAAD,OAAUA,EAAKnB,IAAIqB,cAAcD,SAASV,EAAcW,kBAC/DC,KAAI,SAACH,EAAMI,GAAP,OACD,cAAC5B,EAAD,CAEIC,SAAUuB,EAAKvB,SACfC,SAAUsB,EAAKtB,SACfC,MAAOqB,EAAKrB,MACZC,MAAOoB,EAAKpB,MACZC,IAAKmB,EAAKnB,KALLuB,MAQjB,OAAIL,EAAMb,OAAS,EACRa,EAEAP,GA2DMa,GAAP,KAGtBjB,EAAQkB,UAAY,CAChBjB,QAASkB,IAAUC,MACnBlB,eAAgBiB,IAAUE,OAAOC,WACjCnB,cAAegB,IAAUE,OAAOC,Y,YC9JrB,SAASC,IAAe,IAAD,EACQC,mBAAS,IADjB,mBAC3BrB,EAD2B,KACZsB,EADY,OAEcD,mBAAS,IAFvB,mBAE3BE,EAF2B,KAETC,EAFS,OAGUH,mBAAS,OAHnB,mBAG3BtB,EAH2B,KAGX0B,EAHW,OAIJJ,mBAAS,MAJL,mBAI3BvB,EAJ2B,KAIlB4B,EAJkB,OAKsBL,oBAAS,GAL/B,mBAK3BM,EAL2B,KAKLC,EALK,KAO5BC,EAA8B,KAAlB7B,GAA6C,KAArBuB,EAEpCO,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACjBD,EAAME,iBACNR,EAAkB,OAFD,SAGIS,YAAiBX,GAHrB,OAGXY,EAHW,OAIjBT,EAAWS,GACXP,GAAwB,GALP,2CAAH,sDAQlB,OACI,sBAAKrC,UAAU,uBAAf,UACI,8BACI,uBAAMA,UAAU,gCAAgC6C,SAAUN,EAA1D,UACI,uBACIO,KAAK,OACLC,YAAY,YACZ/C,UAAU,mFACVgD,MAAOvC,EACPwC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBnB,EAAiBmB,EAAOF,UAEtD,yBACIhD,UAAU,sEACViD,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBjB,EAAoBiB,EAAOF,QACrDA,MAAOhB,EAHX,UAKI,wBAAQmB,QAAM,EAACH,MAAM,GAArB,sBAGCI,IAAWC,OAAOhC,KAAI,SAACiC,EAAUhC,GAAX,OACnB,wBAAoB0B,MAAOM,EAA3B,SACKA,GADQhC,MAIjB,wBAAQ0B,MAAM,SAAd,uBAEJ,wBACIF,KAAK,SACL9C,UAAS,kEACLsC,GAAa,cAEjBiB,SAAUjB,EALd,yBAWR,sBAAKtC,UAAS,8DAAyDoC,GAAwB,UAA/F,UACI,wBACIU,KAAK,SACL9C,UAAS,yBAAuC,QAAnBQ,GAA4B,oCACzDwC,MAAM,MACNQ,QAAS,gBAAGN,EAAH,EAAGA,OAAH,OAAgBhB,EAAkBgB,EAAOF,QAJtD,iBAQA,wBACIF,KAAK,SACLE,MAAM,WACNhD,UAAS,eAA6B,aAAnBQ,GAAiC,oCACpDgD,QAAS,gBAAGN,EAAH,EAAGA,OAAH,OAAgBhB,EAAkBgB,EAAOF,QAJtD,sBAQA,wBACIF,KAAK,SACLE,MAAM,QACNhD,UAAS,eAA6B,UAAnBQ,GAA8B,oCACjDgD,QAAS,gBAAGN,EAAH,EAAGA,OAAH,OAAgBhB,EAAkBgB,EAAOF,QAJtD,mBAQA,wBACIF,KAAK,SACLE,MAAM,MACNhD,UAAS,eAA6B,QAAnBQ,GAA4B,oCAC/CgD,QAAS,gBAAGN,EAAH,EAAGA,OAAH,OAAgBhB,EAAkBgB,EAAOF,QAJtD,oBASJ,cAAC1C,EAAD,CAASC,QAASA,EAASC,eAAgBA,EAAgBC,cAAeA,OCxFvE,SAASgD,IACpB,OACI,sBAAKzD,UAAU,YAAf,UACI,cAAC0D,EAAA,EAAD,IACA,qBAAK1D,UAAU,oCAAf,SACI,sBAAKA,UAAU,+CAAf,UACI,cAAC6B,EAAD,IACA,cAAC8B,EAAA,EAAD,c,8fCVdC,EAAS,UAAMC,aACfC,EAAO,UAAMD,YAEZ,SAAeE,EAAtB,kC,4CAAO,WAAiCpE,GAAjC,eAAA8C,EAAA,sEACkBuB,IAASC,YAAYC,WAAW,SAASC,MAAM,WAAY,KAAMxE,GAAUyE,MAD7F,cACGxB,EADH,OAEHyB,QAAQC,IAAI1B,EAAO2B,KAAKnE,OAAS,GAF9B,kBAGIwC,EAAO2B,KAAKnE,OAAS,GAHzB,4C,sBAMA,SAAeoE,EAAtB,kC,4CAAO,WAA+B7D,GAA/B,iBAAA8B,EAAA,sEACkBuB,IAASC,YAAYC,WAAW,SAASC,MAAM,SAAU,KAAMxD,GAAQyD,MADzF,cACGxB,EADH,OAEG1B,EAAO0B,EAAO2B,KAAKlD,KAAI,SAACL,GAAD,mBAAC,eACvBA,EAAKyD,QADiB,IAEzBC,MAAO1D,EAAK2D,QAJb,kBAMIzD,GANJ,4C,sBASA,SAAe0D,EAAtB,kC,4CAAO,WAAiCjF,GAAjC,iBAAA8C,EAAA,sEACkBuB,IAASC,YAAYC,WAAW,SAASC,MAAM,WAAY,KAAMxE,GAAUyE,MAD7F,cACGxB,EADH,OAEG1B,EAAO0B,EAAO2B,KAAKlD,KAAI,SAACL,GAAD,mBAAC,eACvBA,EAAKyD,QADiB,IAEzBC,MAAO1D,EAAK2D,QAJb,kBAMIzD,GANJ,4C,sBASA,SAAe2D,EAAtB,oC,4CAAO,WAA0ClF,EAAUmF,GAApD,uBAAArC,EAAA,sEACkBuB,IAChBC,YACAC,WAAW,SACXC,MAAM,WAAY,KAAMxE,GACxBwE,MAAM,YAAa,iBAAkBW,GACrCV,MANF,cACGxB,EADH,SAOqBA,EAAO2B,KAAKlD,KAAI,SAACL,GAAD,mBAAC,eAClCA,EAAKyD,QAD4B,IAEpCC,MAAO1D,EAAK2D,QATb,0BAOII,OAPJ,MAOe,GAPf,oBAWIA,EAASpE,QAXb,4C,sBAmBA,SAAeqE,EAAtB,oC,4CAAO,WAA0CC,EAAWtE,GAArD,mBAAA8B,EAAA,sEACkBuB,IAASC,YAAYC,WAAW,UAAUC,MAAM,SAAU,KAAMc,GAAWb,MAD7F,cACGxB,EADH,OAEGsC,EAAqBtC,EAAO2B,KAAKlD,KAAI,SAACxB,GAAD,mBAAC,eACrCA,EAAM4E,QAD8B,IAEvCC,MAAO7E,EAAM8E,QAJd,SAMyCQ,QAAQC,IAChDF,EAAmB7D,IAAnB,uCAAuB,WAAOxB,GAAP,uBAAA4C,EAAA,6DACf4C,GAAiB,EACjBxF,EAAMyF,MAAMnE,SAASR,KACrB0E,GAAiB,GAHF,SAKMb,EAAgB3E,EAAMc,QAL5B,0CAKZE,EALY,KAMXlB,EAAakB,EAAblB,SANW,2CAQfA,YACGE,GATY,IAUfwF,oBAVe,2CAAvB,wDAPD,cAMGE,EANH,yBAqBIA,GArBJ,4C,sBAwBA,SAAeC,EAAtB,kC,4CAAO,WAAiC7E,GAAjC,iBAAA8B,EAAA,sEACkBuB,IAASC,YAAYC,WAAW,UAAUC,MAAM,SAAU,KAAMxD,GAAQyD,MAD1F,cACGxB,EADH,OAEG6C,EAAS7C,EAAO2B,KAAKlD,KAAI,SAACxB,GAAD,mBAAC,eACzBA,EAAM4E,QADkB,IAE3BC,MAAO7E,EAAM8E,QAJd,kBAMIc,GANJ,4C,sBASA,SAAeC,EAAtB,sC,4CAAO,WAAkCC,EAAShF,EAAQiF,GAAnD,uBAAAnD,EAAA,sEACkBuB,IAASC,YAAYC,WAAW,UAAUC,MAAM,UAAW,KAAMwB,GAASvB,MAD5F,cACGxB,EADH,gBAE8BA,EAAO2B,KAAKlD,KAAI,SAACxB,GAAD,mBAAC,eAC3CA,EAAM4E,QADoC,IAE7CC,MAAO7E,EAAM8E,QAJd,0CAEIkB,EAFJ,KAMHxB,QAAQC,IAAIuB,GACRR,GAAiB,EACjBQ,EAAiBP,MAAMnE,SAASR,KAChC0E,GAAiB,GATlB,6CAWSQ,GAXT,IAW2BR,iBAAgB1F,SAAUiG,KAXrD,6C,sBAcA,SAAeE,EAAtB,sC,4CAAO,WAAmCC,EAAWjB,EAAekB,GAA7D,SAAAvD,EAAA,sDACHuB,IACKC,YACAC,WAAW,SACX+B,IAAIF,GACJG,OAAO,CACJjB,UAAWe,EAAkBG,IAAWC,YAAYtB,GAAiBqB,IAAWE,WAAWvB,KANhG,4C,sBAUA,SAAewB,EAAtB,sC,4CAAO,WAA0CC,EAAkB5F,EAAQqF,GAApE,SAAAvD,EAAA,sDACHuB,IACKC,YACAC,WAAW,SACX+B,IAAIM,GACJL,OAAO,CACJM,UAAWR,EAAkBG,IAAWC,YAAYzF,GAAUwF,IAAWE,WAAW1F,KANzF,4C,sBAUA,SAAe8F,EAAtB,0C,4CAAO,WAA4BV,EAAWpF,EAAQ4F,EAAkBzB,EAAekB,GAAhF,SAAAvD,EAAA,sEACGqD,EAAoBC,EAAWjB,EAAekB,GADjD,uBAEGM,EAA2BC,EAAkB5F,EAAQqF,GAFxD,4C,sBAcA,SAAeU,EAAtB,kC,4CAAO,WAA2CC,GAA3C,eAAAlE,EAAA,sEACkB0C,QAAQC,IACzBuB,EAAQtF,IAAR,uCAAY,WAAOV,GAAP,mBAAA8B,EAAA,sEACiB+B,EAAgB7D,GADjC,0CACDiG,EADC,KAERvC,QAAQC,IAAI,WAAYsC,GAFhB,kBAGDA,GAHC,2CAAZ,wDAFD,cACGhE,EADH,OAQHyB,QAAQC,IAAI,SAAU1B,GARnB,kBASIA,GATJ,4C,sBAYA,SAAeD,EAAtB,kC,4CAAO,WAAgCW,GAAhC,iBAAAb,EAAA,sEACkBuB,IAASC,YAAYC,WAAW,SAASC,MAAM,WAAY,KAAMb,GAAUc,MAD7F,cACGxB,EADH,OAEG3B,EAAQ2B,EAAO2B,KAAKlD,KAAI,SAACL,GAAD,mBAAC,eACxBA,EAAKyD,QADkB,IAE1BC,MAAO1D,EAAK2D,QAEhBN,QAAQC,IAAIrD,GANT,kBAOIA,GAPJ,4C,sBA2BA,SAAe4F,EAAtB,4C,4CAAO,WAA6BnC,EAAO9E,EAAU0D,EAAUxD,EAAOC,EAAK+G,GAApE,iBAAArE,EAAA,0DACCqE,EADD,wBAEKC,EAAM,IACJC,EAAW,IAAIC,UACZC,OAAO,OAAQJ,EAAU,IAClCE,EAASE,OAAO,gBAAiBpD,GALlC,SAOOqD,IAAMC,KAAN,0CAA8CxD,EAA9C,iBAAwEoD,GAAUK,MAAK,YAAe,IAAZ5C,EAAW,EAAXA,KAC5FsC,EAAMtC,EAAK6C,WACXjD,QAAQC,IAAI,MAAOyC,MATxB,OAYC/C,IAASC,YAAYC,WAAW,SAAS+B,IAAIvB,GAAOwB,OAAO,CACvDtG,WACA0D,WACAxD,QACAC,MACAF,MAAOkH,IAjBZ,wBAoBC/C,IAASC,YAAYC,WAAW,SAAS+B,IAAIvB,GAAOwB,OAAO,CACvDtG,WACA0D,WACAxD,QACAC,QAxBL,6C,sBA6BA,SAAewH,EAAtB,sC,4CAAO,WAA6BC,EAASV,EAAWnG,GAAjD,iBAAA8B,EAAA,6DACCsE,EAAM,IACJC,EAAW,IAAIC,UACZC,OAAO,OAAQJ,EAAU,IAClCE,EAASE,OAAO,gBAAiBpD,GAJ9B,SAMGqD,IAAMC,KAAN,0CAA8CxD,EAA9C,iBAAwEoD,GAAUK,MAAK,YAAe,IAAZ5C,EAAW,EAAXA,KAC5FsC,EAAMtC,EAAK6C,WACXjD,QAAQC,IAAI,MAAOyC,MARpB,uBAWG/C,IACDC,YACAC,WAAW,UACXuD,IAAI,CACDD,UACAE,SAAU,GACVC,YAAaC,KAAKC,MAClBC,SAAUf,EACVzB,MAAO,GACPK,QAAShF,EAASiH,KAAKC,MACvBlH,SACAoH,aAAc,QACdC,eAAgB,WAvBrB,4C,sJCjMQ,SAASpH,IAAW,IACvBM,EAAS+G,qBAAWC,KAApBhH,KADsB,EAEMY,mBAAS,IAFf,mBAEvBqG,EAFuB,KAEXC,EAFW,KAa9B,OATAC,qBAAU,WAAM,4CACZ,gCAAA5F,EAAA,sEAC2B+B,YAAgBtD,EAAKoH,KADhD,mCACW1F,EADX,KAEIwF,EAAcxF,GAFlB,4CADY,uBAKZ,OAAI1B,QAAJ,IAAIA,OAAJ,EAAIA,EAAMoH,MALG,WAAD,wBAMRC,KAEL,CAACrH,IACG,CAAEL,SAAUsH,K,gCCjBR,QAA0B,kC,gCCAzC,mHAUe,SAASzE,IAEHuE,qBAAWC,KAApBhH,KAFqB,IAGrB8C,EAAaiE,qBAAWO,KAAxBxE,SACFyE,EAAUC,cAMR7H,EAAaD,cAAbC,SAYR,OACI,qBAAKb,UAAU,yEAAf,SACI,sBAAKA,UAAU,kEAAf,UACI,cAAC,IAAD,CAAMC,GAAI0I,IAAV,SACI,oBAAI3I,UAAU,YAAd,SACI,qBAAKE,IAAK0I,IAAMzI,IAAI,gBAG5B,sBAAKH,UAAU,6BAAf,UACI,qBAAKA,UAAU,OAAf,SACI,cAAC,IAAD,CAAMC,GAAI0I,IAAV,SACI,qBACIE,MAAM,6BACN7I,UAAU,0BACV8I,KAAK,OACLC,QAAQ,YACRC,OAAO,eALX,SAOI,sBAAMC,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAIC,EAAE,yBAIjF,qBAAKpJ,UAAU,OAAf,SACI,cAAC,IAAD,CAAMC,GAAI0I,IAAV,SACI,qBACIE,MAAM,6BACN7I,UAAU,0BACV8I,KAAK,OACLC,QAAQ,YACRC,OAAO,eALX,SAOI,sBACIC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,sDAKlB,qBAAKpJ,UAAU,OAAf,SACI,cAAC,IAAD,CAAMC,GAAI0I,IAAV,SACI,qBACIE,MAAM,6BACN7I,UAAU,0BACV8I,KAAK,OACLC,QAAQ,YACRC,OAAO,eALX,SAOI,sBACIC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,wKAKlB,qBAAKpJ,UAAU,8BAAf,SACI,cAAC,IAAD,CAAMC,GAAE,aAAQY,EAASlB,UAAzB,SACI,qBAAKO,IAAKW,EAAShB,MAAOG,UAAU,4CAG5C,qBAAKA,UAAU,sBAAsBwD,QAhF/B,WAClBQ,EAASqF,OAAOC,UAChBb,EAAQc,KAAKZ,MA8ED,SACI,qBACIE,MAAM,6BACN7I,UAAU,0BACV8I,KAAK,OACLC,QAAQ,YACRC,OAAO,eALX,SAOI,sBACIC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,EAAE,4G,gCC3GlC,kCAAO,IAAMhG,EAAa,CAAC,aAAc,aAAc,YAAa,iBAAkB,WAAY,iB,gCCAlG,+FAQe,SAASO,IAAc,IAkB1B9C,EAAaD,cAAbC,SAER,OACI,cAAC,gBAAD,CAAe2I,MAAM,UAAUC,eAAe,UAA9C,SACI,qBAAKzJ,UAAU,2BAAf,SACI,sBAAKA,UAAU,yEAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAAC,IAAD,CAAMC,GAAE,aAAQY,EAASlB,UAAzB,SACMkB,EAAShB,MAGP,qBAAKK,IAAKW,EAAShB,MAAOG,UAAU,wCAFpC,cAAC,IAAD,CAAU0J,MAAO,IAAKC,OAAQ,IAAKC,QAAQ,QAMrD/I,EAASjB,SAKP,qCACI,sBAAKI,UAAU,4CAAf,UACI,mBAAGA,UAAU,iCAAb,SAA+Ca,EAASjB,WACxD,oBAAGI,UAAU,0BAAb,UACI,sBAAMA,UAAU,UAAhB,kBACCa,EAASlB,YAEd,mBAAGK,UAAU,+BAAb,SAA6Ca,EAASf,QACtD,oBAAGE,UAAU,+BAAb,UACI,sBAAMA,UAAU,WAAhB,wBACCa,EAASyC,eAGlB,sBAAKtD,UAAU,aAAf,UACI,mBAAGA,UAAU,0BAAb,kBACA,mBAAGA,UAAU,6CAAb,SAA2Da,EAASd,YAnB5E,qBAAKC,UAAU,iDAAf,SACI,cAAC,IAAD,CAAU0J,MAAO,IAAKC,OAAQ","file":"static/js/7.d5be8dda.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function Result({ username, fullName, photo, title, bio }) {\n    return (\n        <div className=\"w-3/4 min-w-full mx-auto text-gray-light mb-8\">\n            <div className=\"grid grid-cols-6 items-center\">\n                <div className=\"flex justify-end\">\n                    <Link to={`/p/${username}`}>\n                        <img\n                            src={photo}\n                            alt={`${username} profile photo`}\n                            className=\"w-16 h-16 rounded-full object-cover\"\n                        />\n                    </Link>\n                </div>\n                <div className=\"ml-6 col-span-5\">\n                    <Link to={`/p/${username}`}>\n                        <p className=\"text-lg\">{fullName}</p>\n                    </Link>\n                    <p className=\"text-sm\">\n                        <span className=\"text-xs\">ID: </span>\n                        {username}\n                    </p>\n                    <p className=\"text-sm pt-2\">{title}</p>\n                    <p className=\"text-xs break-words w-full max-w-md\">\n                        <span className=\"text-sm\">Bio: </span>\n                        {bio.length > 100 ? `${bio.substr(0, 100)}...` : bio}\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nResult.propTypes = {\n    username: PropTypes.string.isRequired,\n    fullName: PropTypes.string.isRequired,\n    photo: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    bio: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Result from './Result';\nimport useUser from '../../hooks/useUser';\n\nexport default function Results({ results, selectedFilter, searchKeyword }) {\n    const notFound = (\n        <div className=\"w-full\">\n            <p className=\"text-center text-gray-light\">No Results</p>\n        </div>\n    );\n\n    const {\n        userInfo: { userId },\n    } = useUser();\n\n    const getFilteredResults = () => {\n        const resultsWithoutUser = results.filter((item) => userId !== item.userId);\n        if (selectedFilter === 'all') {\n            const users = resultsWithoutUser\n                .filter(\n                    (user) =>\n                        user.username.includes(searchKeyword.toLowerCase()) ||\n                        user.fullName.toLowerCase().includes(searchKeyword.toLowerCase()) ||\n                        user.title.includes(searchKeyword.toLowerCase()) ||\n                        user.bio.includes(searchKeyword.toLowerCase())\n                )\n                .map((user, index) => (\n                    <Result\n                        key={index}\n                        username={user.username}\n                        fullName={user.fullName}\n                        photo={user.photo}\n                        title={user.title}\n                        bio={user.bio}\n                    />\n                ));\n            if (users.length > 0) {\n                return users;\n            } else {\n                return notFound;\n            }\n        } else if (selectedFilter === 'username') {\n            const users = resultsWithoutUser\n                .filter(\n                    (user) =>\n                        user.username.includes(searchKeyword.toLowerCase()) ||\n                        user.fullName.toLowerCase().includes(searchKeyword.toLowerCase())\n                )\n                .map((user, index) => (\n                    <Result\n                        key={index}\n                        username={user.username}\n                        fullName={user.fullName}\n                        photo={user.photo}\n                        title={user.title}\n                        bio={user.bio}\n                    />\n                ));\n            if (users.length > 0) {\n                return users;\n            } else {\n                return notFound;\n            }\n        } else if (selectedFilter === 'title') {\n            const users = resultsWithoutUser\n                .filter((user) => user.title.toLowerCase().includes(searchKeyword.toLowerCase()))\n                .map((user, index) => (\n                    <Result\n                        key={index}\n                        username={user.username}\n                        fullName={user.fullName}\n                        photo={user.photo}\n                        title={user.title}\n                        bio={user.bio}\n                    />\n                ));\n            if (users.length > 0) {\n                return users;\n            } else {\n                return notFound;\n            }\n        } else if (selectedFilter === 'bio') {\n            const users = resultsWithoutUser\n                .filter((user) => user.bio.toLowerCase().includes(searchKeyword.toLowerCase()))\n                .map((user, index) => (\n                    <Result\n                        key={index}\n                        username={user.username}\n                        fullName={user.fullName}\n                        photo={user.photo}\n                        title={user.title}\n                        bio={user.bio}\n                    />\n                ));\n            if (users.length > 0) {\n                return users;\n            } else {\n                return notFound;\n            }\n        }\n    };\n\n    // useEffect(() => {\n    //     if (results) {\n    //         if (selectedFilter === 'all') {\n    //             const users = results.filter(\n    //                 (user) =>\n    //                     user.username.includes(searchKeyword) ||\n    //                     user.fullName.includes(searchKeyword) ||\n    //                     user.title.includes(searchKeyword) ||\n    //                     user.bio.includes(searchKeyword)\n    //             );\n    //             setFilteredResults(users);\n    //         } else if (selectedFilter === 'username') {\n    //             const users = results.filter(\n    //                 (user) => user.username.includes(searchKeyword) || user.fullName.includes(searchKeyword)\n    //             );\n    //             setFilteredResults(users);\n    //         } else if (selectedFilter === 'title') {\n    //             const users = results.filter((user) => user.title.includes(searchKeyword));\n    //             setFilteredResults(users);\n    //         } else if (selectedFilter === 'bio') {\n    //             const users = results.filter((user) => user.bio.includes(searchKeyword));\n    //             setFilteredResults(users);\n    //         }\n    //     } else {\n    //         return null;\n    //     }\n    // }, [selectedFilter]);\n\n    // console.log(filteredResults);\n\n    // const getFilteredResults = () => {\n    //     if (selectedFilter === 'all') {\n    //         const users = results.filter(\n    //             (user) =>\n    //                 user.username.includes(searchKeyword) ||\n    //                 user.fullName.includes(searchKeyword) ||\n    //                 user.title.includes(searchKeyword) ||\n    //                 user.bio.includes(searchKeyword)\n    //         );\n    //         setFilteredResults(users);\n    //     } else if (selectedFilter === 'username') {\n    //         const users = results.filter(\n    //             (user) => user.username.includes(searchKeyword) || user.fullName.includes(searchKeyword)\n    //         );\n    //         setFilteredResults(users);\n    //     } else if (selectedFilter === 'title') {\n    //         const users = results.filter((user) => user.title.includes(searchKeyword));\n    //         setFilteredResults(users);\n    //     } else if (selectedFilter === 'bio') {\n    //         const users = results.filter((user) => user.bio.includes(searchKeyword));\n    //         setFilteredResults(users);\n    //     }\n    // };\n\n    return !results ? null : getFilteredResults();\n}\n\nResults.propTypes = {\n    results: PropTypes.array,\n    selectedFilter: PropTypes.string.isRequired,\n    searchKeyword: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport { categories } from '../../lib/categories';\nimport Results from './Results';\nimport { getSearchResults } from '../../services/firebase';\n\nexport default function SearchIndex() {\n    const [searchKeyword, setSearchKeyword] = useState('');\n    const [selectedCategory, setSelectedCategory] = useState('');\n    const [selectedFilter, setSelectedFilter] = useState('all');\n    const [results, setResults] = useState(null);\n    const [displayFilterButtons, setDisplayFilterButtons] = useState(false);\n\n    const isInvalid = searchKeyword === '' || selectedCategory === '';\n\n    const searchHandle = async (event) => {\n        event.preventDefault();\n        setSelectedFilter('all');\n        const result = await getSearchResults(selectedCategory);\n        setResults(result);\n        setDisplayFilterButtons(true);\n    };\n\n    return (\n        <div className=\"col-span-2 container\">\n            <div>\n                <form className=\"grid grid-cols-7 items-center\" onSubmit={searchHandle}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Search...\"\n                        className=\"bg-gray-light p-1 h-10 text-sm rounded-l border-r border-gray-primary col-span-4\"\n                        value={searchKeyword}\n                        onChange={({ target }) => setSearchKeyword(target.value)}\n                    />\n                    <select\n                        className=\"bg-gray-light p-1 h-10 text-sm text-gray-dark col-span-2 capitalize\"\n                        onChange={({ target }) => setSelectedCategory(target.value)}\n                        value={selectedCategory}\n                    >\n                        <option hidden value=\"\">\n                            Category\n                        </option>\n                        {categories.sort().map((category, index) => (\n                            <option key={index} value={category}>\n                                {category}\n                            </option>\n                        ))}\n                        <option value=\"others\">Others</option>\n                    </select>\n                    <button\n                        type=\"submit\"\n                        className={`bg-gray-dark text-gray-light h-10 p-1 text-sm rounded-r ${\n                            isInvalid && 'opacity-50'\n                        }`}\n                        disabled={isInvalid}\n                    >\n                        Search\n                    </button>\n                </form>\n            </div>\n            <div className={`flex justify-evenly text-gray-light h-10 mt-4 mb-8 ${!displayFilterButtons && 'hidden'}`}>\n                <button\n                    type=\"button\"\n                    className={`px-4 font-bold ${selectedFilter === 'all' && 'border-b  border-yellow-primary '}`}\n                    value=\"all\"\n                    onClick={({ target }) => setSelectedFilter(target.value)}\n                >\n                    All\n                </button>\n                <button\n                    type=\"button\"\n                    value=\"username\"\n                    className={`px-4 ${selectedFilter === 'username' && 'border-b  border-yellow-primary '}`}\n                    onClick={({ target }) => setSelectedFilter(target.value)}\n                >\n                    Username\n                </button>\n                <button\n                    type=\"button\"\n                    value=\"title\"\n                    className={`px-4 ${selectedFilter === 'title' && 'border-b  border-yellow-primary '}`}\n                    onClick={({ target }) => setSelectedFilter(target.value)}\n                >\n                    Title\n                </button>\n                <button\n                    type=\"button\"\n                    value=\"bio\"\n                    className={`px-4 ${selectedFilter === 'bio' && 'border-b  border-yellow-primary '}`}\n                    onClick={({ target }) => setSelectedFilter(target.value)}\n                >\n                    Bio\n                </button>\n            </div>\n            <Results results={results} selectedFilter={selectedFilter} searchKeyword={searchKeyword} />\n        </div>\n    );\n}\n","import React from 'react';\nimport Header from '../components/Header';\nimport SideProfile from '../components/SideProfile';\nimport SearchIndex from '../components/search';\n\nexport default function Search() {\n    return (\n        <div className=\"font-body\">\n            <Header />\n            <div className=\"w-sceen flex justify-center pt-24\">\n                <div className=\"grid grid-cols-3 w-full max-w-screen-lg mx-4\">\n                    <SearchIndex />\n                    <SideProfile />\n                </div>\n            </div>\n        </div>\n    );\n}\n","import { firebase, FieldValue } from '../lib/firebase';\nimport Axios from 'axios';\nconst cloudName = `${process.env.REACT_APP_CLOUD_NAME}`;\nconst presets = `${process.env.REACT_APP_PRESETS}`;\n\nexport async function doesUsernameExist(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    console.log(result.docs.length > 0);\n    return result.docs.length > 0;\n}\n\nexport async function getUserByUserId(userId) {\n    const result = await firebase.firestore().collection('users').where('userId', '==', userId).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function getUserByUsername(username) {\n    const result = await firebase.firestore().collection('users').where('username', '==', username).get();\n    const user = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return user;\n}\n\nexport async function IsUserFollowingProfileUser(username, profileUserId) {\n    const result = await firebase\n        .firestore()\n        .collection('users')\n        .where('username', '==', username)\n        .where('following', 'array-contains', profileUserId)\n        .get();\n    const [response = {}] = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    return response.userId;\n    // if (user.following.includes(profileUserId)) {\n    //     return true;\n    // } else {\n    //     return false;\n    // }\n}\n\nexport async function getFollowingPhotosByUserId(following, userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', 'in', following).get();\n    const userFollowedPhotos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    const userFollowedPhotosWithDetails = await Promise.all(\n        userFollowedPhotos.map(async (photo) => {\n            let userLikedPhoto = false;\n            if (photo.likes.includes(userId)) {\n                userLikedPhoto = true;\n            }\n            const [userInfo] = await getUserByUserId(photo.userId);\n            const { username } = userInfo;\n            return {\n                username,\n                ...photo,\n                userLikedPhoto,\n            };\n        })\n    );\n    return userFollowedPhotosWithDetails;\n}\n\nexport async function getPhotosbyUserId(userId) {\n    const result = await firebase.firestore().collection('photos').where('userId', '==', userId).get();\n    const photos = result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    return photos;\n}\n\nexport async function getLatestPhotoInfo(photoId, userId, profileUsername) {\n    const result = await firebase.firestore().collection('photos').where('photoId', '==', photoId).get();\n    const [photoWithDetails] = await result.docs.map((photo) => ({\n        ...photo.data(),\n        docId: photo.id,\n    }));\n    console.log(photoWithDetails);\n    let userLikedPhoto = false;\n    if (photoWithDetails.likes.includes(userId)) {\n        userLikedPhoto = true;\n    }\n    return { ...photoWithDetails, userLikedPhoto, username: profileUsername };\n}\n\nexport async function updateUserFollowing(userDocId, profileUserId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(userDocId)\n        .update({\n            following: isUserFollowing ? FieldValue.arrayRemove(profileUserId) : FieldValue.arrayUnion(profileUserId),\n        });\n}\n\nexport async function updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing) {\n    firebase\n        .firestore()\n        .collection('users')\n        .doc(profileUserDocId)\n        .update({\n            followers: isUserFollowing ? FieldValue.arrayRemove(userId) : FieldValue.arrayUnion(userId),\n        });\n}\n\nexport async function toggleFollow(userDocId, userId, profileUserDocId, profileUserId, isUserFollowing) {\n    await updateUserFollowing(userDocId, profileUserId, isUserFollowing);\n    await updateProfileUserFollowers(profileUserDocId, userId, isUserFollowing);\n}\n\n// export async function updateProfile(docId, fullName, category, title, bio) {\n//     firebase.firestore().collection('users').doc(docId).update({\n//         fullName,\n//         category,\n//         title,\n//         bio,\n//     });\n// }\n\nexport async function getFollowingOrFollowersList(userIds) {\n    const result = await Promise.all(\n        userIds.map(async (userId) => {\n            const [userList] = await getUserByUserId(userId);\n            console.log('userList', userList);\n            return userList;\n        })\n    );\n    console.log('result', result);\n    return result;\n}\n\nexport async function getSearchResults(category) {\n    const result = await firebase.firestore().collection('users').where('category', '==', category).get();\n    const users = result.docs.map((item) => ({\n        ...item.data(),\n        docId: item.id,\n    }));\n    console.log(users);\n    return users;\n}\n\nexport async function updateProfilePhoto(imageFile) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', presets);\n    formData.append('cloud_name', 'test');\n\n    Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData)\n        // .then((response) => console.log('response', response))\n        .then(({ data }) => {\n            console.log(JSON.stringify(data.secure_url));\n            url = JSON.stringify(data.secure_url);\n            console.log('url', url);\n        });\n    return url;\n}\n\nexport async function updateProfile(docId, fullName, category, title, bio, imageFile) {\n    if (imageFile) {\n        let url = '';\n        const formData = new FormData();\n        formData.append('file', imageFile[0]);\n        formData.append('upload_preset', presets);\n\n        await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n            url = data.secure_url;\n            console.log('url', url);\n        });\n\n        firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n            photo: url,\n        });\n    } else {\n        firebase.firestore().collection('users').doc(docId).update({\n            fullName,\n            category,\n            title,\n            bio,\n        });\n    }\n}\n\nexport async function uploadNewPost(caption, imageFile, userId) {\n    let url = '';\n    const formData = new FormData();\n    formData.append('file', imageFile[0]);\n    formData.append('upload_preset', presets);\n\n    await Axios.post(`https://api.cloudinary.com/v1_1/${cloudName}/image/upload`, formData).then(({ data }) => {\n        url = data.secure_url;\n        console.log('url', url);\n    });\n\n    await firebase\n        .firestore()\n        .collection('photos')\n        .add({\n            caption,\n            comments: [],\n            dateCreated: Date.now(),\n            imageSrc: url,\n            likes: [],\n            photoId: userId + Date.now(),\n            userId,\n            userLatitude: 34.0522,\n            userLongitude: -188.2437,\n        });\n}\n","import { useContext, useState, useEffect } from 'react';\nimport UserContext from '../context/user';\nimport { getUserByUserId } from '../services/firebase';\n\nexport default function useUser() {\n    const { user } = useContext(UserContext);\n    const [activeUser, setActiveUser] = useState({});\n\n    useEffect(() => {\n        async function getUserInfoByUserId() {\n            const [result] = await getUserByUserId(user.uid);\n            setActiveUser(result);\n        }\n        if (user?.uid) {\n            getUserInfoByUserId();\n        }\n    }, [user]);\n    return { userInfo: activeUser };\n}\n","export default __webpack_public_path__ + \"static/media/logo.6dc95425.png\";","import React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport logo from '../images/logo.png';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\nimport UserContext from '../context/user';\nimport FirebaseContext from '../context/firebase';\nimport { getUserByUserId } from '../services/firebase';\nimport useUser from '../hooks/useUser';\n\nexport default function Header() {\n    // const [userInfo, setUserInfo] = useState('');\n    const { user } = useContext(UserContext);\n    const { firebase } = useContext(FirebaseContext);\n    const history = useHistory();\n    const handleSignOut = () => {\n        firebase.auth().signOut();\n        history.push(ROUTES.LOGIN);\n    };\n\n    const { userInfo } = useUser();\n\n    // useEffect(() => {\n    //     const getUserInfo = async () => {\n    //         const [result] = await getUserByUserId(user.uid);\n    //         setUserInfo(result);\n    //     };\n    //     if (user?.uid) {\n    //         getUserInfo();\n    //     }\n    // }, [user]);\n\n    return (\n        <div className=\"bg-gray-dark w-screen h-14 flex justify-center items-center fixed z-50\">\n            <div className=\"max-w-screen-xl w-screen h-14 flex justify-between items-center\">\n                <Link to={ROUTES.DASHBOARD}>\n                    <h1 className=\"h-14 flex\">\n                        <img src={logo} alt=\"artisto\" />\n                    </h1>\n                </Link>\n                <div className=\"flex flex-row items-center\">\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.UPLOAD_IMAGE}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 4v16m8-8H4\" />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.SEARCH}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"pr-4\">\n                        <Link to={ROUTES.MESSAGES}>\n                            <svg\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                                className=\"h-8 w-8 text-gray-light\"\n                                fill=\"none\"\n                                viewBox=\"0 0 24 24\"\n                                stroke=\"currentColor\"\n                            >\n                                <path\n                                    strokeLinecap=\"round\"\n                                    strokeLinejoin=\"round\"\n                                    strokeWidth=\"2\"\n                                    d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n                                />\n                            </svg>\n                        </Link>\n                    </div>\n                    <div className=\"flex h-14 items-center pr-4\">\n                        <Link to={`/p/${userInfo.username}`}>\n                            <img src={userInfo.photo} className=\"h-10 w-10 rounded-full object-cover\" />\n                        </Link>\n                    </div>\n                    <div className=\"pr-4 cursor-pointer\" onClick={handleSignOut}>\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            className=\"h-8 w-8 text-gray-light\"\n                            fill=\"none\"\n                            viewBox=\"0 0 24 24\"\n                            stroke=\"currentColor\"\n                        >\n                            <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth=\"2\"\n                                d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                            />\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nHeader.propTypes = {\n    userInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n    }),\n};\n","export const categories = ['web design', 'video game', 'animation', 'graphic design', 'painting', 'illustration'];\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport UserContext from '../context/user';\nimport { getUserByUserId } from '../services/firebase';\nimport { Link } from 'react-router-dom';\nimport useUser from '../hooks/useUser';\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton';\n\nexport default function SideProfile() {\n    // const [userInfo, setUserInfo] = useState({});\n    // const { user } = useContext(UserContext);\n    // useEffect(() => {\n    //     document.title = 'Artisto';\n    // }, []);\n\n    // useEffect(() => {\n    //     const getUserInfo = async () => {\n    //         const [result] = await getUserByUserId(user.uid);\n    //         setUserInfo(result);\n    //         console.log('result', result);\n    //     };\n    //     if (user) {\n    //         getUserInfo();\n    //     }\n    // }, [user]);\n\n    const { userInfo } = useUser();\n\n    return (\n        <SkeletonTheme color=\"#494848\" highlightColor=\"#F1F1F1\">\n            <div className=\"flex pt-4 justify-center\">\n                <div className=\"mx-auto justify-center flex-col w-full sticky top-0 max-h-screen pt-20\">\n                    <div className=\"flex justify-center\">\n                        <Link to={`/p/${userInfo.username}`}>\n                            {!userInfo.photo ? (\n                                <Skeleton width={144} height={144} circle={true} />\n                            ) : (\n                                <img src={userInfo.photo} className=\"h-36 w-36 rounded-full object-cover\" />\n                            )}\n                        </Link>\n                    </div>\n                    {!userInfo.fullName ? (\n                        <div className=\"flex justify-center flex-col items-center mt-4\">\n                            <Skeleton width={180} height={200} />\n                        </div>\n                    ) : (\n                        <>\n                            <div className=\"flex justify-center flex-col items-center\">\n                                <p className=\"font-bold mt-4 text-gray-light\">{userInfo.fullName}</p>\n                                <p className=\"text-sm text-gray-light\">\n                                    <span className=\"text-xs\">ID: </span>\n                                    {userInfo.username}\n                                </p>\n                                <p className=\"text-sm mt-4 text-gray-light\">{userInfo.title}</p>\n                                <p className=\"mt-2 text-sm text-gray-light\">\n                                    <span className=\"text-xs \">Category: </span>\n                                    {userInfo.category}\n                                </p>\n                            </div>\n                            <div className=\"mt-2 px-20\">\n                                <p className=\"text-sm text-gray-light\">Bio:</p>\n                                <p className=\"text-xs w-full break-words text-gray-light\">{userInfo.bio}</p>\n                            </div>\n                        </>\n                    )}\n                </div>\n            </div>\n        </SkeletonTheme>\n    );\n}\n\nSideProfile.propTypes = {\n    userInfo: PropTypes.shape({\n        dateCreated: PropTypes.number,\n        email: PropTypes.string,\n        followers: PropTypes.array,\n        following: PropTypes.array,\n        fullName: PropTypes.string,\n        userId: PropTypes.string,\n        username: PropTypes.string,\n        category: PropTypes.string,\n        photo: PropTypes.string,\n        title: PropTypes.string,\n        bio: PropTypes.string,\n    }),\n};\n"],"sourceRoot":""}